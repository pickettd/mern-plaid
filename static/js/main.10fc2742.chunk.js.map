{"version":3,"sources":["img/waiwai-logo.svg","img/spend-plan/food-background.svg","img/spend-plan/transportation.svg","img/spend-plan/gifts.svg","img/spend-plan/entertainment.svg","img/spend-plan/personal.svg","img/spend-plan/question_mark.svg","utils/auth0-provider-with-history.js","utils/loading.js","utils/privateRoute.js","components/profile/LogoutButton.js","components/layout/Header.js","components/layout/Footer.js","components/profile/LoginButton.js","components/profile/SignupButton.js","components/layout/HomePage.js","utils/currencyFormatter.js","utils/percentFormatter.js","components/layout/SpendRangeHeader.js","components/spend/SpendCategoryCard.js","components/spend/SpendStory.js","components/spend/SpendPlanRow.js","components/spend/SpendPlan.js","components/spend/ManageTransactions.js","utils/processTransactionList.js","actions/types.js","actions/accountActions.js","utils/plaidButton.js","components/profile/BankAccountsPage.js","components/profile/UserProfilePage.js","reducers/authReducer.js","reducers/reduxMockData.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/index.js","components/layout/TransactionBootstrap.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","push","returnTo","pathname","audience","Loading","className","src","alt","PrivateRoute","component","args","withAuthenticationRequired","onRedirecting","LogoutButton","logout","useAuth0","Button","onClick","variant","connect","state","userName","auth","user","name","props","isAuthenticated","Navbar","expand","to","NavItem","Brand","href","Logo","width","height","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","renderMenuOnMount","title","Item","Link","Footer","Date","getFullYear","LoginButton","loginWithRedirect","SignupButton","screen_hint","HomePage","currencyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","noDecimalCurrencyFormatter","maximumFractionDigits","percentFormatter","spendRangeDaysSelected","plaid","mainHeaderText","subHeaderText","budgets","categoryMap","spendingByCategory","budgetAmount","spentAmount","mainValueDisplay","subValueDisplay","colorBackgroundClass","thisCategoryLogo","questionMarkLogo","categoryName","foodLogo","transportationLogo","giftsLogo","entertainmentLogo","personalLogo","underBudget","format","budgetAmountDisplay","SpendStory","this","auth0","incomeSum","paycheckSum","otherIncomeSum","spendingSum","totalTransactionCount","reviewedTransactionCount","expenseBudgetSum","sortedCategoriesUnderBudget","length","map","i","key","sortedCategoriesOverBudget","Component","withAuth0","category","bankName","defaultValue","categoriesThisSpendRange","Table","hover","htmlFor","data-style","disabled","value","transactions","accounts","transactionMUIColumns","label","options","filter","customBodyRenderLite","dataIndex","transactionsData","forEach","account","transaction","accountName","date","amount","data","columns","filterType","selectableRows","sortOrder","direction","processTransactionList","dispatch","payloadObject","income","spending","categoriesThisMonth","categoryCount","displayCategory","reviewed","x","sort","a","b","type","payload","setAxiosAuth","token","axios","defaults","headers","common","setAccountsLoading","getTransactions","accessToken","plaidData","getState","setTransactionsLoading","post","then","res","needUpdate","catch","err","console","log","DeleteAccountButton","PlaidToExport","refreshAccount","addAccount","getAccessTokenSilently","newAccountOnSuccess","useCallback","metadata","public_token","refreshAccountOnSuccess","config","clientName","publicKey","env","product","onSuccess","existingAccount","toRefresh","publicToken","usePlaidLink","open","ready","buttonText","displayName","mapDispatchToProps","concat","institution","institution_id","PlaidButton","accountsLoading","listAccounts","_id","institutionName","addButton","daysOption","isEmpty","require","initialState","iat","exp","loading","Shops","Travel","Recreation","Personal","userId","itemId","institutionId","__v","account_id","account_owner","authorized_date","category_id","iso_currency_code","address","city","lat","lon","store_number","zip","merchant_name","payment_channel","payment_meta","by_order_of","payee","payer","payment_method","payment_processor","ppd_id","reason","reference_number","pending","pending_transaction_id","transaction_id","transaction_type","unofficial_currency_code","transactionsLoading","REACT_APP_LIVEDATA","combineReducers","action","errors","transactionDispatchToProps","UseTransactionBootstrap","useEffect","accountDispatchToProps","getAccounts","get","store","configureStore","reducer","rootReducer","Routing","isLoading","exact","path","SpendPlan","ManageTransactions","UserProfilePage","BankAccountsPage","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.10fc2742.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/waiwai-logo.e57023e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-background.b4828793.svg\";","module.exports = __webpack_public_path__ + \"static/media/transportation.7ab81113.svg\";","module.exports = __webpack_public_path__ + \"static/media/gifts.c6916d8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/entertainment.f805bade.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal.56aa4ee5.svg\";","module.exports = __webpack_public_path__ + \"static/media/question_mark.c58cebc5.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin + process.env.PUBLIC_URL}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from \"react\";\nconst loading =\n  \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"./loading.js\";\n\nconst PrivateRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />,\n    })}\n    {...args}\n  />\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <Button\n      onClick={() =>\n        logout({\n          returnTo: window.location.origin + process.env.PUBLIC_URL,\n        })\n      }\n      variant=\"danger\"\n      className=\"btn-margin\"\n    >\n      Log Out\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport NavItem from \"react-bootstrap/NavItem\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Logo from \"../../img/waiwai-logo.svg\";\nimport LogoutButton from \"../../components/profile/LogoutButton.js\";\n\nconst Header = (props) => {\n  const { isAuthenticated, user } = useAuth0();\n  const { name } = user;\n  return (\n    <>\n      <Navbar expand=\"lg\">\n        <LinkContainer to=\"/spend-story\">\n          <NavItem>\n            <Navbar.Brand href=\"#\">\n              <img\n                alt=\"Waiwai Logo\"\n                src={Logo}\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />\n              Waiwai\n            </Navbar.Brand>\n          </NavItem>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            {isAuthenticated ? (\n              <>\n                {/*<LinkContainer to=\"/\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n            </LinkContainer>\n            <div className=\"mr-auto navbar-nav\">\n              <LinkContainer to=\"/spend-story\">\n                <Nav.Link href=\"#\">spend</Nav.Link>\n              </LinkContainer>*/}\n\n                <div className=\"mr-auto navbar-nav\">\n                  {/*hover dropdown test*/}\n                  <NavDropdown\n                    renderMenuOnMount={true}\n                    title=\"spend\"\n                    id=\"hover-nav-dropdown\"\n                    className=\"dropdown-menu-left\"\n                  >\n                    <LinkContainer to=\"/spend-story\">\n                      <NavDropdown.Item>spend story</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/manage-transactions\">\n                      <NavDropdown.Item>view transactions</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/spend-plan\">\n                      <NavDropdown.Item>manage spend plan</NavDropdown.Item>\n                    </LinkContainer>\n                  </NavDropdown>\n\n                  {/*hover dropdown test END*/}\n\n                  <LinkContainer to=\"/save-story\">\n                    <Nav.Link href=\"#\">save</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/borrow-story\">\n                    <Nav.Link href=\"#\">borrow</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/plan-story\">\n                    <Nav.Link href=\"#\">plan</Nav.Link>\n                  </LinkContainer>\n                </div>\n                <NavDropdown\n                  title={name}\n                  id=\"basic-nav-dropdown\"\n                  className=\"ml-auto dropdown-menu-right\"\n                >\n                  <LinkContainer to=\"/user-profile\">\n                    <NavDropdown.Item href=\"#\">Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/bank-accounts\">\n                    <NavDropdown.Item href=\"#\">Bank Accounts</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item className=\"notButton\" href=\"#\">\n                    <LogoutButton />\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <></>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userName: state.auth.user.name,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(Header);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"mr-auto footer-nav\">\n            <Link to=\"/spend-story\">spend</Link>\n            <Link to=\"/save-story\">save</Link>\n            <Link to=\"/borrow-story\">borrow</Link>\n            <Link to=\"/plan-story\">plan</Link>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <p className=\"col-sm\">\n            <small>\n              &copy;{new Date().getFullYear()} WAIWAI | All rights reserved |\n              Terms of service | Privacy{\" \"}\n            </small>\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button\n      onClick={() => loginWithRedirect()}\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Log In\n    </Button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst SignupButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button\n      onClick={() =>\n        loginWithRedirect({\n          screen_hint: \"signup\",\n        })\n      }\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Sign Up\n    </Button>\n  );\n};\n\nexport default SignupButton;\n","import React from \"react\";\nimport LoginButton from \"../../components/profile/LoginButton.js\";\nimport SignupButton from \"../../components/profile/SignupButton.js\";\n\nconst HomePage = (props) => {\n  return (\n    <div className=\"full-page mountain-background\">\n      <div className=\"login-box  p-5\">\n        <LoginButton />\n        <br />\n        <SignupButton />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n});\n\nexport const noDecimalCurrencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n});\n","const percentFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n});\n\nexport default percentFormatter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SpendRangeHeader = (props) => {\n  return (\n    <>\n      <div className=\"section-space\"></div>\n      <div className=\"section section-header-generic\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-sm-6 offset-sm-3 justify-content-center text-center\">\n              <h1>\n                {props.mainHeaderText}\n                <br />\n                <span className=\"small bottom\">{props.subHeaderText}</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendRangeHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { noDecimalCurrencyFormatter } from \"../../utils/currencyFormatter\";\nimport percentFormatter from \"../../utils/percentFormatter\";\nimport foodLogo from \"../../img/spend-plan/food-background.svg\";\nimport transportationLogo from \"../../img/spend-plan/transportation.svg\";\nimport giftsLogo from \"../../img/spend-plan/gifts.svg\";\nimport entertainmentLogo from \"../../img/spend-plan/entertainment.svg\";\nimport personalLogo from \"../../img/spend-plan/personal.svg\";\nimport questionMarkLogo from \"../../img/spend-plan/question_mark.svg\";\n\nconst SpendCategoryCard = (props) => {\n  const budgetAmount = props.budgetAmount;\n  const spentAmount = props.spentAmount;\n\n  let mainValueDisplay = \"\";\n  let subValueDisplay = \"\";\n  let colorBackgroundClass = \"\";\n  let thisCategoryLogo = questionMarkLogo;\n\n  if (props.categoryName === \"Food and Drink\") {\n    thisCategoryLogo = foodLogo;\n  }\n  if (props.categoryName === \"Travel\") {\n    thisCategoryLogo = transportationLogo;\n  }\n  if (props.categoryName === \"Shops\") {\n    thisCategoryLogo = giftsLogo;\n  }\n  if (props.categoryName === \"Recreation\") {\n    thisCategoryLogo = entertainmentLogo;\n  }\n  if (props.categoryName === \"Personal\") {\n    thisCategoryLogo = personalLogo;\n  }\n  if (props.underBudget) {\n    colorBackgroundClass = \"dark-green-background\";\n    mainValueDisplay = noDecimalCurrencyFormatter.format(\n      budgetAmount - spentAmount\n    );\n    if (budgetAmount !== 0) {\n      subValueDisplay = percentFormatter.format(spentAmount / budgetAmount);\n    }\n  } else {\n    // this is an over budget category\n    colorBackgroundClass = \"brown-yellow-background\";\n    subValueDisplay = noDecimalCurrencyFormatter.format(spentAmount);\n    if (budgetAmount !== 0) {\n      mainValueDisplay = percentFormatter.format(spentAmount / budgetAmount);\n    }\n  }\n\n  const budgetAmountDisplay = noDecimalCurrencyFormatter.format(budgetAmount);\n\n  return (\n    <div className=\"card card-blog\">\n      <div className={\"card-image \" + colorBackgroundClass}>\n        <img className=\"img \" alt=\"Category Name\" src={thisCategoryLogo} />\n        <div className=\"card-img-overlay\">\n          <h5>{props.categoryName}</h5>\n        </div>\n      </div>\n      <div className=\"card-body text-center\">\n        <h4 className=\"card-title text-left\">\n          {mainValueDisplay}\n          <span className=\"small bottom\">\n            <br />\n            {props.underBudget ? \"Available\" : \"Spent\"}\n          </span>\n        </h4>\n        <div className=\"card-description\">graph</div>\n        <div className=\"card-footer\">\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <p className=\" text-left\">\n                {budgetAmountDisplay}\n                <span className=\"small bottom\">\n                  <br />\n                  Budget\n                </span>\n              </p>\n            </div>\n            <div className=\"col\">\n              <p className=\" text-left\">\n                {subValueDisplay}\n                <span className=\"small bottom\">\n                  <br />\n                  Spent\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  categoryMap: state.auth.categoryMap,\n  spendingByCategory: state.plaid.spendingByCategory,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendCategoryCard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withAuth0 } from \"@auth0/auth0-react\";\nimport { Link } from \"react-router-dom\";\nimport { noDecimalCurrencyFormatter } from \"../../utils/currencyFormatter\";\nimport percentFormatter from \"../../utils/percentFormatter\";\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\nimport SpendCategoryCard from \"./SpendCategoryCard\";\n\nclass SpendStory extends Component {\n  render() {\n    const { user } = this.props.auth0;\n    const { name } = user;\n    const { plaid, auth } = this.props;\n    return (\n      <>\n        <div>\n          <SpendRangeHeader mainHeaderText={name} subHeaderText=\"Spend Story\" />\n          <div className=\"section income-spend\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-left\">\n                    <h1 className=\"large-number\">\n                      <span className=\"small top\">Income</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.incomeSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Paycheck</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.paycheckSum)}\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Other Source</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.otherIncomeSum)}\n                    </h3>\n                  </div>\n                </div>\n\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-right\">\n                    <h1 className=\"large-number\">\n                      <span className=\"small top\">Spent</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.spendingSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Transactions</span>\n                      <br />\n                      {plaid.totalTransactionCount}\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Transactions reviewed</span>\n                      <br />\n                      {percentFormatter.format(\n                        plaid.reviewedTransactionCount /\n                          plaid.totalTransactionCount\n                      )}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4 text-center\">\n                  <Link to=\"/manage-transactions\" className=\"btn mt-4\">\n                    view transactions\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spending-plan\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <h1 className=\"darktext\">\n                        Spending Plan\n                        <br />\n                        <span className=\"small bottom\">Breakdown</span>\n                      </h1>\n                    </div>\n                    <div className=\"row mt-5 mb-3\">\n                      <h3 className=\"large-number\">\n                        {/* Note, Joe's explanation of budget available is\n                        supposed to be what you earned last 30 days versus what you\n                        budgeted to spend for 30 days */}\n                        {noDecimalCurrencyFormatter.format(\n                          plaid.incomeSum - auth.expenseBudgetSum\n                        )}\n                        <br />\n                        <span className=\"small bottom\">budget available</span>\n                      </h3>\n                    </div>\n                    <div className=\"row\">\n                      <Link to=\"/spend-plan\" className=\"btn\">\n                        manage spend plan\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-categories\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1>Spend Plan</h1>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  <h3 className=\"large-number\">\n                    {/* Note, Joe's explanation of budget estimate is\n                        supposed to be the sum of all the expense budgets */}\n                    {noDecimalCurrencyFormatter.format(auth.expenseBudgetSum)}\n                    <br />\n                    <span className=\"small bottom\">budget estimate</span>\n                  </h3>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8 pt-4 pb-4\">\n                  <h4>\n                    On track\n                    <br />\n                    <span className=\"small bottom\">\n                      {plaid.sortedCategoriesUnderBudget.length}\n                      {plaid.sortedCategoriesUnderBudget.length === 1\n                        ? \" category\"\n                        : \" catiegories\"}\n                    </span>\n                  </h4>\n                </div>\n              </div>\n              <div className=\"row\">\n                {plaid.sortedCategoriesUnderBudget.map((categoryName, i) => {\n                  return (\n                    <div key={i} className=\"col-lg-3 col-md-4 col-sm-6\">\n                      <SpendCategoryCard\n                        categoryName={categoryName}\n                        underBudget={true}\n                        budgetAmount={auth.budgets[categoryName]}\n                        spentAmount={plaid.spendingByCategory[categoryName]}\n                      ></SpendCategoryCard>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8 pt-4 pb-4\">\n                  <h4>\n                    Needs Work\n                    <br />\n                    <span className=\"small bottom\">\n                      {plaid.sortedCategoriesOverBudget.length}\n                      {plaid.sortedCategoriesOverBudget.length === 1\n                        ? \" category\"\n                        : \" catiegories\"}\n                    </span>\n                  </h4>\n                </div>\n              </div>\n              <div className=\"row\">\n                {plaid.sortedCategoriesOverBudget.map((categoryName, i) => {\n                  return (\n                    <div\n                      key={categoryName}\n                      className=\"col-lg-3 col-md-4 col-sm-6\"\n                    >\n                      <SpendCategoryCard\n                        categoryName={categoryName}\n                        underBudget={false}\n                        budgetAmount={auth.budgets[categoryName]}\n                        spentAmount={plaid.spendingByCategory[categoryName]}\n                      ></SpendCategoryCard>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-plan-footer\">\n            <div className=\"container\">\n              <div className=\"row mt-5\">\n                <div className=\"col-md-6 offset-md-1\">\n                  <h2 className=\"large-number\">\n                    <span className=\"small top\">Savings</span>\n                    <br />\n                    {noDecimalCurrencyFormatter.format(\n                      plaid.incomeSum - plaid.spendingSum\n                    )}\n                  </h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nSpendStory.propTypes = {\n  plaid: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  plaid: state.plaid,\n  auth: state.auth,\n});\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withAuth0(SpendStory));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\n\nconst SpendPlanRow = (props) => {\n  if (\n    props.category.bankName !== \"Transfer\" &&\n    props.category.bankName !== \"Payment\"\n  ) {\n    return (\n      <tr key={props.category.bankName}>\n        <td>{props.category.bankName}</td>\n        <td>\n          {props.categoryMap && props.categoryMap[props.category.bankName] ? (\n            <input\n              defaultValue={props.categoryMap[props.category.bankName]}\n            ></input>\n          ) : (\n            <input />\n          )}\n          <button className=\"btn secondary\">Save</button>\n        </td>\n        <td>\n          {props.budgets && props.budgets[props.category.bankName] ? (\n            <input\n              defaultValue={currencyFormatter.format(\n                props.budgets[props.category.bankName]\n              )}\n            ></input>\n          ) : (\n            <input />\n          )}\n          <button className=\"btn secondary\">Save</button>\n        </td>\n        <td>\n          {currencyFormatter.format(\n            props.spendingByCategory[props.category.bankName]\n          )}\n        </td>\n      </tr>\n    );\n  } else {\n    return <></>;\n  }\n};\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  categoryMap: state.auth.categoryMap,\n  spendingByCategory: state.plaid.spendingByCategory,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendPlanRow);\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { connect } from \"react-redux\";\nimport SpendPlanRow from \"./SpendPlanRow\";\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\n\nconst SpendPlan = (props) => {\n  return (\n    <>\n      <SpendRangeHeader mainHeaderText=\"Spend\" subHeaderText=\"Plan\" />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Income</h2>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>Bank category name</th>\n                    <th>My category name</th>\n                    <th>Budget for {props.spendRangeDaysSelected} days</th>\n                    <th>Earned last {props.spendRangeDaysSelected} days</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Income Total</td>\n                    <td></td>\n                    <td></td>\n                    <td>{currencyFormatter.format(props.incomeSum)}</td>\n                  </tr>\n                  <tr>\n                    <td>Paycheck Total</td>\n                    <td></td>\n                    <td></td>\n                    <td>{currencyFormatter.format(props.paycheckSum)}</td>\n                  </tr>\n                  <tr>\n                    <td>Other Income Total</td>\n                    <td></td>\n                    <td></td>\n                    <td>{currencyFormatter.format(props.otherIncomeSum)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n              <div className=\"mt-5\">\n                <h3>Add Income Sources</h3>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <label htmlFor=\"pay-frequency\">Paycheck Frequency</label>\n                  <br />\n                  <select\n                    className=\"selectpicker form-control custom-select\"\n                    data-style=\"btn btn-default\"\n                    defaultValue=\"0\"\n                  >\n                    <option disabled value=\"0\">\n                      {\" \"}\n                      Choose date range\n                    </option>\n                    <option value=\"1\">Weekly</option>\n                    <option value=\"1\">Bi-weekly</option>\n                    <option value=\"1\">Bi-monthly</option>\n                    <option value=\"1\">Monthly</option>\n                  </select>\n                  <br />\n                  <label className=\"mt-4\">Paycheck amount</label>\n                  <br />\n                  <input className=\"form-control\"></input>\n                </div>\n                <div className=\"col\">\n                  <label htmlFor=\"other-frequency\">\n                    Other Income Frequency\n                  </label>\n                  <br />\n                  <select\n                    className=\"selectpicker form-control custom-select\"\n                    data-style=\"btn btn-default\"\n                    defaultValue=\"0\"\n                  >\n                    <option disabled value=\"0\">\n                      {\" \"}\n                      Choose date range\n                    </option>\n                    <option value=\"1\">Weekly</option>\n                    <option value=\"1\">Bi-weekly</option>\n                    <option value=\"1\">Bi-monthly</option>\n                    <option value=\"1\">Monthly</option>\n                  </select>\n                  <br />\n                  <label className=\"mt-4\">Other Income Amount</label>\n                  <br />\n                  <input className=\"form-control\"></input>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button className=\"btn secondary mt-4\">Save</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Expenses</h2>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>Bank category name</th>\n                    <th>My category name</th>\n                    <th>Budget for {props.spendRangeDaysSelected} days</th>\n                    <th>Spent last {props.spendRangeDaysSelected} days</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.categoriesThisSpendRange.map((category, i) => {\n                    return (\n                      <SpendPlanRow key={i} category={category}></SpendPlanRow>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  incomeSum: state.plaid.incomeSum,\n  paycheckSum: state.plaid.paycheckSum,\n  otherIncomeSum: state.plaid.otherIncomeSum,\n  categoriesThisSpendRange: state.plaid.categoriesThisSpendRange,\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendPlan);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport MUIDataTable from \"mui-datatables\"; // https://github.com/gregnb/mui-datatables\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\n\nconst ManageTransactions = (props) => {\n  // Setting up mui table\n  const transactionMUIColumns = [\n    { label: \"Date\", name: \"date\" },\n    { label: \"Account\", name: \"account\" },\n    { label: \"Name\", name: \"name\" },\n    { label: \"Amount\", name: \"amount\" },\n    { label: \"Category\", name: \"category\" },\n    {\n      label: \"Update\",\n      name: \"update\",\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex) => {\n          return <button className=\"btn secondary\">Change Category</button>;\n        },\n      },\n    },\n    {\n      label: \"Reviewed?\",\n      name: \"reviewed\",\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex) => {\n          return <button className=\"btn secondary\">&#x2713;</button>;\n        },\n      },\n    },\n  ];\n  const optionsMUI = {\n    filterType: \"checkbox\",\n    selectableRows: \"none\",\n    sortOrder: { name: \"date\", direction: \"desc\" },\n  };\n\n  let transactionsData = [];\n  if (props.transactions) {\n    props.transactions.forEach(function (account) {\n      account.transactions.forEach(function (transaction) {\n        transactionsData.push({\n          account: account.accountName,\n          date: transaction.date,\n          category: transaction.category[0],\n          name: transaction.name,\n          amount: currencyFormatter.format(transaction.amount),\n        });\n      });\n    });\n  }\n  return (\n    <>\n      <SpendRangeHeader mainHeaderText=\"Transaction\" subHeaderText=\"History\" />\n      {/* Commenting this out because in this version we won't have need/want/save */}\n      {/*<div className=\"section section-donuts\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-lg-3 col-6\">Donut Graph</div>\n              <div className=\"col-lg-3 col-6\">\n                <h2 className=\"\">70%</h2>\n              </div>\n              <div className=\"col-lg-3 col-6\">Graph</div>\n              <div className=\"col-lg-3 col-6\">Graph</div>\n            </div>\n          </div>\n        </div>*/}\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <MUIDataTable\n            title={\"Manage Transactions\"}\n            data={transactionsData}\n            columns={transactionMUIColumns}\n            options={optionsMUI}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  transactions: state.plaid.transactions,\n  accounts: state.plaid.accounts,\n});\nconst mapDispatchToProps = {};\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTransactions);\n","import { SET_TRANSACTION_DATA } from \"../actions/types\";\n\n// NOTE: this is not the redux way, this should be designed differently in next refactor\nconst processTransactionList = (transactions, budgets) => (dispatch) => {\n  // This payloadObject is what the demo data looks like right now\n  const payloadObject = {\n    /*incomeSum: 1001,\n    paycheckSum: 500,\n    otherIncomeSum: 500,\n    spendingSum: 4391.92,\n    totalTransactionCount: 50,\n    reviewedTransactionCount: 45,\n    categoriesThisSpendRange: [\n      { bankName: \"Food and Drink\", x: 1, name: \"\" },\n      { bankName: \"Shops\", x: 2, name: \"\" },\n      { bankName: \"Travel\", x: 3, name: \"\" },\n      { bankName: \"Recreation\", x: 4, name: \"\" },\n      { bankName: \"Personal\", x: 5, name: \"\" },\n    ],\n    spendingByCategory: {\n      \"Food and Drink\": 2211.46,\n      Shops: 1000,\n      Travel: 10233.46,\n      Recreation: 157,\n      Personal: 50,\n    },\n    sortedCategoriesUnderBudget: [\"Personal\"],\n    sortedCategoriesOverBudget: [\n      \"Food and Drink\",\n      \"Recreation\",\n      \"Shops\",\n      \"Travel\",\n    ],*/\n  };\n  let sortedCategoriesUnderBudget = [];\n  let sortedCategoriesOverBudget = [];\n  let totalTransactionCount = 0;\n  let reviewedTransactionCount = 0;\n  let paycheckSum = 0;\n  let otherIncomeSum = 0;\n\n  //let profit = 0;\n  let income = 0;\n  let spending = 0;\n  const spendingByCategory = {};\n  const categoriesThisMonth = [];\n  let categoryCount = 1;\n  //const spendingByDate = {};\n  //const datesLastThirty = [];\n  //const dateNow = new Date();\n  if (transactions && transactions.length) {\n    transactions.forEach(function (account) {\n      account.transactions.forEach(function (transaction) {\n        let displayCategory = transaction.category[0];\n        /*if (user.categoryMap && user.categoryMap[transaction.category[0]]) {\n          displayCategory = user.categoryMap[transaction.category[0]];\n        }*/\n        // By default, the plaid transactions are positive for spent money and negative for earned money - so we reverse that\n        transaction.amount *= -1;\n        if (\n          transaction.category[0] !== \"Transfer\" &&\n          transaction.category[0] !== \"Payment\"\n        ) {\n          totalTransactionCount++;\n          // NOTE: none of our transactions from the API will have these right now\n          //--------------------------------------------------------------------\n          if (transaction.reviewed) {\n            reviewedTransactionCount++;\n          }\n          // Income is done later in income section\n          /*if (transaction.category[1] === \"Paycheck\") {\n            paycheckSum += transaction.amount;\n          }\n          if (transaction.category[1] === \"Other Income\") {\n            otherIncomeSum += transaction.amount;\n          }*/\n          //--------------------------------------------------------------------\n          //profit += transaction.amount;\n          if (transaction.amount < 0) {\n            spending += -1 * transaction.amount;\n\n            // This if/else sets up the spending category object with category as key and amount total as value\n            if (spendingByCategory[transaction.category[0]]) {\n              spendingByCategory[transaction.category[0]] +=\n                -1 * transaction.amount;\n            } else {\n              // This is the case that the category hasn't been seen before\n              categoriesThisMonth.push({\n                x: categoryCount,\n                bankName: transaction.category[0],\n                name: displayCategory,\n              });\n              categoryCount++;\n              spendingByCategory[transaction.category[0]] =\n                -1 * transaction.amount;\n            }\n\n            /* Don't think we need spending by date in mlp\n            // This if/else sets up the spending date object with date as key and amount total as value\n            if (spendingByDate[transaction.date]) {\n              spendingByDate[transaction.date] += -1 * transaction.amount;\n            } else {\n              // This is the case that the date hasn't been seen before\n              spendingByDate[transaction.date] = -1 * transaction.amount;\n            }*/\n          } else {\n            income += transaction.amount;\n            if (transaction.category[1] === \"Paycheck\") {\n              paycheckSum += transaction.amount;\n            } else {\n              otherIncomeSum += transaction.amount;\n            }\n          }\n        }\n\n        /*transactionsData.push({\n          account: account.accountName,\n          date: transaction.date,\n          category: displayCategory,\n          name: transaction.name,\n          amount: currencyFormatter.format(transaction.amount),\n        });*/\n      });\n    });\n\n    /* Don't think we need spending by date in mlp\n    for (let a = 30; a > 0; a--) {\n      let insertDate = new Date(Number(dateNow));\n      insertDate.setDate(insertDate.getDate() - a);\n      let momentDate = moment(insertDate);\n      let setDateSpend = 0;\n      if (spendingByDate[momentDate.format(\"YYYY-MM-DD\")]) {\n        setDateSpend = spendingByDate[momentDate.format(\"YYYY-MM-DD\")];\n      }\n      datesLastThirty.push({\n        x: momentDate.format(\"MM-DD\"),\n        y: setDateSpend,\n      });\n    }*/\n    // Then need to generate new data we didn't calculate before\n    categoriesThisMonth.sort(function (a, b) {\n      const aSpend = spendingByCategory[a.bankName] / budgets[a.bankName];\n      const bSpend = spendingByCategory[b.bankName] / budgets[b.bankName];\n      return aSpend - bSpend;\n    });\n\n    categoriesThisMonth.forEach((category) => {\n      if (\n        spendingByCategory[category.bankName] / budgets[category.bankName] <=\n        1\n      ) {\n        sortedCategoriesUnderBudget.push(category.bankName);\n      } else {\n        sortedCategoriesOverBudget.push(category.bankName);\n      }\n    });\n    payloadObject.sortedCategoriesOverBudget = sortedCategoriesOverBudget;\n    payloadObject.sortedCategoriesUnderBudget = sortedCategoriesUnderBudget;\n    payloadObject.totalTransactionCount = totalTransactionCount;\n    payloadObject.incomeSum = income;\n    payloadObject.spendingSum = spending;\n    // NOTE this is being set to zero right now\n    //--------------------------------------------------------------------\n    payloadObject.reviewedTransactionCount = reviewedTransactionCount;\n    payloadObject.paycheckSum = paycheckSum;\n    payloadObject.otherIncomeSum = otherIncomeSum;\n    //--------------------------------------------------------------------\n  }\n  dispatch({\n    type: SET_TRANSACTION_DATA,\n    payload: payloadObject,\n  });\n};\n\nexport default processTransactionList;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\nexport const REFRESH_ACCOUNT = \"REFRESH_ACCOUNT\";\nexport const UPDATE_ACCOUNT = \"UPDATE_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const ACCOUNTS_LOADING = \"ACCOUNTS_LOADING\";\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\nexport const TRANSACTIONS_LOADING = \"TRANSACTIONS_LOADING\";\nexport const SET_BUDGETS = \"SET_BUDGETS\";\nexport const SET_CATEGORY_MAP = \"SET_CATEGORY_MAP\";\nexport const SET_SPEND_RANGE_DAYS_SELECTED = \"SET_SPEND_RANGE_DAYS_SELECTED\";\nexport const SET_TRANSACTION_DATA = \"SET_TRANSACTION_DATA\";\n","import axios from \"axios\";\n\nimport {\n  ADD_ACCOUNT,\n  UPDATE_ACCOUNT,\n  REFRESH_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n} from \"./types\";\n\nimport processTransactionList from \"../utils/processTransactionList.js\";\n\nconst setAxiosAuth = (token) => {\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n};\n\n// Add account\nexport const addAccount = (accessToken, plaidData) => (dispatch) => {\n  const accounts = plaidData.accounts;\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  axios\n    .post(\"/api/plaid/accounts/add\", plaidData)\n    .then((res) =>\n      dispatch({\n        type: ADD_ACCOUNT,\n        payload: res.data,\n      })\n    )\n    .then((data) =>\n      accounts\n        ? dispatch(getTransactions(accessToken, accounts.concat(data.payload)))\n        : null\n    )\n    .catch((err) => console.log(err));\n};\n\n// Refresh account\nexport const refreshAccount = (plaidData) => (dispatch) => {\n  const id = plaidData.metadata.institution.institution_id;\n  const accounts = plaidData.accounts;\n  axios\n    .post(`/api/plaid/accounts/refresh/${id}`, plaidData)\n    .then((res) =>\n      dispatch({\n        type: REFRESH_ACCOUNT,\n        payload: id,\n      })\n    )\n    .then((data) => (accounts ? dispatch(getTransactions(accounts)) : null))\n    .catch((err) => console.log(err));\n};\n\n// Delete account\nexport const deleteAccount = (plaidData) => (dispatch) => {\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = plaidData.accounts.filter(\n      (account) => account._id !== id\n    );\n    axios\n      .delete(`/api/plaid/accounts/${id}`)\n      .then((res) =>\n        dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id,\n        })\n      )\n      .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n      .catch((err) => console.log(err));\n  }\n};\n\n// Get all accounts for specific user with Auth0\nexport const getAccounts = (accessToken) => (dispatch) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  dispatch(setAccountsLoading());\n  axios\n    .get(\"/api/plaid/accounts\")\n    .then((res) =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: res.data,\n      })\n    )\n    .catch((err) => {\n      console.log(\"Error 400 indicates user hasn't added any accounts yet\");\n    });\n};\n\n// Accounts loading\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING,\n  };\n};\n\n// Get Transactions with Auth0\nexport const getTransactions = (accessToken, plaidData) => (\n  dispatch,\n  getState\n) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  if (plaidData && plaidData.length !== 0) {\n    dispatch(setTransactionsLoading());\n    axios\n      .post(\"/api/plaid/accounts/transactions\", plaidData)\n      .then((res) => {\n        // Need to check if there are transactions?\n        if (res.data.transactions) {\n          const state = getState();\n          dispatch(\n            processTransactionList(res.data.transactions, state.auth.budgets)\n          );\n          dispatch({\n            type: GET_TRANSACTIONS,\n            payload: res.data.transactions,\n          });\n        } else {\n          // Should throw no a tranasactions error here\n        }\n        if (res.data.needUpdate && res.data.needUpdate.length) {\n          res.data.needUpdate.forEach(function (account) {\n            dispatch({\n              type: UPDATE_ACCOUNT,\n              payload: account,\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: null,\n        });\n      });\n  }\n};\n\n// Transactions loading\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING,\n  };\n};\n","import React, { useCallback } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\n// Can use the following to test component version of Plaid Link\n//import { PlaidLink } from \"react-plaid-link\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addAccount, refreshAccount } from \"../actions/accountActions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const DeleteAccountButton = (props) => {\n  return <Button>Delete</Button>;\n};\n\nconst PlaidToExport = (props) => {\n  const { refreshAccount, addAccount } = props;\n  const { getAccessTokenSilently } = useAuth0();\n\n  // In theory you can tell the Plaid Link to get an Auth0 token when it opens\n  /*const onOpen = useCallback((eventName, metadata)) => {\n      if (eventName === \"OPEN\") { .... }\n  },[getAccessTokenSilently]);*/\n\n  const newAccountOnSuccess = useCallback(\n    (token, metadata) => {\n      // send token to server\n      const plaidData = {\n        public_token: token,\n        metadata: metadata,\n        accounts: [],\n      };\n      getAccessTokenSilently().then((accessToken) => {\n        addAccount(accessToken, plaidData);\n      });\n    },\n    [addAccount, getAccessTokenSilently]\n  );\n  const refreshAccountOnSuccess = useCallback(\n    (token, metadata) => {\n      // send token to server\n      const plaidData = {\n        public_token: token,\n        metadata: metadata,\n      };\n\n      getAccessTokenSilently().then((token) => {\n        refreshAccount({ token: token, plaidData: plaidData });\n      });\n    },\n    [getAccessTokenSilently, refreshAccount]\n  );\n\n  const config = {\n    //token: \"\",\n    clientName: process.env.REACT_APP_NAME,\n    publicKey: process.env.REACT_APP_PLAID_PUBLIC_KEY,\n    env: process.env.REACT_APP_PLAID_ENV_STRING,\n    product: [\"transactions\"],\n    onSuccess: newAccountOnSuccess,\n    // ...\n  };\n\n  if (props.existingAccount && props.existingAccount.toRefresh) {\n    config.token = props.existingAccount.publicToken;\n    config.onSuccess = refreshAccountOnSuccess;\n  }\n\n  const { open, ready /*, error*/ } = usePlaidLink(config);\n\n  return (\n    <>\n      {/* Note this button is used to refresh accounts and also add new accounts\n      depending on what props are supplied*/}\n      <Button\n        onClick={() => open()}\n        disabled={\n          !ready || (props.existingAccount && !props.existingAccount.toRefresh)\n        }\n      >\n        {props.buttonText}\n      </Button>\n      {/* Can use the following to test component version of Plaid Link*/}\n      {/*<PlaidLink {...config}>Connect a bank account</PlaidLink>*/}\n    </>\n  );\n};\n\nPlaidToExport.displayName = \"Plaid\";\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = {\n  addAccount,\n  refreshAccount,\n};\n\n// Note that there is probably a better way to do this with React hooks now\nexport const PlaidButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlaidToExport);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PlaidButton, DeleteAccountButton } from \"../../utils/plaidButton.js\";\n\nconst BankAccountsPage = (props) => {\n  const listAccounts = props.accounts.map((account, i) => {\n    return (\n      <div className=\"row\" key={account._id}>\n        <div className=\"col\">{account.institutionName}</div>\n        <div className=\"col\">\n          <PlaidButton buttonText=\"Refresh\" existingAccount={account} />\n        </div>\n        <div className=\"col\">\n          <DeleteAccountButton account={account} />\n        </div>\n      </div>\n    );\n  });\n\n  const addButton = (\n    <div className=\"row\">\n      <div className=\"col\">\n        <PlaidButton\n          buttonText=\"Connect a new bank account\"\n          existingAccount={null}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">Bank Accounts page</div>\n        </div>\n        {props.accountsLoading ? <></> : listAccounts}\n        {addButton}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\nconst mapDispatchToProps = {};\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(BankAccountsPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst UserProfilePage = (props) => {\n  const spendRangeDaysOptions = [7, 14, 30];\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              This is {props.auth.user.name}'s user profile page <br />\n              You are using this date range:\n            </div>\n          </div>\n          <div>\n            <div className=\"form-group\">\n              <select\n                className=\"selectpicker\"\n                data-style=\"btn btn-default\"\n                defaultValue={props.spendRangeDaysSelected}\n              >\n                <option disabled value={0}>\n                  {\" \"}\n                  Choose date range\n                </option>\n                {spendRangeDaysOptions.map((daysOption, i) => {\n                  return (\n                    <option key={i} value={daysOption}>\n                      {daysOption + \" days\"}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(UserProfilePage);\n","import {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  SET_BUDGETS,\n  SET_CATEGORY_MAP,\n} from \"../actions/types\";\nimport { AUTH_MOCK_DATA } from \"./reduxMockData\";\n\nconst isEmpty = require(\"is-empty\");\n// Try loading some demo/example data\nconst initialState = AUTH_MOCK_DATA;\n// Below here is the normal initial state\n/*const initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false,\n  budgets: {},\n  categoryMap: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_BUDGETS:\n      return {\n        ...state,\n        budgets: action.payload,\n      };\n    case SET_CATEGORY_MAP:\n      return {\n        ...state,\n        categoryMap: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","export const AUTH_MOCK_DATA = {\n  isAuthenticated: true,\n  user: {\n    id: \"123456789012345678901234\",\n    name: \"Test Person\",\n    iat: null,\n    exp: null,\n    budgets: {},\n    categoryMap: {},\n  },\n  loading: false,\n  budgets: {\n    \"Food and Drink\": 200,\n    Shops: 50,\n    Travel: 20,\n    Recreation: 10,\n    Personal: 100,\n  },\n  expenseBudgetSum: 380,\n  categoryMap: {\n    \"Food and Drink\": \"Groceries\",\n    Shops: \"Shopping\",\n    Travel: \"Travel\",\n    Recreation: \"Entertainment\",\n  },\n};\n// NOTE THAT I'VE ADDED EXTRA MOCK DATA FOR\n// categoriesThisSpendRange, spendingByCategory, incomeSum, and spendingSum\n// (because it could be a different time period)\nexport const PLAID_MOCK_DATA = {\n  accounts: [\n    {\n      _id: \"5ef4fdbaca322600d6403f2e\",\n      userId: \"123456789012345678901234\",\n      itemId: \"Nk3qlg7vvPtA6mZbr4ZRuEE8GL67dWFW4Ejyq\",\n      institutionId: \"ins_3\",\n      institutionName: \"Chase\",\n      __v: 0,\n    },\n    {\n      _id: \"5ef4fddcca322600d6403f2f\",\n      userId: \"123456789012345678901234\",\n      itemId: \"m1vBo61a1RcbaJzwrojjiMMlqeV4NVSLZ1qxN\",\n      institutionId: \"ins_110423\",\n      institutionName: \"Citi\",\n      __v: 0,\n    },\n  ],\n  transactions: [\n    {\n      accountName: \"Citi\",\n      transactions: [\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-24\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"jQvK1RQkQyUbewqngy5etrLVL3ddo3c1mZKWr\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -2078.5,\n          authorized_date: null,\n          category: [\"Payment\"],\n          category_id: \"16000000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"lM6zpRMJMvh9davVWEy1Hvlx5ql83DiZX85gg\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -50,\n          authorized_date: null,\n          category: [\"Personal\"],\n          category_id: \"16000xxxx\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"lM6zpRMJMvh9davVWEy1Hvlx5ql83DiZX85xx\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"kZvrLRZpZ9uexPKoXERaIeQJGmQN51iWVK3D7\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Shops\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"JgJKAygQgltMrKZA3PWJIDAVjXAP46cdrqGMe\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"LEJznAEQEKULBz16dnjjfyye3Jp4r1TPEwMPa\",\n          account_owner: null,\n          amount: -25,\n          authorized_date: null,\n          category: [\"Payment\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"opvk86pWpqcbmg37REoEcxKaj4NAENiR7Vpxl\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -5.4,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"povdE6oloKfRAXxmPVeVUaj1yQ5kW5hLVQJyx\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"gjoLQDjNjnFwA796Rn88u443jJdqAPig5WBgN\",\n          account_owner: null,\n          amount: -5850,\n          authorized_date: null,\n          category: [\"Transfer\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"DZJ9pEZ4ZbuPezNMlWnguwm9r1jllXUvJQwdD\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"povdE6oloKfRAXxmPVLLSEEqvkdAp6TLzaGLz\",\n          account_owner: null,\n          amount: -1000,\n          authorized_date: null,\n          category: [\"Transfer\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"XXxDq3XQX7tmZDBvLAk5tWm9aAqwwLidLE6Jg\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -78.5,\n          authorized_date: null,\n          category: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"QblavRb7bxcnvRW6jqdXUPAd1xQ6Xjfp7E7P3\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"eNL87RNyNAioJZWD95yVIKnDP59VxXiL515va\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -12,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"K8JrGL8y8qc1zgMoxjmDC6WwmM5QblfVa6bZL\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -4.33,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          category_id: \"13005043\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"r8v4A68K8zc7jRa6KE1zuQqN6aJZ8WIlVygPV\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -89.4,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"W63elB6p6jFdQVLm1xGmsqDEmKA9mGUl7w1qL\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"LEJznAEQEKULBz16dnjjfyye3Jp4r1TPEwMPa\",\n          account_owner: null,\n          amount: 4.22,\n          authorized_date: null,\n          category: [\"Transfer\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-07-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xbvZ96bRb4cmJ8e76VjBhl3DMRe9DjunBPZjR\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-06-29\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"GLJE8VLRL9Cel47pr9WVi3zm8EgM9ACWEJo6X\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-06-27\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"axQL4RxPxgu5W6LgnAD9UNMMQbwEabi7gaZK1\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n      ],\n    },\n    {\n      accountName: \"Chase\",\n      transactions: [\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-24\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"bd9pLg6vvyIwb6gVp5pdIxk383pVZWuVqKVxN\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -2078.5,\n          authorized_date: null,\n          category: [\"Payment\"],\n          category_id: \"16000000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"r84qr9gkkwHvmMeVnKnguagBbme9jLflgaWr6\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"K8rRbZ4vvPHJWGEVlxlKsMxXyK8e1vFVbG7lb\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Shops\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"qgalK9bPPAtk6zZvV9VmTNBLe4zGmyCdkNve1\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"axLk19Bvv7s94jmV8nmDt11Jqnm4EzI7JvnKB\",\n          account_owner: null,\n          amount: -25,\n          authorized_date: null,\n          category: [\"Payment\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xbZxa5g11KH1yAwZR6RVirDZq1aMRXinvEWAz\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -5.4,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"3lDP3dG44JsvjWB3eoedhNEkg8Z3vnfq3aN8A\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"PndrKoQvv7sqV8vyGPvQiRR5DqgJwZu75njyD\",\n          account_owner: null,\n          amount: -5850,\n          authorized_date: null,\n          category: [\"Transfer\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"Begwp9DEEki3w5BDNGNXfN4nr41DeECw5GyRV\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"4qg6xGaNNZsw9qjXaLjAFBBWl1GJ3eidVKWRx\",\n          account_owner: null,\n          amount: -1000,\n          authorized_date: null,\n          category: [\"Transfer\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"zyEJN9appzi3L4qQwEwGfA8wN8XabjtoBGaZj\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -78.5,\n          authorized_date: null,\n          category: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"JgKkn94vvVtXBQqyz3zysqD5gKaPV6Cdqm1zV\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"5K17d64PP5ixgKpd383duWoA7pg1aMuZM9bka\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -12,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xbZxa5g11KH1yAwZR6R4trqve5z58DtnB4m1E\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -4.33,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          category_id: \"13005043\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"d4Ago8DvvZH3eqjVJyJzFJ17jkmkNPcZaEokW\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -89.4,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"6r1XadejjvINrvDaxpxzTKAzqrqa6LCgyABQN\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"axLk19Bvv7s94jmV8nmDt11Jqnm4EzI7JvnKB\",\n          account_owner: null,\n          amount: 4.22,\n          authorized_date: null,\n          category: [\"Transfer\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-07-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"jQKpGPJBB7tKPJBv8g8RSwbe17w8VwC1q9BBK\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-06-29\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"axLk19Bvv7s94jmV8nm4uorGlJVLkbuRdn1rV\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-06-27\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"VR7pdravvqUEx98qbM8EIVoaQADwmRfWPeNLl\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n      ],\n    },\n  ],\n  accountsLoading: false,\n  transactionsLoading: false,\n  incomeSum: 1000,\n  paycheckSum: 500,\n  otherIncomeSum: 500,\n  spendingSum: 4391.92,\n  spendRangeDaysSelected: 30,\n  totalTransactionCount: 50,\n  reviewedTransactionCount: 45,\n  categoriesThisSpendRange: [\n    { bankName: \"Food and Drink\", x: 1, name: \"\" },\n    { bankName: \"Shops\", x: 2, name: \"\" },\n    { bankName: \"Travel\", x: 3, name: \"\" },\n    { bankName: \"Recreation\", x: 4, name: \"\" },\n    { bankName: \"Personal\", x: 5, name: \"\" },\n  ],\n  spendingByCategory: {\n    \"Food and Drink\": 2211.46,\n    Shops: 1000,\n    Travel: 10233.46,\n    Recreation: 157,\n    Personal: 50,\n  },\n  sortedCategoriesUnderBudget: [\"Personal\"],\n  sortedCategoriesOverBudget: [\n    \"Food and Drink\",\n    \"Recreation\",\n    \"Shops\",\n    \"Travel\",\n  ],\n};\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_ACCOUNT,\n  REFRESH_ACCOUNT,\n  UPDATE_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n  SET_TRANSACTION_DATA,\n} from \"../actions/types\";\n\nimport { PLAID_MOCK_DATA } from \"./reduxMockData\";\n\n// Try loading some demo/example data\nconst initialState = PLAID_MOCK_DATA;\nif (process.env.REACT_APP_LIVEDATA === \"true\") {\n  initialState.accounts = [];\n  initialState.transactions = [];\n  initialState.accountsLoading = true;\n  initialState.transactionsLoading = true;\n}\n// Below here is the normal initial state\n/*const initialState = {\n  accounts: [],\n  transactions: [],\n  accountsLoading: false,\n  transactionsLoading: false,\n  incomeSum: 0.00,\n  spendingSum: 0.00,\n  spendRangeDaysSelected: 30,\n  totalTransactionCount: 0,\n  reviewedTransactionCount: 0,\n  categoriesThisSpendRange: [],\n  spendingByCategory: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ACCOUNTS_LOADING:\n      return {\n        ...state,\n        accountsLoading: true,\n      };\n    case ADD_ACCOUNT:\n      return {\n        ...state,\n        accounts: [action.payload, ...state.accounts],\n        accountsLoading: false,\n      };\n    // The payload to refresh an account is the same account (or new account)\n    case REFRESH_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account.institutionId !== action.payload) {\n            return account;\n          } else {\n            return {\n              ...account,\n              toRefresh: false,\n            };\n          }\n        }),\n      };\n    // The payload to update an account is the newly edited account\n    case UPDATE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account._id !== action.payload._id) {\n            return account;\n          } else {\n            return {\n              ...action.payload,\n            };\n          }\n        }),\n      };\n    case DELETE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.filter(\n          (account) => account._id !== action.payload\n        ),\n      };\n    case GET_ACCOUNTS:\n      return {\n        ...state,\n        accounts: action.payload,\n        accountsLoading: false,\n      };\n    case TRANSACTIONS_LOADING:\n      return {\n        ...state,\n        transactionsLoading: true,\n      };\n    case GET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: action.payload,\n        transactionsLoading: false,\n      };\n    // NOTE: this is not the redux way, this should be designed differently in next refactor\n    case SET_TRANSACTION_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  plaid: accountReducer,\n});\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { getAccounts, getTransactions } from \"../../actions/accountActions\";\n\nconst TransactionBootstrap = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const { accounts, getTransactions, transactions } = props;\n  useEffect(() => {\n    if (transactions && transactions.length === 0) {\n      getAccessTokenSilently().then((accessToken) => {\n        getTransactions(accessToken, accounts);\n      });\n    }\n  }, [accounts, getAccessTokenSilently, getTransactions, transactions]);\n  return <></>;\n};\n\nconst transactionStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  transactions: state.plaid.transactions,\n});\nconst transactionDispatchToProps = {\n  getTransactions,\n};\n\nconst UseTransactionBootstrap = connect(\n  transactionStateToProps,\n  transactionDispatchToProps\n)(TransactionBootstrap);\n\nconst AccountBootstrap = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const { accounts, getAccounts, accountsLoading } = props;\n  useEffect(() => {\n    if (accounts && accounts.length === 0) {\n      getAccessTokenSilently().then((accessToken) => {\n        getAccounts(accessToken, accounts);\n      });\n    }\n  }, [accounts, getAccessTokenSilently, getAccounts]);\n  return accountsLoading ? <></> : <UseTransactionBootstrap />;\n};\n\nconst accountStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\nconst accountDispatchToProps = {\n  getAccounts,\n};\n\nexport default connect(\n  accountStateToProps,\n  accountDispatchToProps\n)(AccountBootstrap);\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Auth0ProviderWithHistory from \"./utils/auth0-provider-with-history.js\";\nimport PrivateRoute from \"./utils/privateRoute.js\";\nimport Loading from \"./utils/loading.js\";\nimport \"./App.scss\";\nimport Header from \"./components/layout/Header.js\";\nimport Footer from \"./components/layout/Footer.js\";\nimport HomePage from \"./components/layout/HomePage.js\";\nimport SpendStory from \"./components/spend/SpendStory.js\";\nimport SpendPlan from \"./components/spend/SpendPlan.js\";\nimport ManageTransactions from \"./components/spend/ManageTransactions.js\";\nimport BankAccountsPage from \"./components/profile/BankAccountsPage.js\";\nimport UserProfilePage from \"./components/profile/UserProfilePage.js\";\nimport rootReducer from \"./reducers\";\nimport AccountBootstrap from \"./components/layout/TransactionBootstrap.js\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nconst Routing = () => {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <Header />\n      {isAuthenticated && process.env.REACT_APP_LIVEDATA === \"true\" ? (\n        <AccountBootstrap />\n      ) : (\n        <></>\n      )}\n      <Switch>\n        <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n          {isAuthenticated ? <Redirect to=\"/spend-story\" /> : <HomePage />}\n        </Route>\n        <PrivateRoute path=\"/spend-story\" component={SpendStory} />\n        <PrivateRoute path=\"/spend-plan\" component={SpendPlan} />\n        <PrivateRoute\n          path=\"/manage-transactions\"\n          component={ManageTransactions}\n        />\n        <PrivateRoute path=\"/user-profile\" component={UserProfilePage} />\n        <PrivateRoute path=\"/bank-accounts\" component={BankAccountsPage} />\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Auth0ProviderWithHistory>\n          <Routing />\n        </Auth0ProviderWithHistory>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}