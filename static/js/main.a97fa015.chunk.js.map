{"version":3,"sources":["img/waiwai-logo.svg","img/spend-plan/childcare.svg","img/spend-plan/debt.svg","img/spend-plan/dollar-sign.svg","img/spend-plan/education.svg","img/spend-plan/entertainment.svg","img/spend-plan/food-background.svg","img/spend-plan/housing.svg","img/spend-plan/insurance.svg","img/spend-plan/miscellaneous.svg","img/spend-plan/personal.svg","img/spend-plan/savings.svg","img/spend-plan/transportation.svg","img/spend-plan/utilities.svg","utils/auth0-provider-with-history.js","utils/loading.js","utils/privateRoute.js","components/profile/LogoutButton.js","components/layout/Header.js","components/layout/Footer.js","components/profile/LoginButton.js","components/profile/SignupButton.js","components/layout/HomePage.js","utils/currencyFormatter.js","utils/percentFormatter.js","components/layout/SpendRangeHeader.js","components/spend/SpendCategoryCard.js","components/spend/SpendStory.js","utils/waiwaiCategories.js","utils/processTransactionList.js","actions/types.js","actions/authActions.js","components/spend/SpendPlanRow.js","components/layout/ColorHeader.js","components/spend/SpendPlan.js","components/spend/ManageTransactions.js","actions/accountActions.js","utils/plaidButton.js","components/profile/BankAccountsPage.js","components/profile/UserProfilePage.js","reducers/authReducer.js","reducers/reduxMockData.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/index.js","components/layout/TransactionBootstrap.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","push","returnTo","pathname","audience","Loading","className","src","alt","PrivateRoute","component","args","withAuthenticationRequired","onRedirecting","LogoutButton","logout","useAuth0","Button","onClick","variant","connect","state","userName","auth","user","name","props","isAuthenticated","Navbar","expand","to","NavItem","Brand","href","Logo","width","height","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","renderMenuOnMount","title","Item","Link","Footer","Date","getFullYear","LoginButton","loginWithRedirect","SignupButton","screen_hint","HomePage","useState","access","setAccess","value","onChange","event","accessString","target","trim","style","accessCheck","currencyFormatter","Intl","NumberFormat","currency","minimumFractionDigits","noDecimalCurrencyFormatter","maximumFractionDigits","percentFormatter","spendRangeDaysSelected","plaid","mainHeaderText","subHeaderText","budgets","categoryMap","spendingByCategory","budgetAmount","spentAmount","percentageNumber","mainValueDisplay","subValueDisplay","colorBackgroundClass","thisCategoryLogo","miscellaneousLogo","categoryName","dollarLogo","housingLogo","transportationLogo","foodLogo","utilitiesLogo","insuranceLogo","debtLogo","personalLogo","educationLogo","childCareLogo","savingsLogo","entertainmentLogo","underBudget","format","budgetAmountDisplay","ProgressBar","now","SpendStory","this","auth0","userFirstVisit","accounts","length","incomeSum","paycheckSum","otherIncomeSum","spendingSum","totalTransactionCount","reviewedTransactionCount","expenseBudgetSum","sortedCategoriesUnderBudget","map","i","includes","Fragment","key","sortedCategoriesOverBudget","Component","withAuth0","defaultCategoriesThisSpendRange","x","defaultSpendingByCategory","Housing","Transportation","Food","Utilities","Debt","Personal","Education","Entertainment","Savings","Income","updateSortedCategories","categoriesThisSpendRange","returnUnderBudgets","returnOverBudgets","arrayToSort","sort","a","b","forEach","category","underBudgets","overBudgets","processTransactionList","transactions","dispatch","payloadObject","income","spending","categoryCount","account","transaction","serverSetCategory","waiwaiMainCategory","waiwai_categories","plaidMainCategory","plaid_categories","transactionAmount","isDuplicate","amount","isReviewed","undefined","waiwaiName","plaidName","sortedCategories","type","payload","setAxiosAuth","token","axios","defaults","headers","common","saveUserBudget","accessToken","budgetData","getState","oldBudgetAmount","newBudgetAmount","allBudgets","isIncomeBudgetChange","newBudgetSum","setCurrentBudgets","updateTransactions","post","budgetName","then","res","catch","err","toSend","response","data","budgetPayload","mapDispatchToProps","getAccessTokenSilently","budget","setBudget","useEffect","justNumber","charAt","substring","valid","isNaN","parseFloat","saveButton","ColorHeader","colorClassName","initialState","totalIncomeBudget","payIncomeBudget","otherIncomeBudget","reducer","action","spendRangeDays","accountsLoading","transactionsLoading","useReducer","setupReducer","useCallback","onIncomeSave","onIncomeBudgetChange","Table","hover","setTransactionSettings","transactionData","transactionID","newCategoryName","newMainCategory","newReviewedState","newDuplicateState","isNewCategory","isNewReviewed","isNewDuplicate","perTransactionSettings","payloadArray","newTransactionSettings","userCategories","settingData","newTransactionList","accountIndex","newInnerTransactions","transIndex","transaction_id","newTransaction","newCategories","transactionMUIColumns","label","options","filter","customBodyRender","dataValue","DropdownButton","onSelect","eventkey","update_id","transactionPayload","onCategorySelect","Dropdown","eventKey","review_obj","onReviewClick","duplicate_obj","onDuplicateClick","transactionsData","pushTransaction","accountName","date","columns","filterType","selectableRows","sortOrder","direction","setAccountsLoading","getTransactions","plaidData","setTransactionsLoading","needUpdate","console","log","DeleteAccountButton","deleteAccount","confirm","newAccounts","_id","delete","accountID","onDeleteClick","PlaidToExport","refreshAccount","addAccount","newAccountOnSuccess","metadata","public_token","refreshAccountOnSuccess","config","clientName","publicKey","env","product","onSuccess","existingAccount","toRefresh","publicToken","usePlaidLink","open","ready","disabled","buttonText","displayName","concat","institution","institution_id","PlaidButton","listAccounts","institutionName","addButton","picture","email","data-style","defaultValue","daysOption","isEmpty","require","iat","exp","loading","userId","itemId","institutionId","__v","account_id","account_owner","authorized_date","category_id","iso_currency_code","address","city","lat","lon","store_number","zip","merchant_name","payment_channel","payment_meta","by_order_of","payee","payer","payment_method","payment_processor","ppd_id","reason","reference_number","pending","pending_transaction_id","transaction_type","unofficial_currency_code","combineReducers","errors","transactionDispatchToProps","UseTransactionBootstrap","accountDispatchToProps","getAccounts","get","status","getUserInfo","returnedUser","store","configureStore","rootReducer","Routing","isLoading","REACT_APP_ACCESSCHECK","exact","path","SpendPlan","ManageTransactions","UserProfilePage","BankAccountsPage","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a97fa015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/waiwai-logo.e57023e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/childcare.3217e63b.svg\";","module.exports = __webpack_public_path__ + \"static/media/debt.72b94b4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/dollar-sign.69e96d44.svg\";","module.exports = __webpack_public_path__ + \"static/media/education.28dcaf58.svg\";","module.exports = __webpack_public_path__ + \"static/media/entertainment.f805bade.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-background.b4828793.svg\";","module.exports = __webpack_public_path__ + \"static/media/housing.aa8416a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/insurance.ccb70d55.svg\";","module.exports = __webpack_public_path__ + \"static/media/miscellaneous.41d25eac.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal.56aa4ee5.svg\";","module.exports = __webpack_public_path__ + \"static/media/savings.0d8cb36a.svg\";","module.exports = __webpack_public_path__ + \"static/media/transportation.7ab81113.svg\";","module.exports = __webpack_public_path__ + \"static/media/utilities.73512e34.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin + process.env.PUBLIC_URL}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from \"react\";\nconst loading =\n  \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"./loading.js\";\n\nconst PrivateRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />,\n    })}\n    {...args}\n  />\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <Button\n      onClick={() =>\n        logout({\n          returnTo: window.location.origin + process.env.PUBLIC_URL,\n        })\n      }\n      variant=\"danger\"\n      className=\"btn-margin\"\n    >\n      Log Out\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport NavItem from \"react-bootstrap/NavItem\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Logo from \"../../img/waiwai-logo.svg\";\nimport LogoutButton from \"../../components/profile/LogoutButton.js\";\n\nconst Header = (props) => {\n  const { isAuthenticated, user } = useAuth0();\n  const { name } = user;\n  return (\n    <>\n      <Navbar expand=\"lg\">\n        <LinkContainer to=\"/spend-story\">\n          <NavItem>\n            <Navbar.Brand href=\"#\">\n              <img\n                alt=\"Waiwai Logo\"\n                src={Logo}\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />\n              Waiwai\n            </Navbar.Brand>\n          </NavItem>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            {isAuthenticated ? (\n              <>\n                {/*<LinkContainer to=\"/\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n            </LinkContainer>\n            <div className=\"mr-auto navbar-nav\">\n              <LinkContainer to=\"/spend-story\">\n                <Nav.Link href=\"#\">spend</Nav.Link>\n              </LinkContainer>*/}\n\n                <div className=\"mr-auto navbar-nav\">\n                  {/*hover dropdown test*/}\n                  <NavDropdown\n                    renderMenuOnMount={true}\n                    title=\"spend\"\n                    id=\"hover-nav-dropdown\"\n                    className=\"dropdown-menu-left\"\n                  >\n                    <LinkContainer to=\"/spend-story\">\n                      <NavDropdown.Item>spend story</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/manage-transactions\">\n                      <NavDropdown.Item>view transactions</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/spend-plan\">\n                      <NavDropdown.Item>manage spend plan</NavDropdown.Item>\n                    </LinkContainer>\n                  </NavDropdown>\n\n                  {/*hover dropdown test END*/}\n\n                  <LinkContainer to=\"/save-story\">\n                    <Nav.Link href=\"#\">save</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/borrow-story\">\n                    <Nav.Link href=\"#\">borrow</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/plan-story\">\n                    <Nav.Link href=\"#\">plan</Nav.Link>\n                  </LinkContainer>\n                </div>\n                <NavDropdown\n                  title={name}\n                  id=\"basic-nav-dropdown\"\n                  className=\"ml-auto dropdown-menu-right\"\n                >\n                  <LinkContainer to=\"/user-profile\">\n                    <NavDropdown.Item href=\"#\">Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/bank-accounts\">\n                    <NavDropdown.Item href=\"#\">Bank Accounts</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item className=\"notButton\" href=\"#\">\n                    <LogoutButton />\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <></>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userName: state.auth.user.name,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(Header);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"mr-auto footer-nav\">\n            <Link to=\"/spend-story\">spend</Link>\n            <Link to=\"/save-story\">save</Link>\n            <Link to=\"/borrow-story\">borrow</Link>\n            <Link to=\"/plan-story\">plan</Link>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <p className=\"col-sm\">\n            <small>\n              &copy;{new Date().getFullYear()} WAIWAI | Ua kukulu ʻia i Hawaiʻi\n              me ke aloha nui\n            </small>\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button\n      onClick={() => loginWithRedirect()}\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Log In\n    </Button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst SignupButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button\n      onClick={() =>\n        loginWithRedirect({\n          screen_hint: \"signup\",\n        })\n      }\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Sign Up\n    </Button>\n  );\n};\n\nexport default SignupButton;\n","import React, { useState } from \"react\";\nimport LoginButton from \"../../components/profile/LoginButton.js\";\nimport SignupButton from \"../../components/profile/SignupButton.js\";\n\nconst HomePage = (props) => {\n  const [access, setAccess] = useState(\"\");\n\n  const onAccessChange = (event) => {\n    let accessString = event.target.value.trim();\n    setAccess(accessString);\n  };\n\n  return (\n    <div className=\"full-page mountain-background\">\n      <div className=\"login-box  p-5\">\n        <h1>Mālama Wai. Ho'oulu Waiwai</h1>\n        <p>Manage your financial resources. Grow waiwai.</p>\n        <p>To login or signup, please enter your beta invite code:</p>\n        <input\n          value={access}\n          onChange={onAccessChange}\n          style={{ width: \"25em\" }}\n        />\n        {access === props.accessCheck ? (\n          <>\n            <p>(Invite code accepted)</p>\n            <div className=\"button-box\">\n              <LoginButton />\n              <br />\n              <SignupButton />\n            </div>\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n});\n\nexport const noDecimalCurrencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n});\n","const percentFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n});\n\nexport default percentFormatter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SpendRangeHeader = (props) => {\n  return (\n    <>\n      <div className=\"section-space\"></div>\n      <div className=\"section section-header-generic\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-sm-6 offset-sm-3 justify-content-center text-center\">\n              <h1>\n                {props.mainHeaderText}\n                <br />\n                <span className=\"small bottom\">{props.subHeaderText}</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendRangeHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { noDecimalCurrencyFormatter } from \"../../utils/currencyFormatter\";\nimport percentFormatter from \"../../utils/percentFormatter\";\nimport childCareLogo from \"../../img/spend-plan/childcare.svg\";\n// No categories that match this yet\n//import crossLogo from \"../../img/spend-plan/cross.svg\";\nimport debtLogo from \"../../img/spend-plan/debt.svg\";\n// Looks like the dollar logo is black line art instead of white like the others\nimport dollarLogo from \"../../img/spend-plan/dollar-sign.svg\";\nimport educationLogo from \"../../img/spend-plan/education.svg\";\nimport entertainmentLogo from \"../../img/spend-plan/entertainment.svg\";\nimport foodLogo from \"../../img/spend-plan/food-background.svg\";\n// No categories that match this yet\n//import giftsLogo from \"../../img/spend-plan/gifts.svg\";\n\n// Looks like the healthcareLogo is black line art instead of white like the others\n//import healthcareLogo from \"../../img/spend-plan/healthcare.svg\";\n// No categories that match this yet\n//import healthLogo from \"../../img/spend-plan/health.svg\";\nimport housingLogo from \"../../img/spend-plan/housing.svg\";\nimport insuranceLogo from \"../../img/spend-plan/insurance.svg\";\nimport miscellaneousLogo from \"../../img/spend-plan/miscellaneous.svg\";\nimport personalLogo from \"../../img/spend-plan/personal.svg\";\nimport savingsLogo from \"../../img/spend-plan/savings.svg\";\nimport transportationLogo from \"../../img/spend-plan/transportation.svg\";\nimport utilitiesLogo from \"../../img/spend-plan/utilities.svg\";\n// Looks like the wallet logo is black line art instead of white like the others\n//import walletLogo from \"../../img/spend-plan/wallet.svg\";\n\nconst SpendCategoryCard = (props) => {\n  let budgetAmount = 0;\n  let spentAmount = 0;\n  let percentageNumber = 0;\n  let mainValueDisplay = \"\";\n  let subValueDisplay = \"\";\n  let colorBackgroundClass = \"\";\n  let thisCategoryLogo = miscellaneousLogo;\n\n  if (props.budgetAmount) {\n    budgetAmount = props.budgetAmount;\n  }\n  if (props.spentAmount) {\n    spentAmount = props.spentAmount;\n  }\n\n  if (budgetAmount !== 0) {\n    percentageNumber = spentAmount / budgetAmount;\n  }\n\n  if (props.categoryName === \"Income\") {\n    thisCategoryLogo = dollarLogo;\n  }\n  if (props.categoryName === \"Housing\") {\n    thisCategoryLogo = housingLogo;\n  }\n  if (props.categoryName === \"Transportation\") {\n    thisCategoryLogo = transportationLogo;\n  }\n  if (props.categoryName === \"Food\") {\n    thisCategoryLogo = foodLogo;\n  }\n  if (props.categoryName === \"Utilities\") {\n    thisCategoryLogo = utilitiesLogo;\n  }\n  // Note there are two possible logos here\n  if (props.categoryName === \"Insurance & Healthcare\") {\n    thisCategoryLogo = insuranceLogo;\n  }\n  if (props.categoryName === \"Debt\") {\n    thisCategoryLogo = debtLogo;\n  }\n  if (props.categoryName === \"Personal\") {\n    thisCategoryLogo = personalLogo;\n  }\n  if (props.categoryName === \"Education\") {\n    thisCategoryLogo = educationLogo;\n  }\n  if (props.categoryName === \"Child Care\") {\n    thisCategoryLogo = childCareLogo;\n  }\n  if (props.categoryName === \"Savings\") {\n    thisCategoryLogo = savingsLogo;\n  }\n  if (props.categoryName === \"Entertainment\") {\n    thisCategoryLogo = entertainmentLogo;\n  }\n  if (props.underBudget) {\n    colorBackgroundClass = \"dark-green-background\";\n    mainValueDisplay = noDecimalCurrencyFormatter.format(\n      budgetAmount - spentAmount\n    );\n    if (budgetAmount !== 0 || spentAmount === 0) {\n      subValueDisplay = percentFormatter.format(percentageNumber);\n      percentageNumber *= 100;\n    } else {\n      subValueDisplay = \"--\";\n    }\n  } else {\n    // this is an over budget category\n    colorBackgroundClass = \"brown-yellow-background\";\n    subValueDisplay = noDecimalCurrencyFormatter.format(spentAmount);\n    if (budgetAmount !== 0 || spentAmount === 0) {\n      mainValueDisplay = percentFormatter.format(percentageNumber);\n      percentageNumber *= 100;\n    } else {\n      mainValueDisplay = \"--\";\n    }\n  }\n\n  const budgetAmountDisplay = noDecimalCurrencyFormatter.format(budgetAmount);\n\n  return (\n    <div className=\"card card-blog\">\n      <div className={\"card-image \" + colorBackgroundClass}>\n        <img className=\"img \" alt=\"Category Name\" src={thisCategoryLogo} />\n        <div className=\"card-img-overlay\">\n          <h5>{props.categoryName}</h5>\n        </div>\n      </div>\n      <div className=\"card-body text-center\">\n        <h4 className=\"card-title text-left\">\n          {mainValueDisplay}\n          <span className=\"small bottom\">\n            <br />\n            {props.underBudget ? \"Available\" : \"Spent\"}\n          </span>\n        </h4>\n        <div className=\"card-description\">\n          <ProgressBar\n            now={props.underBudget ? percentageNumber : 100}\n            variant={props.underBudget ? \"success\" : \"warning\"}\n          />\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <p className=\" text-left\">\n                {budgetAmountDisplay}\n                <span className=\"small bottom\">\n                  <br />\n                  Budget\n                </span>\n              </p>\n            </div>\n            <div className=\"col\">\n              <p className=\" text-left\">\n                {subValueDisplay}\n                <span className=\"small bottom\">\n                  <br />\n                  Spent\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  categoryMap: state.auth.categoryMap,\n  spendingByCategory: state.plaid.spendingByCategory,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendCategoryCard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withAuth0 } from \"@auth0/auth0-react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { noDecimalCurrencyFormatter } from \"../../utils/currencyFormatter\";\nimport percentFormatter from \"../../utils/percentFormatter\";\nimport Loading from \"../../utils/loading.js\";\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\nimport SpendCategoryCard from \"./SpendCategoryCard\";\n\nclass SpendStory extends Component {\n  render() {\n    const { user } = this.props.auth0;\n    const { name } = user;\n    const { plaid, auth } = this.props;\n\n    if (plaid.userFirstVisit) {\n      return (\n        <div>\n          <Redirect to=\"/bank-accounts\" />\n        </div>\n      );\n    } else if (!plaid.accounts || plaid.accounts.length === 0) {\n      return (\n        <div>\n          <SpendRangeHeader mainHeaderText={name} subHeaderText=\"Spend Story\" />\n          <Loading />\n        </div>\n      );\n    }\n    return (\n      <>\n        <div>\n          <SpendRangeHeader mainHeaderText={name} subHeaderText=\"Spend Story\" />\n          <div className=\"section income-spend\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-left\">\n                    <h1 className=\"large-number\">\n                      <span className=\"small top\">Income</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.incomeSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Paycheck</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.paycheckSum)}\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Other Source</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.otherIncomeSum)}\n                    </h3>\n                  </div>\n                </div>\n\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-right\">\n                    <h1 className=\"large-number\">\n                      <span className=\"small top\">Spent</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.spendingSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Transactions</span>\n                      <br />\n                      {plaid.totalTransactionCount}\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Transactions reviewed</span>\n                      <br />\n                      {percentFormatter.format(\n                        plaid.reviewedTransactionCount /\n                          plaid.totalTransactionCount\n                      )}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4 text-center\">\n                  <Link to=\"/manage-transactions\" className=\"btn mt-4\">\n                    view transactions\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spending-plan\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <h1 className=\"darktext\">\n                        Spending Plan\n                        <br />\n                        <span className=\"small bottom\">Breakdown</span>\n                      </h1>\n                    </div>\n                    <div className=\"row mt-5 mb-3\">\n                      <h3 className=\"large-number\">\n                        {/* Note, Joe's explanation of budget available is\n                        supposed to be what you earned last 30 days versus what you\n                        budgeted to spend for 30 days */}\n                        {noDecimalCurrencyFormatter.format(\n                          plaid.incomeSum - auth.expenseBudgetSum\n                        )}\n                        <br />\n                        <span className=\"small bottom\">budget available</span>\n                      </h3>\n                    </div>\n                    <div className=\"row\">\n                      <Link to=\"/spend-plan\" className=\"btn\">\n                        manage spend plan\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-categories\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1>Spend Plan</h1>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  <h3 className=\"large-number\">\n                    {/* Note, Joe's explanation of budget estimate is\n                        supposed to be the sum of all the expense budgets */}\n                    {noDecimalCurrencyFormatter.format(auth.expenseBudgetSum)}\n                    <br />\n                    <span className=\"small bottom\">total budget</span>\n                  </h3>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8 pt-4 pb-4\">\n                  <h4>\n                    On track\n                    <br />\n                    <span className=\"small bottom\">\n                      {plaid.sortedCategoriesUnderBudget.length}\n                      {plaid.sortedCategoriesUnderBudget.length === 1\n                        ? \" category\"\n                        : \" catiegories\"}\n                    </span>\n                  </h4>\n                </div>\n              </div>\n              <div className=\"row\">\n                {plaid.sortedCategoriesUnderBudget.map((categoryName, i) => {\n                  if (categoryName.includes(\"Income\")) {\n                    return <React.Fragment key={categoryName}></React.Fragment>;\n                  }\n                  return (\n                    <div\n                      key={categoryName}\n                      className=\"col-lg-3 col-md-4 col-sm-6\"\n                    >\n                      <SpendCategoryCard\n                        categoryName={categoryName}\n                        underBudget={true}\n                        budgetAmount={auth.budgets[categoryName]}\n                        spentAmount={plaid.spendingByCategory[categoryName]}\n                      ></SpendCategoryCard>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8 pt-4 pb-4\">\n                  <h4>\n                    Needs Work\n                    <br />\n                    <span className=\"small bottom\">\n                      {plaid.sortedCategoriesOverBudget.length}\n                      {plaid.sortedCategoriesOverBudget.length === 1\n                        ? \" category\"\n                        : \" catiegories\"}\n                    </span>\n                  </h4>\n                </div>\n              </div>\n              <div className=\"row\">\n                {plaid.sortedCategoriesOverBudget.map((categoryName, i) => {\n                  if (categoryName.includes(\"Income\")) {\n                    return <React.Fragment key={categoryName}></React.Fragment>;\n                  }\n                  return (\n                    <div\n                      key={categoryName}\n                      className=\"col-lg-3 col-md-4 col-sm-6\"\n                    >\n                      <SpendCategoryCard\n                        categoryName={categoryName}\n                        underBudget={false}\n                        budgetAmount={auth.budgets[categoryName]}\n                        spentAmount={plaid.spendingByCategory[categoryName]}\n                      ></SpendCategoryCard>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-plan-footer\">\n            <div className=\"container\">\n              <div className=\"row mt-5\">\n                <div className=\"col-md-6 offset-md-1\">\n                  <h2 className=\"large-number\">\n                    <span className=\"small top\">Surplus</span>\n                    <br />\n                    {noDecimalCurrencyFormatter.format(\n                      plaid.incomeSum - plaid.spendingSum\n                    )}\n                  </h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nSpendStory.propTypes = {\n  plaid: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  plaid: state.plaid,\n  auth: state.auth,\n});\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withAuth0(SpendStory));\n","export const defaultCategoriesThisSpendRange = [\n  {\n    x: 1,\n    name: \"Housing\",\n  },\n  {\n    x: 2,\n    name: \"Transportation\",\n  },\n  {\n    x: 3,\n    name: \"Food\",\n  },\n  {\n    x: 4,\n    name: \"Utilities\",\n  },\n  {\n    x: 5,\n    name: \"Insurance & Healthcare\",\n  },\n  {\n    x: 6,\n    name: \"Debt\",\n  },\n  {\n    x: 7,\n    name: \"Personal\",\n  },\n  {\n    x: 8,\n    name: \"Education\",\n  },\n  {\n    x: 9,\n    name: \"Child Care\",\n  },\n  {\n    x: 10,\n    name: \"Entertainment\",\n  },\n  {\n    x: 11,\n    name: \"Savings\",\n  },\n  {\n    x: 12,\n    name: \"Income\",\n  },\n];\nexport const defaultSpendingByCategory = {\n  Housing: 0,\n  Transportation: 0,\n  Food: 0,\n  Utilities: 0,\n  \"Insurance & Healthcare\": 0,\n  Debt: 0,\n  Personal: 0,\n  Education: 0,\n  \"Child Care\": 0,\n  Entertainment: 0,\n  Savings: 0,\n  Income: 0,\n};\n","import { SET_TRANSACTION_DATA } from \"../actions/types\";\nimport {\n  defaultCategoriesThisSpendRange,\n  defaultSpendingByCategory,\n} from \"./waiwaiCategories.js\";\n\n// These are just listed for reference purposes right now (what the server sends)\n//const varStringServerSetMainCat = \"category[0]\";\n//const varStringMainPlaidCat = \"plaid_categories[0]\";\n//const varStringMainWaiwaiCat = \"waiwai_categories[0]\";\n\nexport const updateSortedCategories = (\n  categoriesThisSpendRange,\n  spendingByCategory,\n  budgets\n) => {\n  const returnUnderBudgets = [];\n  const returnOverBudgets = [];\n  const arrayToSort = [...categoriesThisSpendRange];\n\n  arrayToSort.sort(function (a, b) {\n    const aSpend = spendingByCategory[a.name] / budgets[a.name];\n    const bSpend = spendingByCategory[b.name] / budgets[b.name];\n    return aSpend - bSpend;\n  });\n\n  arrayToSort.forEach((category) => {\n    if (spendingByCategory[category.name] / budgets[category.name] <= 1) {\n      returnUnderBudgets.push(category.name);\n    } else {\n      returnOverBudgets.push(category.name);\n    }\n  });\n  return { underBudgets: returnUnderBudgets, overBudgets: returnOverBudgets };\n};\n\n// NOTE: this is not the redux way, this should be designed differently in next refactor\nexport const processTransactionList = (transactions, budgets) => (dispatch) => {\n  const payloadObject = {};\n  let totalTransactionCount = 0;\n  let reviewedTransactionCount = 0;\n  let paycheckSum = 0;\n  let otherIncomeSum = 0;\n\n  let income = 0;\n  let spending = 0;\n  const spendingByCategory = { ...defaultSpendingByCategory };\n  const categoriesThisSpendRange = [...defaultCategoriesThisSpendRange];\n  let categoryCount = 1;\n  //const spendingByDate = {};\n  //const datesLastThirty = [];\n  //const dateNow = new Date();\n  if (transactions && transactions.length) {\n    transactions.forEach(function (account) {\n      account.transactions.forEach(function (transaction) {\n        let serverSetCategory = transaction.category[0];\n        let waiwaiMainCategory = transaction.waiwai_categories[0];\n        let plaidMainCategory = transaction.plaid_categories[0];\n        let transactionAmount = 0;\n\n        // Note that we should check for transactions marked duplicate\n        if (!transaction.isDuplicate) {\n          // By default, the plaid transactions are positive for spent money and negative for earned money - so we reverse that\n          transactionAmount = transaction.amount * -1;\n          /*if (\n          serverSetCategory !== \"Transfer\" &&\n          serverSetCategory !== \"Payment\"\n        ) {*/\n          totalTransactionCount++;\n          // NOTE: none of our transactions from the API will have these right now\n          //--------------------------------------------------------------------\n          if (transaction.isReviewed) {\n            reviewedTransactionCount++;\n          }\n          // Income is done later in income section\n          /*if (transaction.category[1] === \"Paycheck\") {\n            paycheckSum += transactionAmount;\n          }\n          if (transaction.category[1] === \"Other Income\") {\n            otherIncomeSum += transactionAmount;\n          }*/\n          //--------------------------------------------------------------------\n          //profit += transactionAmount;\n          if (transactionAmount < 0) {\n            spending += -1 * transactionAmount;\n\n            // This if/else sets up the spending category object with category as key and amount total as value\n            // Note that we have to check if undefined (because expense of 0 would be falsey)\n            if (spendingByCategory[serverSetCategory] !== undefined) {\n              spendingByCategory[serverSetCategory] += -1 * transactionAmount;\n            } else {\n              // This is the case that the category hasn't been seen before\n              // And that means this shouldn't happen anymore (all categories loaded by default)\n              categoriesThisSpendRange.push({\n                x: categoryCount,\n                waiwaiName: waiwaiMainCategory,\n                plaidName: plaidMainCategory,\n                name: serverSetCategory,\n              });\n              categoryCount++;\n              spendingByCategory[serverSetCategory] = -1 * transactionAmount;\n            }\n\n            /* Don't think we need spending by date in mlp\n            // This if/else sets up the spending date object with date as key and amount total as value\n            if (spendingByDate[transaction.date]) {\n              spendingByDate[transaction.date] += -1 * transactionAmount;\n            } else {\n              // This is the case that the date hasn't been seen before\n              spendingByDate[transaction.date] = -1 * transactionAmount;\n            }*/\n          } else {\n            income += transactionAmount;\n            if (transaction.category[0] === \"Income - Paycheck\") {\n              paycheckSum += transactionAmount;\n            } else {\n              otherIncomeSum += transactionAmount;\n            }\n          }\n        }\n      });\n    });\n\n    /* Don't think we need spending by date in mlp\n    for (let a = 30; a > 0; a--) {\n      let insertDate = new Date(Number(dateNow));\n      insertDate.setDate(insertDate.getDate() - a);\n      let momentDate = moment(insertDate);\n      let setDateSpend = 0;\n      if (spendingByDate[momentDate.format(\"YYYY-MM-DD\")]) {\n        setDateSpend = spendingByDate[momentDate.format(\"YYYY-MM-DD\")];\n      }\n      datesLastThirty.push({\n        x: momentDate.format(\"MM-DD\"),\n        y: setDateSpend,\n      });\n    }*/\n    // Then need to generate new data we didn't calculate before\n    const sortedCategories = updateSortedCategories(\n      categoriesThisSpendRange,\n      spendingByCategory,\n      budgets\n    );\n    payloadObject.incomeSum = income;\n    payloadObject.spendingSum = spending;\n    payloadObject.totalTransactionCount = totalTransactionCount;\n\n    payloadObject.categoriesThisSpendRange = categoriesThisSpendRange;\n    payloadObject.spendingByCategory = spendingByCategory;\n\n    payloadObject.sortedCategoriesOverBudget = sortedCategories.overBudgets;\n    payloadObject.sortedCategoriesUnderBudget = sortedCategories.underBudgets;\n\n    // NOTE this is being set to zero right now\n    //--------------------------------------------------------------------\n    payloadObject.paycheckSum = paycheckSum;\n    payloadObject.otherIncomeSum = otherIncomeSum;\n    payloadObject.reviewedTransactionCount = reviewedTransactionCount;\n    //--------------------------------------------------------------------\n  }\n  dispatch({\n    type: SET_TRANSACTION_DATA,\n    payload: payloadObject,\n  });\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\nexport const REFRESH_ACCOUNT = \"REFRESH_ACCOUNT\";\nexport const UPDATE_ACCOUNT = \"UPDATE_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const ACCOUNTS_LOADING = \"ACCOUNTS_LOADING\";\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\nexport const TRANSACTIONS_LOADING = \"TRANSACTIONS_LOADING\";\nexport const SET_BUDGETS = \"SET_BUDGETS\";\nexport const SET_SPEND_RANGE_DAYS_SELECTED = \"SET_SPEND_RANGE_DAYS_SELECTED\";\nexport const SET_TRANSACTION_DATA = \"SET_TRANSACTION_DATA\";\nexport const USER_FIRST_VISIT = \"USER_FIRST_VISIT\";\nexport const GET_USER_INFO = \"GET_USER_INFO\";\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING,\n  SET_BUDGETS,\n  SET_TRANSACTION_DATA,\n  GET_USER_INFO,\n  TRANSACTIONS_LOADING,\n  GET_TRANSACTIONS,\n} from \"./types\";\nimport {\n  updateSortedCategories,\n  processTransactionList,\n} from \"../utils/processTransactionList.js\";\n\nconst setAxiosAuth = (token) => {\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n};\n\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then((res) => history.push(\"/login\"))\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\nexport const saveUserBudget = (accessToken, budgetData) => (\n  dispatch,\n  getState\n) => {\n  const state = getState();\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  const { categoriesThisSpendRange, spendingByCategory } = state.plaid;\n  const { expenseBudgetSum } = state.auth;\n  let oldBudgetAmount = 0;\n  if (state.auth.budgets[budgetData.name]) {\n    oldBudgetAmount = state.auth.budgets[budgetData.name];\n  }\n  const newBudgetAmount = budgetData.payload[budgetData.name];\n  const allBudgets = { ...state.auth.budgets, ...budgetData.payload };\n\n  const isIncomeBudgetChange = budgetData.name.includes(\"Income\");\n  // The default is to adjust the budget sum based on the new amount coming in\n  let newBudgetSum = expenseBudgetSum - oldBudgetAmount + newBudgetAmount;\n  // But if this is an income budget adjustment, then just use the old expense sum\n  if (isIncomeBudgetChange) {\n    newBudgetSum = expenseBudgetSum;\n  }\n\n  const budgetPayload = {\n    allBudgets,\n    expenseBudgetSum: newBudgetSum,\n  };\n  dispatch(setCurrentBudgets(budgetPayload));\n\n  // Only need to update sorted categories for over/under budget for expense budget changes\n  if (!isIncomeBudgetChange) {\n    const sortedCategories = updateSortedCategories(\n      categoriesThisSpendRange,\n      spendingByCategory,\n      allBudgets\n    );\n    const updateTransactions = {\n      sortedCategoriesOverBudget: sortedCategories.overBudgets,\n      sortedCategoriesUnderBudget: sortedCategories.underBudgets,\n    };\n    dispatch({\n      type: SET_TRANSACTION_DATA,\n      payload: updateTransactions,\n    });\n  }\n  // Note: if we leave this api call in this position for now, the demo for frontend-only\n  // will continue to work but the downside is that if there is a\n  // server error then the frontend and backend could get out of sync.\n  // So that is why the axios.then statement just returns (since we handle frontend updates before)\n  axios\n    .post(`/api/users/budgets`, {\n      budgetName: budgetData.name,\n      budgetAmount: newBudgetAmount,\n      expenseBudgetSum: newBudgetSum,\n    })\n    .then((res) => {\n      //dispatch(setCookiesAndCurrentBudgets(res.data.userId, res.data.budgets));\n      return res;\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n      //dispatch(setCookiesAndCurrentBudgets(decoded.id, decoded.budgets));\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\nexport const setTransactionSettings = (accessToken, transactionData) => (\n  dispatch,\n  getState\n) => {\n  const state = getState();\n\n  const transactionID = transactionData.transactionID;\n\n  const newCategoryName = transactionData.newMainCategory;\n  const newReviewedState = transactionData.newReviewedState;\n  const newDuplicateState = transactionData.newDuplicateState;\n  const isNewCategory = newCategoryName !== undefined;\n  const isNewReviewed = newReviewedState !== undefined;\n  const isNewDuplicate = newDuplicateState !== undefined;\n\n  // NOTE, don't think I have to do this if just use return of object from server\n  // for the dispatch payload - however as mentioned in budgetData, doing it this\n  // way lets frontend-only deployment continue to work\n  // ------------------------------------------------------------------------\n  const { perTransactionSettings } = state.auth;\n  let payloadArray = [];\n  let newTransactionSettings = { ...perTransactionSettings };\n  if (perTransactionSettings && perTransactionSettings[transactionID]) {\n    newTransactionSettings[transactionID] = {\n      ...perTransactionSettings[transactionID],\n    };\n    if (perTransactionSettings[transactionID].userCategories && isNewCategory) {\n      payloadArray = [...perTransactionSettings[transactionID].userCategories];\n    }\n  } else {\n    newTransactionSettings[transactionID] = {};\n  }\n  if (isNewCategory) {\n    payloadArray[0] = newCategoryName;\n    newTransactionSettings[transactionID].userCategories = payloadArray;\n  }\n  if (isNewReviewed) {\n    newTransactionSettings[transactionID].isReviewed = newReviewedState;\n  }\n  if (isNewDuplicate) {\n    newTransactionSettings[transactionID].isDuplicate = newDuplicateState;\n  }\n\n  // ------------------------------------------------------------------------\n  dispatch({\n    type: GET_USER_INFO,\n    payload: { newTransactionSettings },\n  });\n\n  // Send to server and use the new full transactionSettings\n\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n\n  axios\n    .post(`/api/users/new-transaction-settings`, {\n      transactionID,\n      settingData: newTransactionSettings[transactionID],\n    })\n    .then((res) => {\n      // Dispatch GET_USER_INFO is already done above\n      return res;\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n\n  // Ok - get the transaction list from state, copy it to a new variable,\n  // update category, and call to reprocess\n  // I THINK I COULD SIMPLIFY ALL OF THIS BY RETURNING TRANSACTIONS FROM SERVER\n  // although, reprocessing on the server would mean either passing the server the\n  // list of transactions or fetching from Plaid a fresh list\n  // ------------------------------------------------------------------------\n  const { transactions } = state.plaid;\n  const newTransactionList = [...transactions];\n  dispatch({\n    type: TRANSACTIONS_LOADING,\n  });\n  for (\n    let accountIndex = 0;\n    accountIndex < newTransactionList.length;\n    accountIndex++\n  ) {\n    const account = newTransactionList[accountIndex];\n    const newInnerTransactions = [...account.transactions];\n    for (\n      let transIndex = 0;\n      transIndex < newInnerTransactions.length;\n      transIndex++\n    ) {\n      const transaction = newInnerTransactions[transIndex];\n\n      if (transaction.transaction_id === transactionID) {\n        const newTransaction = {\n          ...transaction,\n        };\n        let newCategories = [];\n\n        if (isNewCategory) {\n          newCategories = [...newTransaction.category];\n          newCategories[0] = newCategoryName;\n          newTransaction.category = newCategories;\n        }\n        if (isNewReviewed) {\n          newTransaction.isReviewed = newReviewedState;\n        }\n        if (isNewDuplicate) {\n          newTransaction.isDuplicate = newDuplicateState;\n        }\n\n        newInnerTransactions[transIndex] = newTransaction;\n        newTransactionList[accountIndex] = {\n          ...newTransactionList[accountIndex],\n          transactions: newInnerTransactions,\n        };\n        transIndex = newInnerTransactions.length;\n        accountIndex = newTransactionList.length;\n      }\n    }\n  }\n  // then dispatch process transaction list\n  dispatch(processTransactionList(newTransactionList, state.auth.budgets));\n  dispatch({\n    type: GET_TRANSACTIONS,\n    payload: newTransactionList,\n  });\n  // ------------------------------------------------------------------------\n};\n\n// userInfo - get user info for logged in user\nexport const getUserInfo = (accessToken) => (dispatch) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  axios\n    .get(\"/api/users/user-info\")\n    .then((res) => {\n      const returnedUser = res.data;\n      const {\n        budgets,\n        expenseBudgetSum,\n        spendRangeDays,\n        perTransactionSettings,\n      } = returnedUser;\n      const payload = {\n        budgets,\n        expenseBudgetSum,\n        spendRangeDays,\n        perTransactionSettings,\n      };\n\n      dispatch({\n        type: GET_USER_INFO,\n        payload,\n      });\n    })\n    .catch((err) => {\n      if (err.response.status === 400) {\n        console.log(\"Error 400 indicates user hasn't added any settings yet\");\n      }\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\n// Set logged in user budgets\nexport const setCurrentBudgets = (budgetPayload) => {\n  return {\n    type: SET_BUDGETS,\n    payload: budgetPayload,\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\nimport { saveUserBudget } from \"../../actions/authActions\";\n\nconst SpendPlanRow = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [budget, setBudget] = useState(\"\");\n  const { category, budgets, saveUserBudget } = props;\n\n  const saveButton = () => {\n    const budgetData = { name: category.name, payload: {} };\n    // This checks if the string in budget is a number\n    let valid = false;\n    if (budget.trim) {\n      valid = !isNaN(budget.trim());\n    }\n\n    if (valid) {\n      budgetData.payload[category.name] = parseFloat(budget);\n      // We only save the budget if it is a number\n      // But should have UI here to tell the user something wrong happened if it isn't a number\n      getAccessTokenSilently().then((accessToken) => {\n        saveUserBudget(accessToken, budgetData);\n      });\n    }\n  };\n\n  const onChangeValue = (event) => {\n    let justNumber = event.target.value;\n    if (justNumber.charAt(0) === \"$\") {\n      justNumber = justNumber.substring(1);\n    }\n    // This event will still fire even if the input is not a number, it just gives a value of \"\"\n    if (justNumber !== \"\") {\n      setBudget(justNumber);\n    }\n  };\n\n  useEffect(() => {\n    if (budgets && category && budgets[category.name]) {\n      setBudget(budgets[category.name]);\n    }\n  }, [budgets, category, setBudget]);\n  /*if (\n    props.category.bankName !== \"Transfer\" &&\n    props.category.bankName !== \"Payment\"\n  ) {*/\n  return (\n    <tr>\n      <td>{props.category.name}</td>\n      <td></td>\n      <td>\n        {/* This is a controlled input\n            Note that the currencyFormatter makes controlled edits difficult, e.g.\n            value={currencyFormatter.format(budget)}\n        */}\n        <input value={budget} type=\"number\" onChange={onChangeValue}></input>\n        <button className=\"btn secondary\" onClick={() => saveButton()}>\n          Save\n        </button>\n      </td>\n      <td>\n        {currencyFormatter.format(\n          props.spendingByCategory[props.category.name]\n        )}\n      </td>\n    </tr>\n  );\n  /*} else {\n    return <></>;\n  }*/\n};\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  categoryMap: state.auth.categoryMap,\n  spendingByCategory: state.plaid.spendingByCategory,\n});\nconst mapDispatchToProps = { saveUserBudget };\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(SpendPlanRow);\n","import React from \"react\";\n\nconst ColorHeader = (props) => {\n  return (\n    <>\n      <div className=\"section-space\"></div>\n      <div className={\"section \" + props.colorClassName}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-sm-6 offset-sm-3 justify-content-center text-center\">\n              <h1>\n                {props.mainHeaderText}\n                <br />\n                <span className=\"small bottom\">{props.subHeaderText}</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\n// Note that there is probably a better way to do this with React hooks now\nexport default ColorHeader;\n","import React, { useReducer, useEffect, useCallback } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"../../utils/loading.js\";\nimport SpendPlanRow from \"./SpendPlanRow\";\nimport ColorHeader from \"../layout/ColorHeader\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\nimport { saveUserBudget } from \"../../actions/authActions\";\n\n// Note that currently we get a category from plaid called \"Income\"\n// Transactions that have just the category of \"Income\" are counted towards other income\n// In the manage transaction page, we show \"Income\" to the user as \"Income - Other\"\n// And we give the option to the user to recategorize as \"Income - Paycheck\"\nconst payIncomeString = \"Income - Paycheck\";\nconst otherIncomeString = \"Income\";\n\nconst initialState = {\n  totalIncomeBudget: 0,\n  payIncomeBudget: 0,\n  otherIncomeBudget: 0,\n};\n\n// The reason we're using a reducer and not useState is because of the total money calculation\n// that relies on the state of the paycheck and other-income in order to setState\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case otherIncomeString:\n      return {\n        ...state,\n        otherIncomeBudget: action.payload,\n        totalIncomeBudget: state.payIncomeBudget + parseFloat(action.payload),\n      };\n    case payIncomeString:\n      return {\n        ...state,\n        payIncomeBudget: action.payload,\n        totalIncomeBudget: state.otherIncomeBudget + parseFloat(action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nconst SpendPlan = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const { budgets, saveUserBudget } = props;\n  const { payIncomeBudget, otherIncomeBudget } = state;\n\n  const setupReducer = useCallback(\n    (allBudgets) => {\n      if (allBudgets) {\n        if (allBudgets[otherIncomeString]) {\n          dispatch({\n            type: otherIncomeString,\n            payload: allBudgets[otherIncomeString],\n          });\n        }\n        if (allBudgets[payIncomeString]) {\n          dispatch({\n            type: payIncomeString,\n            payload: allBudgets[payIncomeString],\n          });\n        }\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    setupReducer(budgets);\n  }, [budgets, setupReducer]);\n\n  const onIncomeSave = useCallback(\n    (categoryName) => {\n      const budgetData = { name: categoryName, payload: {} };\n      let budget = \"\";\n      if (categoryName === payIncomeString) {\n        budget = payIncomeBudget;\n      } else {\n        budget = otherIncomeBudget;\n      }\n      // This checks if the string in budget is a number\n      const valid = budget !== \"\" && !isNaN(budget);\n\n      if (valid) {\n        budgetData.payload[categoryName] = parseFloat(budget);\n        // We only save the budget if it is a number\n        // But should have UI here to tell the user something wrong happened if it isn't a number\n        getAccessTokenSilently().then((accessToken) => {\n          saveUserBudget(accessToken, budgetData);\n        });\n      }\n    },\n    [payIncomeBudget, otherIncomeBudget, getAccessTokenSilently, saveUserBudget]\n  );\n\n  const onIncomeBudgetChange = (event, categoryName) => {\n    let justNumber = event.target.value;\n    if (justNumber.charAt(0) === \"$\") {\n      justNumber = justNumber.substring(1);\n    }\n    const newBudgetAmount = justNumber.trim();\n\n    // This event will still fire even if the input is not a number, it just gives a value of \"\"\n    // Only dispatch to update the total if this new value is numeric\n    if (newBudgetAmount !== \"\" && !isNaN(newBudgetAmount)) {\n      dispatch({ type: categoryName, payload: newBudgetAmount });\n    }\n  };\n\n  if (props.accountsLoading || props.transactionsLoading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Spend\"\n        subHeaderText=\"Plan\"\n        colorClassName=\"section-header-blue\"\n      />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Income</h2>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>Waiwai category</th>\n                    <th></th>\n                    <th>Budget for {props.spendRangeDays} days</th>\n                    <th>Earned last {props.spendRangeDays} days</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Income Total</td>\n                    <td></td>\n                    <td>{currencyFormatter.format(state.totalIncomeBudget)}</td>\n                    <td>{currencyFormatter.format(props.incomeSum)}</td>\n                  </tr>\n                  <tr>\n                    <td>Paycheck Total</td>\n                    <td></td>\n                    <td>{currencyFormatter.format(state.payIncomeBudget)}</td>\n                    <td>{currencyFormatter.format(props.paycheckSum)}</td>\n                  </tr>\n                  <tr>\n                    <td>Other Income Total</td>\n                    <td></td>\n                    <td>{currencyFormatter.format(state.otherIncomeBudget)}</td>\n                    <td>{currencyFormatter.format(props.otherIncomeSum)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n              <div className=\"mt-5\">\n                <h3>Add Income Sources</h3>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  {/*<label htmlFor=\"pay-frequency\">Paycheck Frequency</label>\n                  <br />\n                  <select\n                    className=\"selectpicker form-control custom-select\"\n                    data-style=\"btn btn-default\"\n                    defaultValue=\"0\"\n                  >\n                    <option disabled value=\"0\">\n                      {\" \"}\n                      Choose date range\n                    </option>\n                    <option value=\"1\">Weekly</option>\n                    <option value=\"1\">Bi-weekly</option>\n                    <option value=\"1\">Bi-monthly</option>\n                    <option value=\"1\">Monthly</option>\n                  </select>\n                  <br />\n                  <label className=\"mt-4\">Paycheck amount</label>*/}\n                  <label className=\"mt-4\">\n                    Expected Paycheck Total For {props.spendRangeDays} Days\n                  </label>\n                  <br />\n                  <input\n                    value={state.payIncomeBudget}\n                    onChange={(event) =>\n                      onIncomeBudgetChange(event, payIncomeString)\n                    }\n                    type=\"number\"\n                    className=\"form-control\"\n                  ></input>\n                </div>\n                <div className=\"col\">\n                  {/*<label htmlFor=\"other-frequency\">\n                    Other Income Frequency\n                  </label>\n                  <br />\n                  <select\n                    className=\"selectpicker form-control custom-select\"\n                    data-style=\"btn btn-default\"\n                    defaultValue=\"0\"\n                  >\n                    <option disabled value=\"0\">\n                      {\" \"}\n                      Choose date range\n                    </option>\n                    <option value=\"1\">Weekly</option>\n                    <option value=\"1\">Bi-weekly</option>\n                    <option value=\"1\">Bi-monthly</option>\n                    <option value=\"1\">Monthly</option>\n                  </select>\n                  <br />\n                  <label className=\"mt-4\">Other Income Amount</label>*/}\n                  <label className=\"mt-4\">\n                    Expected Other Income Total For {props.spendRangeDays} Days\n                  </label>\n                  <br />\n                  <input\n                    value={state.otherIncomeBudget}\n                    onChange={(event) =>\n                      onIncomeBudgetChange(event, otherIncomeString)\n                    }\n                    type=\"number\"\n                    className=\"form-control\"\n                  ></input>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button\n                    onClick={() => onIncomeSave(payIncomeString)}\n                    className=\"btn secondary mt-4\"\n                  >\n                    Save\n                  </button>\n                </div>\n                <div className=\"col\">\n                  <button\n                    onClick={() => onIncomeSave(otherIncomeString)}\n                    className=\"btn secondary mt-4\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Expenses</h2>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>Waiwai category</th>\n                    <th></th>\n                    <th>Budget for {props.spendRangeDays} days</th>\n                    <th>Spent last {props.spendRangeDays} days</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.categoriesThisSpendRange.map((category, i) => {\n                    if (category.name.includes(\"Income\")) {\n                      return (\n                        <React.Fragment key={category.name}></React.Fragment>\n                      );\n                    }\n                    return (\n                      <SpendPlanRow\n                        key={category.name}\n                        category={category}\n                      ></SpendPlanRow>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  incomeSum: state.plaid.incomeSum,\n  paycheckSum: state.plaid.paycheckSum,\n  otherIncomeSum: state.plaid.otherIncomeSum,\n  categoriesThisSpendRange: state.plaid.categoriesThisSpendRange,\n  spendRangeDays: state.auth.spendRangeDays,\n  accountsLoading: state.plaid.accountsLoading,\n  transactionsLoading: state.plaid.transactionsLoading,\n});\nconst mapDispatchToProps = { saveUserBudget };\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(SpendPlan);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport MUIDataTable from \"mui-datatables\"; // https://github.com/gregnb/mui-datatables\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"../../utils/loading.js\";\nimport ColorHeader from \"../layout/ColorHeader.js\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter.js\";\nimport { defaultCategoriesThisSpendRange } from \"../../utils/waiwaiCategories.js\";\nimport { setTransactionSettings } from \"../../actions/authActions.js\";\n\nconst ManageTransactions = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n\n  if (props.accountsLoading || props.transactionsLoading) {\n    return <Loading />;\n  }\n  const onCategorySelect = (eventkey, event, update_id) => {\n    const transactionPayload = {\n      transactionID: update_id,\n      newMainCategory: eventkey,\n    };\n    getAccessTokenSilently().then((accessToken) => {\n      props.setTransactionSettings(accessToken, transactionPayload);\n    });\n  };\n  const onReviewClick = (review_obj) => {\n    const transactionPayload = {\n      transactionID: review_obj.id,\n      newReviewedState: !review_obj.isReviewed,\n    };\n    getAccessTokenSilently().then((accessToken) => {\n      props.setTransactionSettings(accessToken, transactionPayload);\n    });\n  };\n  const onDuplicateClick = (duplicate_obj) => {\n    const transactionPayload = {\n      transactionID: duplicate_obj.id,\n      newDuplicateState: !duplicate_obj.isDuplicate,\n    };\n    getAccessTokenSilently().then((accessToken) => {\n      props.setTransactionSettings(accessToken, transactionPayload);\n    });\n  };\n  // Setting up mui table\n  const transactionMUIColumns = [\n    { label: \"Date\", name: \"date\" },\n    { label: \"Account\", name: \"account\" },\n    { label: \"Name\", name: \"name\" },\n    { label: \"Amount\", name: \"amount\" },\n    { label: \"Category\", name: \"category\" },\n    {\n      label: \"Update\",\n      name: \"update_id\",\n      options: {\n        filter: false,\n        customBodyRender: (dataValue) => {\n          return (\n            <DropdownButton\n              onSelect={(eventkey, event) =>\n                onCategorySelect(eventkey, event, dataValue)\n              }\n              id=\"category-dropdown\"\n              title=\"Change Category\"\n            >\n              {defaultCategoriesThisSpendRange.map((category) => {\n                return (\n                  <Dropdown.Item key={category.name} eventKey={category.name}>\n                    {category.name === \"Income\"\n                      ? \"Income - Other\"\n                      : category.name}\n                  </Dropdown.Item>\n                );\n              })}\n              <Dropdown.Item eventKey={\"Income - Paycheck\"}>\n                Income - Paycheck\n              </Dropdown.Item>\n            </DropdownButton>\n          );\n          //return <button className=\"btn secondary\">Change Category</button>;\n        },\n      },\n    },\n    {\n      label: \"Reviewed?\",\n      name: \"review_obj\",\n      options: {\n        filter: false,\n        customBodyRender: (dataValue) => {\n          return (\n            <button\n              onClick={() => onReviewClick(dataValue)}\n              className=\"btn secondary\"\n            >\n              {dataValue.isReviewed ? <>Done</> : <>&#x2713;</>}\n            </button>\n          );\n        },\n      },\n    },\n    {\n      label: \"Duplicate?\",\n      name: \"duplicate_obj\",\n      options: {\n        filter: false,\n        customBodyRender: (dataValue) => {\n          return (\n            <button\n              onClick={() => onDuplicateClick(dataValue)}\n              className=\"btn secondary\"\n            >\n              {dataValue.isDuplicate ? <>Dupe</> : <>&#63;</>}\n            </button>\n          );\n        },\n      },\n    },\n  ];\n  const optionsMUI = {\n    filterType: \"checkbox\",\n    selectableRows: \"none\",\n    sortOrder: { name: \"date\", direction: \"desc\" },\n  };\n\n  let transactionsData = [];\n  if (props.transactions) {\n    props.transactions.forEach(function (account) {\n      account.transactions.forEach(function (transaction) {\n        const pushTransaction = {\n          update_id: transaction.transaction_id,\n          review_obj: {\n            id: transaction.transaction_id,\n            isReviewed: transaction.isReviewed,\n          },\n          duplicate_obj: {\n            id: transaction.transaction_id,\n            isDuplicate: transaction.isDuplicate,\n          },\n          account: account.accountName,\n          date: transaction.date,\n          category: transaction.category[0],\n          name: transaction.name,\n          amount: currencyFormatter.format(transaction.amount * -1),\n        };\n        transactionsData.push(pushTransaction);\n      });\n    });\n  }\n\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Transaction\"\n        subHeaderText=\"History\"\n        colorClassName=\"section-header-green\"\n      />\n      {/* Commenting this out because in this version we won't have need/want/save */}\n      {/*<div className=\"section section-donuts\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-lg-3 col-6\">Donut Graph</div>\n              <div className=\"col-lg-3 col-6\">\n                <h2 className=\"\">70%</h2>\n              </div>\n              <div className=\"col-lg-3 col-6\">Graph</div>\n              <div className=\"col-lg-3 col-6\">Graph</div>\n            </div>\n          </div>\n        </div>*/}\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <MUIDataTable\n            title={\"Manage Transactions\"}\n            data={transactionsData}\n            columns={transactionMUIColumns}\n            options={optionsMUI}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  transactions: state.plaid.transactions,\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n  transactionsLoading: state.plaid.transactionsLoading,\n});\nconst mapDispatchToProps = { setTransactionSettings };\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTransactions);\n","import axios from \"axios\";\n\nimport {\n  ADD_ACCOUNT,\n  UPDATE_ACCOUNT,\n  REFRESH_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n  USER_FIRST_VISIT,\n} from \"./types\";\n\nimport { processTransactionList } from \"../utils/processTransactionList.js\";\n\nconst setAxiosAuth = (token) => {\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n};\n\n// Add account\nexport const addAccount = (accessToken, plaidData) => (dispatch, getState) => {\n  const state = getState();\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  axios\n    .post(\"/api/plaid/accounts/add\", plaidData)\n    .then((res) =>\n      dispatch({\n        type: ADD_ACCOUNT,\n        payload: res.data,\n      })\n    )\n    .then((data) => {\n      if (state.plaid.accounts) {\n        return dispatch(\n          getTransactions(\n            accessToken,\n            state.plaid.accounts.concat(data.payload)\n          )\n        );\n      } else {\n        return null;\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\n// Refresh account\nexport const refreshAccount = (plaidData) => (dispatch) => {\n  const id = plaidData.metadata.institution.institution_id;\n  const accounts = plaidData.accounts;\n  axios\n    .post(`/api/plaid/accounts/refresh/${id}`, plaidData)\n    .then((res) =>\n      dispatch({\n        type: REFRESH_ACCOUNT,\n        payload: id,\n      })\n    )\n    .then((data) => (accounts ? dispatch(getTransactions(accounts)) : null))\n    .catch((err) => console.log(err));\n};\n\n// Delete account\nexport const deleteAccount = (accessToken, plaidData) => (\n  dispatch,\n  getState\n) => {\n  const state = getState();\n  const { accounts } = state.plaid;\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = accounts.filter((account) => account._id !== id);\n    axios\n      .delete(`/api/plaid/accounts/${id}`)\n      .then((res) =>\n        dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id,\n        })\n      )\n      .then(\n        newAccounts ? dispatch(getTransactions(accessToken, newAccounts)) : null\n      )\n      .catch((err) => console.log(err));\n  }\n};\n\n// Get all accounts for specific user with Auth0\nexport const getAccounts = (accessToken) => (dispatch) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  dispatch(setAccountsLoading());\n  axios\n    .get(\"/api/plaid/accounts\")\n    .then((res) =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: res.data,\n      })\n    )\n    .catch((err) => {\n      if (err.response.status === 400) {\n        console.log(\"Error 400 indicates user hasn't added any accounts yet\");\n      }\n      dispatch({\n        type: USER_FIRST_VISIT,\n        payload: null,\n      });\n    });\n};\n\n// Accounts loading\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING,\n  };\n};\n\n// Get Transactions with Auth0\nexport const getTransactions = (accessToken, plaidData) => (\n  dispatch,\n  getState\n) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  if (plaidData && plaidData.length !== 0) {\n    dispatch(setTransactionsLoading());\n    axios\n      .post(\"/api/plaid/accounts/transactions\", plaidData)\n      .then((res) => {\n        // Need to check if there are transactions?\n        if (res.data.transactions) {\n          const state = getState();\n          dispatch(\n            processTransactionList(res.data.transactions, state.auth.budgets)\n          );\n          dispatch({\n            type: GET_TRANSACTIONS,\n            payload: res.data.transactions,\n          });\n        } else {\n          // Should throw no a tranasactions error here\n        }\n        if (res.data.needUpdate && res.data.needUpdate.length) {\n          res.data.needUpdate.forEach(function (account) {\n            dispatch({\n              type: UPDATE_ACCOUNT,\n              payload: account,\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: null,\n        });\n      });\n  }\n};\n\n// Transactions loading\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING,\n  };\n};\n","import React, { useCallback } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\n// Can use the following to test component version of Plaid Link\n//import { PlaidLink } from \"react-plaid-link\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  addAccount,\n  refreshAccount,\n  deleteAccount,\n} from \"../actions/accountActions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst ExportDeleteAccountButton = (props) => {\n  const { account, deleteAccount } = props;\n  const accountID = account._id;\n  const { getAccessTokenSilently } = useAuth0();\n\n  const onDeleteClick = useCallback(() => {\n    // send token to server\n    const plaidData = {\n      id: accountID,\n    };\n    getAccessTokenSilently().then((accessToken) => {\n      deleteAccount(accessToken, plaidData);\n    });\n  }, [accountID, getAccessTokenSilently, deleteAccount]);\n\n  return <Button onClick={onDeleteClick}>Delete</Button>;\n};\n\nconst deleteMapStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\n\nexport const DeleteAccountButton = connect(deleteMapStateToProps, {\n  deleteAccount,\n})(ExportDeleteAccountButton);\n\nconst PlaidToExport = (props) => {\n  const { refreshAccount, addAccount } = props;\n  const { getAccessTokenSilently } = useAuth0();\n\n  // In theory you can tell the Plaid Link to get an Auth0 token when it opens\n  /*const onOpen = useCallback((eventName, metadata)) => {\n      if (eventName === \"OPEN\") { .... }\n  },[getAccessTokenSilently]);*/\n\n  const newAccountOnSuccess = useCallback(\n    (token, metadata) => {\n      // send token to server\n      const plaidData = {\n        public_token: token,\n        metadata: metadata,\n      };\n      getAccessTokenSilently().then((accessToken) => {\n        addAccount(accessToken, plaidData);\n      });\n    },\n    [addAccount, getAccessTokenSilently]\n  );\n  const refreshAccountOnSuccess = useCallback(\n    (token, metadata) => {\n      // send token to server\n      const plaidData = {\n        public_token: token,\n        metadata: metadata,\n      };\n\n      getAccessTokenSilently().then((token) => {\n        refreshAccount({ token: token, plaidData: plaidData });\n      });\n    },\n    [getAccessTokenSilently, refreshAccount]\n  );\n\n  const config = {\n    //token: \"\",\n    clientName: process.env.REACT_APP_NAME,\n    publicKey: process.env.REACT_APP_PLAID_PUBLIC_KEY,\n    env: process.env.REACT_APP_PLAID_ENV_STRING,\n    product: [\"transactions\"],\n    onSuccess: newAccountOnSuccess,\n    // ...\n  };\n\n  if (props.existingAccount && props.existingAccount.toRefresh) {\n    config.token = props.existingAccount.publicToken;\n    config.onSuccess = refreshAccountOnSuccess;\n  }\n\n  const { open, ready /*, error*/ } = usePlaidLink(config);\n\n  return (\n    <>\n      {/* Note this button is used to refresh accounts and also add new accounts\n      depending on what props are supplied*/}\n      <Button\n        onClick={() => open()}\n        disabled={\n          !ready || (props.existingAccount && !props.existingAccount.toRefresh)\n        }\n      >\n        {props.buttonText}\n      </Button>\n      {/* Can use the following to test component version of Plaid Link*/}\n      {/*<PlaidLink {...config}>Connect a bank account</PlaidLink>*/}\n    </>\n  );\n};\n\nPlaidToExport.displayName = \"Plaid\";\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = {\n  addAccount,\n  refreshAccount,\n};\n\n// Note that there is probably a better way to do this with React hooks now\nexport const PlaidButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlaidToExport);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PlaidButton, DeleteAccountButton } from \"../../utils/plaidButton.js\";\nimport ColorHeader from \"../layout/ColorHeader\";\n\nconst BankAccountsPage = (props) => {\n  const listAccounts = props.accounts.map((account, i) => {\n    return (\n      <div className=\"row mb-4\" key={account._id}>\n        <div className=\"col\">\n          <h2>{account.institutionName}</h2>\n          <PlaidButton\n            className=\"Secondary\"\n            buttonText=\"Refresh\"\n            existingAccount={account}\n          />{\" \"}\n          <span className=\"notButton\">\n            <DeleteAccountButton account={account} />\n          </span>\n        </div>\n      </div>\n    );\n  });\n\n  const addButton = (\n    <div className=\"row\">\n      <div className=\"col\">\n        <PlaidButton\n          buttonText=\"Connect a new bank account\"\n          existingAccount={null}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Bank Accounts\"\n        subHeaderText=\"\"\n        colorClassName=\"section-header-blue\"\n      />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\"></div>\n          </div>\n          {props.accountsLoading ? <></> : listAccounts}\n          {addButton}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\nconst mapDispatchToProps = {};\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(BankAccountsPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ColorHeader from \"../layout/ColorHeader\";\nconst UserProfilePage = (props) => {\n  const { user } = useAuth0();\n  const spendRangeDaysOptions = [7, 14, 30];\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Profile\"\n        subHeaderText=\"\"\n        colorClassName=\"section-header-green\"\n      />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <img src={user.picture} alt={user.name} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">Name: {user.name}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">Email: {user.email}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">You are using this date range:</div>\n          </div>\n          <div>\n            <div className=\"form-group\">\n              <select\n                className=\"selectpicker\"\n                data-style=\"btn btn-default\"\n                defaultValue={props.spendRangeDays}\n              >\n                <option disabled value={0}>\n                  {\" \"}\n                  Choose date range\n                </option>\n                {spendRangeDaysOptions.map((daysOption, i) => {\n                  return (\n                    <option key={i} value={daysOption}>\n                      {daysOption + \" days\"}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  spendRangeDays: state.auth.spendRangeDays,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(UserProfilePage);\n","import {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  SET_BUDGETS,\n  GET_USER_INFO,\n} from \"../actions/types\";\nimport { AUTH_MOCK_DATA } from \"./reduxMockData\";\n\nconst isEmpty = require(\"is-empty\");\n// Try loading some demo/example data\nconst initialState = AUTH_MOCK_DATA;\n// Below here is the normal initial state\n/*const initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false,\n  budgets: {},\n  categoryMap: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_BUDGETS:\n      return {\n        ...state,\n        budgets: action.payload.allBudgets,\n        expenseBudgetSum: action.payload.expenseBudgetSum,\n      };\n    case GET_USER_INFO:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","export const AUTH_MOCK_DATA = {\n  isAuthenticated: true,\n  user: {\n    id: \"123456789012345678901234\",\n    name: \"Test Person\",\n    iat: null,\n    exp: null,\n  },\n  loading: false,\n  budgets: {\n    Food: 200,\n    Debt: 50,\n    Transportation: 20,\n    Entertainment: 10,\n    Personal: 100,\n  },\n  expenseBudgetSum: 380,\n  spendRangeDays: 30,\n  perTransactionSettings: {},\n};\n// NOTE THAT I'VE ADDED EXTRA MOCK DATA FOR\n// categoriesThisSpendRange, spendingByCategory, incomeSum, and spendingSum\n// (because it could be a different time period)\nexport const PLAID_MOCK_DATA = {\n  accounts: [\n    {\n      _id: \"5f49c1e2a80e4610fd0bf121\",\n      userId: \"auth0|5f49a0239c5106006de188a7\",\n      itemId: \"gV6ZBM1kanFa3LjGkG5JIvN54wjW8WuEBEkyQ\",\n      institutionId: \"ins_6\",\n      institutionName: \"US Bank\",\n      __v: 0,\n    },\n    {\n      _id: \"5f4b054ece06fa012ce5ef3b\",\n      userId: \"auth0|5f49a0239c5106006de188a7\",\n      itemId: \"r3rqnGXrwDCJzn4N8l87UgwZmoWvjlt7ev9eb\",\n      institutionId: \"ins_13\",\n      institutionName: \"PNC\",\n      __v: 0,\n    },\n  ],\n  transactions: [\n    {\n      accountName: \"US Bank\",\n      transactions: [\n        {\n          account_id: \"E4WEAVZvBmFKleBJnJDrs1DWAowWM6cX1QKG9\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-08-28\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"eVDQrMZ1xAFyeRNnqnBmh4pyqkqgamtL9vxye\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"oVoNj1A9mqFozvpLwLqWI8m6xzr67auRz9lgR\",\n          account_owner: null,\n          amount: 6.33,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-26\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"3gxwanmdXjHmgK5GrGkQTwqXQ6Q1K5CqlgWGq\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"E4WEAVZvBmFKleBJnJDrs1DWAowWM6cX1QKG9\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"QoAgNpnmGxTdK4BgDgLpU58qDrDMnVtpmPjrA\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"E4WEAVZvBmFKleBJnJDrs1DWAowWM6cX1QKG9\",\n          account_owner: null,\n          amount: 2078.5,\n          authorized_date: null,\n          category: [\"Debt\", \"\"],\n          category_id: \"16000000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"1pB3x6nmMNudGy5l8lRAUQkbgvgJGxH5j9DbA\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\"],\n          waiwai_categories: [\"Debt\", \"\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"E4WEAVZvBmFKleBJnJDrs1DWAowWM6cX1QKG9\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"MMVGxgkoNru6EvVkBkARi1dP8V8lRzI96Xmbj\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"E4WEAVZvBmFKleBJnJDrs1DWAowWM6cX1QKG9\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Personal\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"ZVADLE3eyQF18DlENEdqIBv4pPp7AaFgqaxnA\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Shops\", \"Sporting Goods\"],\n          waiwai_categories: [\"Personal\", \"Sporting Goods\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"gV6ZBM1kanFa3LjGkG5JIvNn75bnKDcgwDmzE\",\n          account_owner: null,\n          amount: 25,\n          authorized_date: null,\n          category: [\"Debt\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"PpAX4kGoZ3uJ4K6eweD7I98A5K5kwZi76LKE8\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\", \"Credit Card\"],\n          waiwai_categories: [\"Debt\", \"Credit Card\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"oVoNj1A9mqFozvpLwLqWI8m6xzr67auRz9lgR\",\n          account_owner: null,\n          amount: 5.4,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xVmwoDz5W4Fjrabxvx4EFeN9WyW4jwin4MQm6\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"WGAgZXrzyjUGg4ZJEJowH7vGj8dGQ6ClDMmn4\",\n          account_owner: null,\n          amount: 5850,\n          authorized_date: null,\n          category: [\"Personal\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"pVmp7MG9RKFe7yobdbKaslRPL8LMz6tLolX9R\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Debit\"],\n          waiwai_categories: [\"Personal\", \"Debit\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"8GPV7JzqjMURp67ZeZKzc9PnVzen3QswGalMZ\",\n          account_owner: null,\n          amount: 1000,\n          authorized_date: null,\n          category: [\"Income\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"7AN3jRrl5ZhZ3LK5B5krIJng848lpWugJbw43\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Deposit\"],\n          waiwai_categories: [\"Income\", \"Deposit\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"E4WEAVZvBmFKleBJnJDrs1DWAowWM6cX1QKG9\",\n          account_owner: null,\n          amount: 78.5,\n          authorized_date: null,\n          category: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"LZwy3p8oNKCDJWxZqZkoIGnwgZgQM1HPj63gZ\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          waiwai_categories: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"oVoNj1A9mqFozvpLwLqWI8m6xzr67auRz9lgR\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"dV9aKMQ83WF8AX4EwEzRFjv8wqwQeLfZEyXoB\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"oVoNj1A9mqFozvpLwLqWI8m6xzr67auRz9lgR\",\n          account_owner: null,\n          amount: 12,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"aVGyA6j9rgFeXrxlJlq7sBpeJPJMEzF756Xp1\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"oVoNj1A9mqFozvpLwLqWI8m6xzr67auRz9lgR\",\n          account_owner: null,\n          amount: 4.33,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005043\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"48dj4nlGk7uxV31GQGRligAZWKW53eHdbpm83\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"oVoNj1A9mqFozvpLwLqWI8m6xzr67auRz9lgR\",\n          account_owner: null,\n          amount: 89.4,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"N1ybd8WgjzSKQ19nanDqsqv85n5jx3UW68VLx\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"gV6ZBM1kanFa3LjGkG5JIvNn75bnKDcgwDmzE\",\n          account_owner: null,\n          amount: -4.22,\n          authorized_date: null,\n          category: [\"Income\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-08-08\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"jV6XdLoPmyF5EaQdmd4XsV7lmNmrb9C1WKQoQ\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Credit\"],\n          waiwai_categories: [\"Income\", \"Credit\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n      ],\n    },\n    {\n      accountName: \"PNC\",\n      transactions: [\n        {\n          account_id: \"llb7nGgbADhrPeQAMzM9C1k8DPRvmrCZVRK9q\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-08-28\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"r3rqnGXrwDCJzn4N8l87UgwRpqJNNgHlnm4Wv\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"5rd7mBzd5bU9v35bBaBkIBP1Mv8oQmcZ18aBP\",\n          account_owner: null,\n          amount: 6.33,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-26\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"DMgoDLKgBqTALj3mo8oPHlawEBDAAlFvkdDla\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"llb7nGgbADhrPeQAMzM9C1k8DPRvmrCZVRK9q\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"z7NJXGBNzrtlPwvpBRBXTnVGLol33nfozjrZv\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"llb7nGgbADhrPeQAMzM9C1k8DPRvmrCZVRK9q\",\n          account_owner: null,\n          amount: 2078.5,\n          authorized_date: null,\n          category: [\"Debt\", \"\"],\n          category_id: \"16000000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xPaxnGLaKqUW4Rlpb3bmsDy4NQWrrDfnqgjXz\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\"],\n          waiwai_categories: [\"Debt\", \"\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"llb7nGgbADhrPeQAMzM9C1k8DPRvmrCZVRK9q\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"3q3PArV3JbUbkePJ5y58FE61qdQNNESqBX6vA\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"llb7nGgbADhrPeQAMzM9C1k8DPRvmrCZVRK9q\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Personal\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"BQpwbMNpkZf8PNJx9l94UM98mwLZZMiwQaERP\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Shops\", \"Sporting Goods\"],\n          waiwai_categories: [\"Personal\", \"Sporting Goods\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"J8nkDqdnVxTbozEe7V7MF37P6mGDLBTdDkl7E\",\n          account_owner: null,\n          amount: 25,\n          authorized_date: null,\n          category: [\"Debt\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"llb7nGgbADhrPeQAMzM9C1k3PrmKK1hZkNQzo\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\", \"Credit Card\"],\n          waiwai_categories: [\"Debt\", \"Credit Card\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"5rd7mBzd5bU9v35bBaBkIBP1Mv8oQmcZ18aBP\",\n          account_owner: null,\n          amount: 5.4,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"VxdpDjodqLhZWb7d3K3niMwmPb8ZZMiWwl15d\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"qBKlyG5KADUprV8agQgNcBlnGDrmpqcdzRebm\",\n          account_owner: null,\n          amount: 5850,\n          authorized_date: null,\n          category: [\"Personal\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"aM1kb8J17XTDq8Z3xyx5iWPMpbJwwWU7znwb4\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Debit\"],\n          waiwai_categories: [\"Personal\", \"Debit\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"kGnwW6XnADunN8wQVrVes4rN1WPeAbFWlo4P9\",\n          account_owner: null,\n          amount: 1000,\n          authorized_date: null,\n          category: [\"Income\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"KEbRDKwbPdIwDleQrPr1hxrZLW5wwxfVLJq7x\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Deposit\"],\n          waiwai_categories: [\"Income\", \"Deposit\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"llb7nGgbADhrPeQAMzM9C1k8DPRvmrCZVRK9q\",\n          account_owner: null,\n          amount: 78.5,\n          authorized_date: null,\n          category: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"dpog6keoZXTPzJda4D4vSPqQvawJJPtZm9KdM\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          waiwai_categories: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"5rd7mBzd5bU9v35bBaBkIBP1Mv8oQmcZ18aBP\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"wNd3mGDdqlS3aKwEnWnQInG5M63rrnfr5Mwym\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"5rd7mBzd5bU9v35bBaBkIBP1Mv8oQmcZ18aBP\",\n          account_owner: null,\n          amount: 12,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"5rd7mBzd5bU9v35bBaBkIBPkvmQllBuZWJl4Q\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"5rd7mBzd5bU9v35bBaBkIBP1Mv8oQmcZ18aBP\",\n          account_owner: null,\n          amount: 4.33,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005043\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"J8nkDqdnVxTbozEe7V7MF374mBLbb3sd9x3KX\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"5rd7mBzd5bU9v35bBaBkIBP1Mv8oQmcZ18aBP\",\n          account_owner: null,\n          amount: 89.4,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"kGnwW6XnADunN8wQVrVes4r5WbAoo4FWXanGD\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n        {\n          account_id: \"J8nkDqdnVxTbozEe7V7MF37P6mGDLBTdDkl7E\",\n          account_owner: null,\n          amount: -4.22,\n          authorized_date: null,\n          category: [\"Income\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-08-08\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"qBKlyG5KADUprV8agQgNcBlKDqpwwBudZxGvK\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Credit\"],\n          waiwai_categories: [\"Income\", \"Credit\"],\n          isReviewed: false,\n          isDuplicate: false,\n        },\n      ],\n    },\n  ],\n  accountsLoading: false,\n  transactionsLoading: false,\n  userFirstVisit: false,\n  incomeSum: 1008.44,\n  paycheckSum: 0,\n  otherIncomeSum: 1008.44,\n  spendingSum: 22298.920000000002,\n  totalTransactionCount: 32,\n  reviewedTransactionCount: 0,\n  categoriesThisSpendRange: [\n    {\n      x: 1,\n      name: \"Housing\",\n    },\n    {\n      x: 2,\n      name: \"Transportation\",\n    },\n    {\n      x: 3,\n      name: \"Food\",\n    },\n    {\n      x: 4,\n      name: \"Utilities\",\n    },\n    {\n      x: 5,\n      name: \"Insurance & Healthcare\",\n    },\n    {\n      x: 6,\n      name: \"Debt\",\n    },\n    {\n      x: 7,\n      name: \"Personal\",\n    },\n    {\n      x: 8,\n      name: \"Education\",\n    },\n    {\n      x: 9,\n      name: \"Child Care\",\n    },\n    {\n      x: 10,\n      name: \"Entertainment\",\n    },\n    {\n      x: 11,\n      name: \"Savings\",\n    },\n    {\n      x: 12,\n      name: \"Income\",\n    },\n  ],\n  spendingByCategory: {\n    Housing: 0,\n    Transportation: 1023.46,\n    Food: 2211.46,\n    Utilities: 0,\n    \"Insurance & Healthcare\": 0,\n    Debt: 4207,\n    Personal: 12700,\n    Education: 0,\n    \"Child Care\": 0,\n    Entertainment: 157,\n    Savings: 0,\n    Income: 2000,\n  },\n  sortedCategoriesUnderBudget: [\n    \"Housing\",\n    \"Utilities\",\n    \"Insurance & Healthcare\",\n    \"Education\",\n    \"Child Care\",\n  ],\n  sortedCategoriesOverBudget: [\n    \"Transportation\",\n    \"Food\",\n    \"Debt\",\n    \"Entertainment\",\n    \"Personal\",\n    \"Savings\",\n    \"Income\",\n  ],\n};\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_ACCOUNT,\n  REFRESH_ACCOUNT,\n  UPDATE_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n  SET_TRANSACTION_DATA,\n  USER_FIRST_VISIT,\n} from \"../actions/types\";\n\nimport { PLAID_MOCK_DATA } from \"./reduxMockData\";\n\nconst isLiveData = process.env.REACT_APP_LIVEDATA === \"true\";\n\n// Try loading some demo/example data\nconst initialState = PLAID_MOCK_DATA;\nif (isLiveData) {\n  initialState.accounts = [];\n  initialState.transactions = [];\n  initialState.accountsLoading = true;\n  initialState.transactionsLoading = true;\n  initialState.userFirstVisit = false;\n}\n// Below here is the normal initial state\n/*const initialState = {\n  accounts: [],\n  transactions: [],\n  accountsLoading: false,\n  transactionsLoading: false,\n  incomeSum: 0.00,\n  spendingSum: 0.00,\n  totalTransactionCount: 0,\n  reviewedTransactionCount: 0,\n  categoriesThisSpendRange: [],\n  spendingByCategory: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ACCOUNTS_LOADING:\n      return {\n        ...state,\n        accountsLoading: true,\n      };\n    case ADD_ACCOUNT:\n      return {\n        ...state,\n        accounts: [...state.accounts, action.payload],\n        accountsLoading: false,\n        userFirstVisit: false,\n      };\n    // The payload to refresh an account is the same account (or new account)\n    case REFRESH_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account.institutionId !== action.payload) {\n            return account;\n          } else {\n            return {\n              ...account,\n              toRefresh: false,\n            };\n          }\n        }),\n      };\n    // The payload to update an account is the newly edited account\n    case UPDATE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account._id !== action.payload._id) {\n            return account;\n          } else {\n            return {\n              ...action.payload,\n            };\n          }\n        }),\n      };\n    case DELETE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.filter(\n          (account) => account._id !== action.payload\n        ),\n      };\n    case GET_ACCOUNTS:\n      return {\n        ...state,\n        accounts: action.payload,\n        accountsLoading: false,\n      };\n    case TRANSACTIONS_LOADING:\n      return {\n        ...state,\n        transactionsLoading: true,\n      };\n    case GET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: action.payload,\n        transactionsLoading: false,\n      };\n    // NOTE: this is not the redux way, this should be designed differently in next refactor\n    case SET_TRANSACTION_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case USER_FIRST_VISIT:\n      return {\n        ...state,\n        userFirstVisit: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  plaid: accountReducer,\n});\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { getAccounts, getTransactions } from \"../../actions/accountActions.js\";\nimport { getUserInfo } from \"../../actions/authActions.js\";\n\nconst TransactionBootstrap = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const { accounts, getTransactions, transactions } = props;\n  useEffect(() => {\n    if (transactions && transactions.length === 0) {\n      getAccessTokenSilently().then((accessToken) => {\n        getTransactions(accessToken, accounts);\n      });\n    }\n  }, [accounts, getAccessTokenSilently, getTransactions, transactions]);\n  return <></>;\n};\n\nconst transactionStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  transactions: state.plaid.transactions,\n});\nconst transactionDispatchToProps = {\n  getTransactions,\n};\n\nconst UseTransactionBootstrap = connect(\n  transactionStateToProps,\n  transactionDispatchToProps\n)(TransactionBootstrap);\n\nconst AccountBootstrap = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const { accounts, getAccounts, accountsLoading, getUserInfo } = props;\n  useEffect(() => {\n    if (accounts && accounts.length === 0) {\n      getAccessTokenSilently().then((accessToken) => {\n        getUserInfo(accessToken);\n        getAccounts(accessToken, accounts);\n      });\n    }\n  }, [accounts, getAccessTokenSilently, getAccounts, getUserInfo]);\n  return accountsLoading ? <></> : <UseTransactionBootstrap />;\n};\n\nconst accountStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\nconst accountDispatchToProps = {\n  getAccounts,\n  getUserInfo,\n};\n\nexport default connect(\n  accountStateToProps,\n  accountDispatchToProps\n)(AccountBootstrap);\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Auth0ProviderWithHistory from \"./utils/auth0-provider-with-history.js\";\nimport PrivateRoute from \"./utils/privateRoute.js\";\nimport Loading from \"./utils/loading.js\";\nimport \"./App.scss\";\nimport Header from \"./components/layout/Header.js\";\nimport Footer from \"./components/layout/Footer.js\";\nimport HomePage from \"./components/layout/HomePage.js\";\nimport SpendStory from \"./components/spend/SpendStory.js\";\nimport SpendPlan from \"./components/spend/SpendPlan.js\";\nimport ManageTransactions from \"./components/spend/ManageTransactions.js\";\nimport BankAccountsPage from \"./components/profile/BankAccountsPage.js\";\nimport UserProfilePage from \"./components/profile/UserProfilePage.js\";\nimport rootReducer from \"./reducers\";\nimport AccountBootstrap from \"./components/layout/TransactionBootstrap.js\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nconst Routing = () => {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  const isLiveData = process.env.REACT_APP_LIVEDATA === \"true\";\n  const accessCheck = process.env.REACT_APP_ACCESSCHECK\n    ? process.env.REACT_APP_ACCESSCHECK\n    : \"\";\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <Header />\n      {isAuthenticated && isLiveData ? <AccountBootstrap /> : <></>}\n      <Switch>\n        <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n          {isAuthenticated ? (\n            <Redirect to=\"/spend-story\" />\n          ) : (\n            <HomePage accessCheck={accessCheck} />\n          )}\n        </Route>\n        <PrivateRoute path=\"/spend-story\" component={SpendStory} />\n        <PrivateRoute path=\"/spend-plan\" component={SpendPlan} />\n        <PrivateRoute\n          path=\"/manage-transactions\"\n          component={ManageTransactions}\n        />\n        <PrivateRoute path=\"/user-profile\" component={UserProfilePage} />\n        <PrivateRoute path=\"/bank-accounts\" component={BankAccountsPage} />\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Auth0ProviderWithHistory>\n          <Routing />\n        </Auth0ProviderWithHistory>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}