{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","actions/accountActions.js","actions/types.js","utils/setAuthToken.js","actions/authActions.js","utils/currencyFormatter.js","components/profile/UserProfile.js","utils/percentFormatter.js","components/layout/SpendRangeHeader.js","components/spend/SpendStory.js","components/spend/SpendPlanRow.js","components/spend/SpendPlan.js","components/spend/ManageTransactionRow.js","components/spend/ManageTransactions.js","reducers/authReducer.js","reducers/reduxMockData.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/index.js","App.js","serviceWorker.js","index.js","logo.svg","img/spend-plan/food-background.svg"],"names":["Header","Navbar","bg","expand","to","NavItem","Brand","href","alt","src","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Footer","Date","getFullYear","getTransactions","plaidData","dispatch","setTransactionsLoading","axios","post","then","res","data","transactions","type","payload","needUpdate","length","forEach","account","catch","err","setAuthToken","token","defaults","headers","common","setCurrentUser","decoded","currencyFormatter","connect","state","auth","props","user","name","Intl","NumberFormat","style","currency","minimumFractionDigits","percentFormatter","spendRangeDaysSelected","plaid","data-style","defaultValue","disabled","value","map","daysOption","i","key","mainHeaderText","subHeaderText","SpendStory","this","accounts","_id","institutionName","userName","format","incomeSum","spendingSum","totalTransactionCount","reviewedTransactionCount","foodLogo","Component","logoutUser","localStorage","removeItem","addAccount","concat","console","log","deleteAccount","window","confirm","newAccounts","filter","delete","refreshAccount","metadata","institution","institution_id","budgets","categoryMap","spendingByCategory","category","bankName","categoriesThisSpendRange","for","selected","Table","striped","bordered","hover","transaction","transaction_id","date","amount","class","classNameName","bank","j","ManageTransactionRow","accountName","isEmpty","require","initialState","isAuthenticated","iat","exp","loading","Shops","Travel","Recreation","userId","itemId","institutionId","__v","account_id","account_owner","authorized_date","category_id","iso_currency_code","location","address","city","lat","lon","store_number","zip","merchant_name","payment_channel","payment_meta","by_order_of","payee","payer","payment_method","payment_processor","ppd_id","reason","reference_number","pending","pending_transaction_id","transaction_type","unofficial_currency_code","accountsLoading","transactionsLoading","x","combineReducers","action","errors","toRefresh","store","configureStore","reducer","rootReducer","App","exact","path","logo","component","SpendPlan","ManageTransactions","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"mQA6DeA,EAtDA,WACb,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAAC,gBAAD,CAAeC,GAAG,KAChB,kBAACC,EAAA,EAAD,KACE,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,KACjB,yBACEC,IAAI,GACJC,IAAI,GACJC,MAAM,KACNC,OAAO,KACPC,UAAU,6BACT,IAPL,YAYJ,kBAACX,EAAA,EAAOY,OAAR,CAAeC,gBAAc,qBAC7B,kBAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKL,UAAU,WAIb,kBAAC,gBAAD,CAAeR,GAAG,gBAChB,kBAACa,EAAA,EAAIC,KAAL,CAAUX,KAAK,KAAf,UAEF,kBAAC,gBAAD,CAAeH,GAAG,eAChB,kBAACa,EAAA,EAAIC,KAAL,CAAUX,KAAK,KAAf,SAEF,kBAAC,gBAAD,CAAeH,GAAG,iBAChB,kBAACa,EAAA,EAAIC,KAAL,CAAUX,KAAK,KAAf,WAEF,kBAAC,gBAAD,CAAeH,GAAG,eAChB,kBAACa,EAAA,EAAIC,KAAL,CAAUX,KAAK,KAAf,SAEF,kBAACY,EAAA,EAAD,CAAaC,MAAM,WAAWJ,GAAG,sBAC/B,kBAACG,EAAA,EAAYE,KAAb,CAAkBd,KAAK,eAAvB,UACA,kBAACY,EAAA,EAAYE,KAAb,CAAkBd,KAAK,eAAvB,kBAGA,kBAACY,EAAA,EAAYE,KAAb,CAAkBd,KAAK,eAAvB,aACA,kBAACY,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBd,KAAK,eAAvB,wBCnBCgB,EA5BA,WACb,OACE,yBAAKX,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,OACb,sCACA,wBAAIA,UAAU,eACZ,sCACA,sCACA,yCAMN,yBAAKA,UAAU,OACb,uBAAGA,UAAU,UAAb,QACS,IAAIY,MAAOC,cADpB,kE,iDCwEGC,EAAkB,SAACC,GAAD,OAAe,SAACC,GAC7CA,EAASC,KACTC,IACGC,KAAK,mCAAoCJ,GACzCK,MAAK,SAACC,GAEDA,EAAIC,KAAKC,cACXP,EAAS,CACPQ,KC5FsB,mBD6FtBC,QAASJ,EAAIC,KAAKC,eAKlBF,EAAIC,KAAKI,YAAcL,EAAIC,KAAKI,WAAWC,QAC7CN,EAAIC,KAAKI,WAAWE,SAAQ,SAAUC,GACpCb,EAAS,CACPQ,KCzGkB,iBD0GlBC,QAASI,UAKhBC,OAAM,SAACC,GACNf,EAAS,CACPQ,KC7GwB,mBD8GxBC,QAAS,YAMJR,EAAyB,WACpC,MAAO,CACLO,KCrHgC,yBCErBQ,EAVM,SAACC,GAChBA,EAEFf,IAAMgB,SAASC,QAAQC,OAAvB,cAAiDH,SAG1Cf,IAAMgB,SAASC,QAAQC,OAAvB,eC+GEC,G,MAAiB,SAACC,GAC7B,MAAO,CACLd,KFvH4B,mBEwH5BC,QAASa,KCpHEC,GCWAC,aALS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAI0B,GAAzBF,EAdK,SAACG,GACnB,OACE,oCACE,yDACA,sCAAYA,EAAMD,KAAKE,KAAKC,UDPR,IAAIC,KAAKC,aAAa,QAAS,CACvDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,KEEVC,EALU,IAAIL,KAAKC,aAAa,QAAS,CACtDC,MAAO,UACPE,sBAAuB,ICgDVV,eALS,SAACC,GAAD,MAAY,CAClCW,uBAAwBX,EAAMY,MAAMD,0BAIE,GAAzBZ,EA/CU,SAACG,GAExB,OACE,oCACE,yBAAK3C,UAAU,kBACf,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,eACVsD,aAAW,kBACXC,aAAcZ,EAAMS,wBAEpB,4BAAQI,UAAQ,EAACC,MAAO,GACrB,IADH,qBAdc,CAAC,EAAG,GAAI,IAkBCC,KAAI,SAACC,EAAYC,GACtC,OACE,4BAAQC,IAAKD,EAAGH,MAAOE,GACpBA,EAAa,cAOxB,4BACGhB,EAAMmB,eACP,6BACA,0BAAM9D,UAAU,gBAAgB2C,EAAMoB,wB,iBCnBhDC,E,uKACM,IACAX,EAAUY,KAAKtB,MAAfU,MACsBA,EAAMa,SAASR,KAAI,SAAC7B,GAAD,OAC/C,yBAAKgC,IAAKhC,EAAQsC,KAAlB,sBAA2CtC,EAAQuC,oBAErD,OACE,oCACE,6BACE,kBAAC,EAAD,CACEN,eAAgBG,KAAKtB,MAAM0B,SAAW,KACtCN,cAAc,gBAEhB,yBAAK/D,UAAU,wBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,0BACb,4BACE,0BAAMA,UAAU,aAAhB,UACA,6BACCuC,EAAkB+B,OAAOjB,EAAMkB,YAElC,4BACE,0BAAMvE,UAAU,aAAhB,YACA,6BAFF,QAKA,4BACE,0BAAMA,UAAU,aAAhB,gBACA,6BAFF,UAQJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,2BACb,4BACE,0BAAMA,UAAU,aAAhB,SACA,6BACCuC,EAAkB+B,OAAOjB,EAAMmB,cAElC,4BACE,0BAAMxE,UAAU,aAAhB,gBACA,6BACCqD,EAAMoB,uBAET,4BACE,0BAAMzE,UAAU,aAAhB,yBACA,6BACCmD,EAAiBmB,OAChBjB,EAAMqB,yBACJrB,EAAMoB,2BAMlB,yBAAKzE,UAAU,8BACb,yBAAKA,UAAU,wBACb,kBAAC,OAAD,CAAMR,GAAG,uBAAuBQ,UAAU,YAA1C,yBAOR,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,4CAEE,6BACA,0BAAMA,UAAU,gBAAhB,eAGJ,yBAAKA,UAAU,OACb,4BACGuC,EAAkB+B,OACjBjB,EAAMkB,UAAYlB,EAAMmB,aAE1B,6BACA,0BAAMxE,UAAU,gBAAhB,sBAGJ,yBAAKA,UAAU,OACb,kBAAC,OAAD,CAAMR,GAAG,cAAcQ,UAAU,OAAjC,2BASZ,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,2CAEF,yBAAKA,UAAU,0BACb,mCAEE,6BACA,0BAAMA,UAAU,gBAAhB,sBAIN,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,uCAEE,6BACA,0BAAMA,UAAU,gBAAhB,mBAIN,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,MAAMJ,IAAI,gBAAgBC,IAAK8E,MAC9C,yBAAK3E,UAAU,oBACb,+CAGJ,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,wBAAd,OAEE,0BAAMA,UAAU,gBACd,6BADF,cAKF,yBAAKA,UAAU,oBAAf,SACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,uBAAGA,UAAU,cAAb,OAEE,0BAAMA,UAAU,gBACd,6BADF,YAMJ,yBAAKA,UAAU,OACb,uBAAGA,UAAU,cAAb,OAEE,0BAAMA,UAAU,gBACd,6BADF,mBAcpB,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,4BACE,0BAAMA,UAAU,aAAhB,WACA,6BAFF,kB,GA5KO4E,aAyMVpC,eALS,SAACC,GAAD,MAAY,CAClCY,MAAOZ,EAAMY,MACbgB,SAAU5B,EAAMC,KAAKE,KAAKC,QAGY,CACtCgC,WLhDwB,kBAAM,SAAC7D,GAE/B8D,aAAaC,WAAW,YAExB/C,GAAa,GAEbhB,EAASqB,EAAe,OK2CxBvB,kBACAkE,WR9MwB,SAACjE,GAAD,OAAe,SAACC,GACxC,IAAMkD,EAAWnD,EAAUmD,SAC3BhD,IACGC,KAAK,0BAA2BJ,GAChCK,MAAK,SAACC,GAAD,OACJL,EAAS,CACPQ,KCjBmB,cDkBnBC,QAASJ,EAAIC,UAGhBF,MAAK,SAACE,GAAD,OACJ4C,EAAWlD,EAASF,EAAgBoD,EAASe,OAAO3D,EAAKG,WAAa,QAEvEK,OAAM,SAACC,GAAD,OAASmD,QAAQC,IAAIpD,QQkM9BqD,cR9K2B,SAACrE,GAAD,OAAe,SAACC,GAC3C,GAAIqE,OAAOC,QAAQ,iDAAkD,CACnE,IAAMlF,EAAKW,EAAUX,GACfmF,EAAcxE,EAAUmD,SAASsB,QACrC,SAAC3D,GAAD,OAAaA,EAAQsC,MAAQ/D,KAE/Bc,IACGuE,OADH,8BACiCrF,IAC9BgB,MAAK,SAACC,GAAD,OACJL,EAAS,CACPQ,KCnDoB,iBDoDpBC,QAASrB,OAGZgB,KAAKmE,EAAcvE,EAASF,EAAgByE,IAAgB,MAC5DzD,OAAM,SAACC,GAAD,OAASmD,QAAQC,IAAIpD,SQgKhC2D,eR/L4B,SAAC3E,GAAD,OAAe,SAACC,GAC5C,IAAMZ,EAAKW,EAAU4E,SAASC,YAAYC,eACpC3B,EAAWnD,EAAUmD,SAC3BhD,IACGC,KADH,sCACuCf,GAAMW,GAC1CK,MAAK,SAACC,GAAD,OACJL,EAAS,CACPQ,KClCuB,kBDmCvBC,QAASrB,OAGZgB,MAAK,SAACE,GAAD,OAAW4C,EAAWlD,EAASF,EAAgBoD,IAAa,QACjEpC,OAAM,SAACC,GAAD,OAASmD,QAAQC,IAAIpD,SQ8KjBS,CAMZwB,G,QC3KYxB,eAPS,SAACC,GAAD,MAAY,CAClCqD,QAASrD,EAAMC,KAAKoD,QACpBC,YAAatD,EAAMC,KAAKqD,YACxBC,mBAAoBvD,EAAMY,MAAM2C,sBAIM,GAAzBxD,EAhDM,SAACG,GACpB,MAC8B,aAA5BA,EAAMsD,SAASC,UACa,YAA5BvD,EAAMsD,SAASC,SAGb,wBAAIrC,IAAKlB,EAAMsD,SAASC,UACtB,4BAAKvD,EAAMsD,SAASC,UACpB,4BACGvD,EAAMoD,aAAepD,EAAMoD,YAAYpD,EAAMsD,SAASC,UACrD,2BACE3C,aAAcZ,EAAMoD,YAAYpD,EAAMsD,SAASC,YAGjD,gCAEF,4BAAQlG,UAAU,IAAlB,SAEF,4BACG2C,EAAMmD,SAAWnD,EAAMmD,QAAQnD,EAAMsD,SAASC,UAC7C,2BACE3C,aAAchB,EAAkB+B,OAC9B3B,EAAMmD,QAAQnD,EAAMsD,SAASC,aAIjC,gCAEF,4BAAQlG,UAAU,IAAlB,SAEF,4BACGuC,EAAkB+B,OACjB3B,EAAMqD,mBAAmBrD,EAAMsD,SAASC,aAMzC,wCCmBI1D,eANS,SAACC,GAAD,MAAY,CAClC0D,yBAA0B1D,EAAMY,MAAM8C,yBACtC/C,uBAAwBX,EAAMY,MAAMD,0BAIE,GAAzBZ,EAvDG,SAACG,GACjB,OACE,oCACE,kBAAC,EAAD,CAAkBmB,eAAe,QAAQC,cAAc,SACvD,yBAAK/D,UAAU,kCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,sCACA,2BAAOoG,IAAI,iBAAX,iBACA,4BAAQpG,UAAU,eAAesD,aAAW,mBAC1C,4BAAQE,UAAQ,EAAC6C,UAAQ,GACtB,IADH,qBAIA,4BAAQ5C,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,cACA,4BAAQA,MAAM,KAAd,gBAMV,yBAAKzD,UAAU,yBACb,yBAAKA,UAAU,aACb,kBAACsG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,kDACA,gDACA,0CAAgB9D,EAAMS,uBAAtB,SACA,0CAAgBT,EAAMS,uBAAtB,WAGJ,+BACGT,EAAMwD,yBAAyBzC,KAAI,SAACuC,EAAUrC,GAC7C,OACE,kBAAC,EAAD,CAAcC,IAAKD,EAAGqC,SAAUA,eClBnCzD,eALS,SAACC,GAAD,MAAY,CAClCsD,YAAatD,EAAMC,KAAKqD,eAIc,GAAzBvD,EAvBe,SAACG,GAC7B,OACE,wBAAIkB,IAAKlB,EAAM+D,YAAYC,gBACzB,4BAAKhE,EAAM+D,YAAYE,MACvB,4BAAKjE,EAAMuD,UACX,4BAAKvD,EAAM+D,YAAY7D,MACvB,4BAAKF,EAAM+D,YAAYG,QACvB,4BAAKlE,EAAM+D,YAAYT,SAAS,IAChC,4BACE,4BAAQa,MAAM,iBAAd,oBAEF,4BACE,4BAAQA,MAAM,iBAAd,eC8COtE,eALS,SAACC,GAAD,MAAY,CAClClB,aAAckB,EAAMY,MAAM9B,gBAIY,GAAzBiB,EAvDY,SAACG,GAC1B,OACE,oCACE,kBAAC,EAAD,CAAkBmB,eAAe,cAAcC,cAAc,YAC7D,yBAAK/D,UAAU,0BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,kBAAf,eACA,yBAAKA,UAAU,kBACb,wBAAI+G,cAAc,IAAlB,QAEF,yBAAK/G,UAAU,kBAAf,SACA,yBAAKA,UAAU,kBAAf,YAIN,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,aACb,kBAACsG,EAAA,EAAD,CAAOC,SAAO,EAACE,OAAK,GAClB,+BACE,4BACE,oCACA,uCACA,2CACA,sCACA,wCACA,sCACA,2CAGJ,+BACG9D,EAAMpB,aAAamC,KAAI,SAACsD,EAAMpD,GAC7B,OAAOoD,EAAKzF,aAAamC,KAAI,SAACgD,EAAaO,GACzC,OACE,kBAACC,EAAD,CACErD,IAAKoD,EACLf,SAAUc,EAAKG,YACfT,YAAaA,kB,gBCnC7BU,EAAUC,EAAQ,KAElBC,ECVwB,CAC5BC,iBAAiB,EACjB3E,KAAM,CACJxC,GAAI,2BACJyC,KAAM,cACN2E,IAAK,KACLC,IAAK,KACL3B,QAAS,GACTC,YAAa,IAEf2B,SAAS,EACT5B,QAAS,CACP,iBAAkB,IAClB6B,MAAO,GACPC,OAAQ,GACRC,WAAY,IAEd9B,YAAa,CACX,iBAAkB,YAClB4B,MAAO,WACPC,OAAQ,SACRC,WAAY,kBCnBVP,EAAe,G,QCYfA,EFayB,CAC7BpD,SAAU,CACR,CACEC,IAAK,2BACL2D,OAAQ,2BACRC,OAAQ,wCACRC,cAAe,QACf5D,gBAAiB,QACjB6D,IAAK,GAEP,CACE9D,IAAK,2BACL2D,OAAQ,2BACRC,OAAQ,wCACRC,cAAe,aACf5D,gBAAiB,OACjB6D,IAAK,IAGT1G,aAAc,CACZ,CACE4F,YAAa,OACb5F,aAAc,CACZ,CACE2G,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,eAC7BoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,aACfjG,KAAM,aACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,OACTuB,gBAAiB,KACjBnC,SAAU,CAAC,WACXoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,4BACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,cAAe,aAC5CoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,MACfjG,KAAM,MACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,QAAS,kBACpBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,uBACfjG,KAAM,uBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,GACTuB,gBAAiB,KACjBnC,SAAU,CAAC,UAAW,eACtBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,+BACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,QACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,OACfjG,KAAM,yBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,WAAY,SACvBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,wCACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,MAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,WAAY,WACvBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,uBACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,aAAc,4BACzBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,aACfjG,KAAM,sBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,OAAQ,IACRuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,kCACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,kBACfjG,KAAM,kBACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,GACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,cAAe,aAC5CoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,OACdC,IAAK,MAEPC,cAAe,aACfjG,KAAM,aACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,cAAe,eAC5CoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,YACfjG,KAAM,YACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,eAC7BoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,WACfjG,KAAM,WACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,OAAQ,KACRuB,gBAAiB,KACjBnC,SAAU,CAAC,WAAY,UACvBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,eACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,kCACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,kBACfjG,KAAM,kBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,QACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,OACfjG,KAAM,yBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,QAIhC,CACEzC,YAAa,QACb5F,aAAc,CACZ,CACE2G,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,eAC7BoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,aACfjG,KAAM,aACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,OACTuB,gBAAiB,KACjBnC,SAAU,CAAC,WACXoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,4BACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,cAAe,aAC5CoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,MACfjG,KAAM,MACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,QAAS,kBACpBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,uBACfjG,KAAM,uBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,GACTuB,gBAAiB,KACjBnC,SAAU,CAAC,UAAW,eACtBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,+BACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,QACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,OACfjG,KAAM,yBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,WAAY,SACvBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,wCACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,MAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,WAAY,WACvBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,uBACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,aAAc,4BACzBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,aACfjG,KAAM,sBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,OAAQ,IACRuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,kCACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,kBACfjG,KAAM,kBACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,GACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,cAAe,aAC5CoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,OACdC,IAAK,MAEPC,cAAe,aACfjG,KAAM,aACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,cAAe,eAC5CoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,YACfjG,KAAM,YACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,iBAAkB,eAC7BoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,WACfjG,KAAM,WACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,QAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,OAAQ,KACRuB,gBAAiB,KACjBnC,SAAU,CAAC,WAAY,UACvBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,KACfjG,KAAM,eACNkG,gBAAiB,QACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,IACTuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,kCACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,kBACfjG,KAAM,kBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,MAE5B,CACE1B,WAAY,wCACZC,cAAe,KACftB,QAAS,KACTuB,gBAAiB,KACjBnC,SAAU,CAAC,SAAU,QACrBoC,YAAa,WACbzB,KAAM,aACN0B,kBAAmB,MACnBC,SAAU,CACRC,QAAS,KACTC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLlG,MAAO,KACPmG,aAAc,KACdC,IAAK,MAEPC,cAAe,OACfjG,KAAM,yBACNkG,gBAAiB,WACjBC,aAAc,CACZC,YAAa,KACbC,MAAO,KACPC,MAAO,KACPC,eAAgB,KAChBC,kBAAmB,KACnBC,OAAQ,KACRC,OAAQ,KACRC,iBAAkB,MAEpBC,SAAS,EACTC,uBAAwB,KACxB/C,eAAgB,wCAChBgD,iBAAkB,UAClBC,yBAA0B,SAKlCC,iBAAiB,EACjBC,qBAAqB,EACrBvF,UAAW,IACXC,YAAa,QACbpB,uBAAwB,GACxBqB,sBAAuB,GACvBC,yBAA0B,GAC1ByB,yBAA0B,CACxB,CAAED,SAAU,iBAAkB6D,EAAG,EAAGlH,KAAM,IAC1C,CAAEqD,SAAU,QAAS6D,EAAG,EAAGlH,KAAM,IACjC,CAAEqD,SAAU,SAAU6D,EAAG,EAAGlH,KAAM,IAClC,CAAEqD,SAAU,aAAc6D,EAAG,EAAGlH,KAAM,KAExCmD,mBAAoB,CAClB,iBAAkB,QAClB2B,MAAO,IACPC,OAAQ,SACRC,WAAY,MGtuCDmC,cAAgB,CAC7BtH,KJca,WAAyC,IAA/BD,EAA8B,uDAAtB6E,EAAc2C,EAAQ,uCACrD,OAAQA,EAAOzI,MACb,IZpB4B,mBYqB1B,OAAO,eACFiB,EADL,CAEE8E,iBAAkBH,EAAQ6C,EAAOxI,SACjCmB,KAAMqH,EAAOxI,UAEjB,IZ3BwB,eY4BtB,OAAO,eACFgB,EADL,CAEEiF,SAAS,IAEb,IZtBuB,cYuBrB,OAAO,eACFjF,EADL,CAEEqD,QAASmE,EAAOxI,UAEpB,IZ1B4B,mBY2B1B,OAAO,eACFgB,EADL,CAEEsD,YAAakE,EAAOxI,UAExB,QACE,OAAOgB,IIrCXyH,OFHa,WAAyC,IAA/BzH,EAA8B,uDAAtB6E,EAAc2C,EAAQ,uCACrD,OAAQA,EAAOzI,MACb,IdNsB,acOpB,OAAOyI,EAAOxI,QAChB,QACE,OAAOgB,IEDXY,MDsBa,WAAyC,IAA/BZ,EAA8B,uDAAtB6E,EAAc2C,EAAQ,uCACrD,OAAQA,EAAOzI,MACb,IfxB4B,mBeyB1B,OAAO,eACFiB,EADL,CAEEoH,iBAAiB,IAErB,IflCuB,cemCrB,OAAO,eACFpH,EADL,CAEEyB,SAAS,CAAE+F,EAAOxI,SAAV,mBAAsBgB,EAAMyB,aAGxC,IfvC2B,kBewCzB,OAAO,eACFzB,EADL,CAEEyB,SAAUzB,EAAMyB,SAASR,KAAI,SAAC7B,GAC5B,OAAIA,EAAQmG,gBAAkBiC,EAAOxI,QAC5BI,EAEA,eACFA,EADL,CAEEsI,WAAW,SAMrB,IfrD0B,iBesDxB,OAAO,eACF1H,EADL,CAEEyB,SAAUzB,EAAMyB,SAASR,KAAI,SAAC7B,GAC5B,OAAIA,EAAQsC,MAAQ8F,EAAOxI,QAAQ0C,IAC1BtC,EAEA,eACFoI,EAAOxI,cAKpB,IfjE0B,iBekExB,OAAO,eACFgB,EADL,CAEEyB,SAAUzB,EAAMyB,SAASsB,QACvB,SAAC3D,GAAD,OAAaA,EAAQsC,MAAQ8F,EAAOxI,aAG1C,IfvEwB,eewEtB,OAAO,eACFgB,EADL,CAEEyB,SAAU+F,EAAOxI,QACjBoI,iBAAiB,IAErB,If1EgC,uBe2E9B,OAAO,eACFpH,EADL,CAEEqH,qBAAqB,IAEzB,IfhF4B,mBeiF1B,OAAO,eACFrH,EADL,CAEElB,aAAc0I,EAAOxI,QACrBqI,qBAAqB,IAEzB,QACE,OAAOrH,MEnFP2H,EAAQC,YAAe,CAC3BC,QAASC,IA8BIC,MA3Bf,WACE,OACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,KAChB,yBAAK1K,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKH,IAAK8K,IAAM3K,UAAU,WAAWJ,IAAI,SACzC,6GAON,kBAAC,IAAD,CAAO8K,KAAK,eAAeE,UAAW5G,IACtC,kBAAC,IAAD,CAAO0G,KAAK,cAAcE,UAAWC,IACrC,kBAAC,IAAD,CAAOH,KAAK,uBAAuBE,UAAWE,KAEhD,kBAAC,EAAD,SC1BYC,QACW,cAA7B1F,OAAOkD,SAASyC,UAEe,UAA7B3F,OAAOkD,SAASyC,UAEhB3F,OAAOkD,SAASyC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrK,MAAK,SAACsK,GACLA,EAAaC,gBAEd7J,OAAM,SAAC8J,GACN1G,QAAQ0G,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.1abf425a.chunk.js","sourcesContent":["import React from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport NavItem from \"react-bootstrap/NavItem\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nconst Header = () => {\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <LinkContainer to=\"/\">\n          <NavItem>\n            <Navbar.Brand href=\"/\">\n              <img\n                alt=\"\"\n                src=\"\"\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />{\" \"}\n             Waiwai\n            </Navbar.Brand>\n          </NavItem>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n      {/*<LinkContainer to=\"/\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n            </LinkContainer>*/}\n            <LinkContainer to=\"/spend-story\">\n              <Nav.Link href=\"#\">spend</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/save-story\">\n              <Nav.Link href=\"#\">save</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/borrow-story\">\n              <Nav.Link href=\"#\">borrow</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/plan-story\">\n              <Nav.Link href=\"#\">plan</Nav.Link>\n            </LinkContainer>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <div className=\"main-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {/*Column 1*/}\n          <div className=\"col\">\n            <h4>Footer</h4>\n            <ul className=\"footer-list\">\n              <li>item 1</li>\n              <li>item 2</li>\n              <li>item 3</li>\n            </ul>\n          </div>\n          {/*Column 2*/}\n          {/*Column 3*/}\n        </div>\n        <div className=\"row\">\n          <p className=\"col-sm\">\n            &copy;{new Date().getFullYear()} WAIWAI | All rights reserved |\n            Terms of service | Privacy\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nimport {\n  ADD_ACCOUNT,\n  UPDATE_ACCOUNT,\n  REFRESH_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n} from \"./types\";\n\n// Add account\nexport const addAccount = (plaidData) => (dispatch) => {\n  const accounts = plaidData.accounts;\n  axios\n    .post(\"/api/plaid/accounts/add\", plaidData)\n    .then((res) =>\n      dispatch({\n        type: ADD_ACCOUNT,\n        payload: res.data,\n      })\n    )\n    .then((data) =>\n      accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n    )\n    .catch((err) => console.log(err));\n};\n\n// Refresh account\nexport const refreshAccount = (plaidData) => (dispatch) => {\n  const id = plaidData.metadata.institution.institution_id;\n  const accounts = plaidData.accounts;\n  axios\n    .post(`/api/plaid/accounts/refresh/${id}`, plaidData)\n    .then((res) =>\n      dispatch({\n        type: REFRESH_ACCOUNT,\n        payload: id,\n      })\n    )\n    .then((data) => (accounts ? dispatch(getTransactions(accounts)) : null))\n    .catch((err) => console.log(err));\n};\n\n// Delete account\nexport const deleteAccount = (plaidData) => (dispatch) => {\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = plaidData.accounts.filter(\n      (account) => account._id !== id\n    );\n    axios\n      .delete(`/api/plaid/accounts/${id}`)\n      .then((res) =>\n        dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id,\n        })\n      )\n      .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n      .catch((err) => console.log(err));\n  }\n};\n\n// Get all accounts for specific user\nexport const getAccounts = () => (dispatch) => {\n  dispatch(setAccountsLoading());\n  axios\n    .get(\"/api/plaid/accounts\")\n    .then((res) =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: res.data,\n      })\n    )\n    .catch((err) =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: null,\n      })\n    );\n};\n\n// Accounts loading\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING,\n  };\n};\n\n// Get Transactions\nexport const getTransactions = (plaidData) => (dispatch) => {\n  dispatch(setTransactionsLoading());\n  axios\n    .post(\"/api/plaid/accounts/transactions\", plaidData)\n    .then((res) => {\n      // Need to check if there are transactions?\n      if (res.data.transactions) {\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: res.data.transactions,\n        });\n      } else {\n        // Should throw no a tranasactions error here\n      }\n      if (res.data.needUpdate && res.data.needUpdate.length) {\n        res.data.needUpdate.forEach(function (account) {\n          dispatch({\n            type: UPDATE_ACCOUNT,\n            payload: account,\n          });\n        });\n      }\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: null,\n      });\n    });\n};\n\n// Transactions loading\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING,\n  };\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\nexport const REFRESH_ACCOUNT = \"REFRESH_ACCOUNT\";\nexport const UPDATE_ACCOUNT = \"UPDATE_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const ACCOUNTS_LOADING = \"ACCOUNTS_LOADING\";\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\nexport const TRANSACTIONS_LOADING = \"TRANSACTIONS_LOADING\";\nexport const SET_BUDGETS = \"SET_BUDGETS\";\nexport const SET_CATEGORY_MAP = \"SET_CATEGORY_MAP\";\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING,\n  SET_BUDGETS,\n  SET_CATEGORY_MAP,\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then((res) => history.push(\"/login\"))\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\nexport const saveUserBudget = (budgetData) => (dispatch) => {\n  axios\n    .post(`/api/users/budgets`, budgetData)\n    .then((res) => {\n      dispatch(setCookiesAndCurrentBudgets(res.data.userId, res.data.budgets));\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\nexport const saveUserCategoryMap = (catMapData) => (dispatch) => {\n  axios\n    .post(`/api/users/category-map`, catMapData)\n    .then((res) => {\n      dispatch(setCookiesAndCategoryMap(res.data.userId, res.data.categoryMap));\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n      dispatch(setCookiesAndCurrentBudgets(decoded.id, decoded.budgets));\n      dispatch(setCookiesAndCategoryMap(decoded.id, decoded.categoryMap));\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// userInfo - get user info for logged in user\nexport const getUserInfo = () => (dispatch) => {\n  axios\n    .get(\"/api/users/user-info\")\n    .then((res) => {\n      const returnedUser = res.data;\n\n      dispatch(\n        setCookiesAndCurrentBudgets(returnedUser.id, returnedUser.budgets)\n      );\n      dispatch(\n        setCookiesAndCategoryMap(returnedUser.id, returnedUser.categoryMap)\n      );\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setCookiesAndCurrentBudgets = (userId, budgets) => (dispatch) => {\n  let allBudgets = {};\n  if (localStorage.allBudgets) {\n    allBudgets = JSON.parse(localStorage.allBudgets);\n  }\n  allBudgets[userId] = budgets;\n  localStorage.allBudgets = JSON.stringify(allBudgets);\n  dispatch(setCurrentBudgets(budgets));\n};\n\n// Set logged in user budgets\nexport const setCurrentBudgets = (budgets) => {\n  return {\n    type: SET_BUDGETS,\n    payload: budgets,\n  };\n};\n\nconst setCookiesAndCategoryMap = (userId, categoryMap) => (dispatch) => {\n  let allCatMaps = {};\n  if (localStorage.allCatMaps) {\n    allCatMaps = JSON.parse(localStorage.allCatMaps);\n  }\n  allCatMaps[userId] = categoryMap;\n  localStorage.allCatMaps = JSON.stringify(allCatMaps);\n  dispatch(setCurrentCategoryMap(categoryMap, dispatch));\n};\n\n// Set logged in user category map\nexport const setCurrentCategoryMap = (categoryMap) => {\n  return {\n    type: SET_CATEGORY_MAP,\n    payload: categoryMap,\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n});\n\nexport default currencyFormatter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst UserProfile = (props) => {\n  return (\n    <>\n      <div>This is the User Profile</div>\n      <div>Name: {props.auth.user.name}</div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(UserProfile);\n","const percentFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n});\n\nexport default percentFormatter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SpendRangeHeader = (props) => {\n  const spendRangeDaysOptions = [7, 14, 30];\n  return (\n    <>\n      <div className=\"section-space\"></div>\n      <div className=\"section section-header-generic\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-sm-6 offset-sm-3 justify-content-center text-center\">\n              <div className=\"form-group\">\n                <select\n                  className=\"selectpicker\"\n                  data-style=\"btn btn-default\"\n                  defaultValue={props.spendRangeDaysSelected}\n                >\n                  <option disabled value={0}>\n                    {\" \"}\n                    Choose date range\n                  </option>\n                  {spendRangeDaysOptions.map((daysOption, i) => {\n                    return (\n                      <option key={i} value={daysOption}>\n                        {daysOption + \" days\"}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <h1>\n                {props.mainHeaderText}\n                <br />\n                <span className=\"small bottom\">{props.subHeaderText}</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendRangeHeader);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getTransactions,\n  addAccount,\n  refreshAccount,\n  deleteAccount,\n} from \"../../actions/accountActions\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport UserProfile from \"../profile/UserProfile\";\nimport currencyFormatter from \"../../utils/currencyFormatter\";\nimport percentFormatter from \"../../utils/percentFormatter\";\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\nimport foodLogo from \"../../img/spend-plan/food-background.svg\";\nclass SpendStory extends Component {\n  render() {\n    const { plaid } = this.props;\n    const connectedBankAccounts = plaid.accounts.map((account) => (\n      <div key={account._id}>Account Name here: {account.institutionName}</div>\n    ));\n    return (\n      <>\n        <div>\n          <SpendRangeHeader\n            mainHeaderText={this.props.userName + \"'s\"}\n            subHeaderText=\"Spend Story\"\n          />\n          <div className=\"section income-spend\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-left\">\n                    <h1>\n                      <span className=\"small top\">Income</span>\n                      <br />\n                      {currencyFormatter.format(plaid.incomeSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Paycheck</span>\n                      <br />\n                      $300\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Other Source</span>\n                      <br />\n                      $300\n                    </h3>\n                  </div>\n                </div>\n\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-right\">\n                    <h1>\n                      <span className=\"small top\">Spent</span>\n                      <br />\n                      {currencyFormatter.format(plaid.spendingSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Transactions</span>\n                      <br />\n                      {plaid.totalTransactionCount}\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Transactions reviewed</span>\n                      <br />\n                      {percentFormatter.format(\n                        plaid.reviewedTransactionCount /\n                          plaid.totalTransactionCount\n                      )}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4 text-center\">\n                  <Link to=\"/manage-transactions\" className=\"btn mt-4\">\n                    view transactions\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spending-plan\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <h1>\n                        Spending Plan\n                        <br />\n                        <span className=\"small bottom\">Breakdown</span>\n                      </h1>\n                    </div>\n                    <div className=\"row\">\n                      <h3>\n                        {currencyFormatter.format(\n                          plaid.incomeSum - plaid.spendingSum\n                        )}\n                        <br />\n                        <span className=\"small bottom\">budget available</span>\n                      </h3>\n                    </div>\n                    <div className=\"row\">\n                      <Link to=\"/spend-plan\" className=\"btn\">\n                        manage spend plan\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-categories\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1>Spend Plan</h1>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  <h3>\n                    $300\n                    <br />\n                    <span className=\"small bottom\">budget estimate</span>\n                  </h3>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8 pt-4 pb-4\">\n                  <h4>\n                    On track\n                    <br />\n                    <span className=\"small bottom\">7 categories</span>\n                  </h4>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-4 col-sm-6\">\n                  <div className=\"card card-blog\">\n                    <div className=\"card-image\">\n                      <img className=\"img\" alt=\"Category Name\" src={foodLogo} />\n                      <div className=\"card-img-overlay\">\n                        <h5>Category Name</h5>\n                      </div>\n                    </div>\n                    <div className=\"card-body text-center\">\n                      <h4 className=\"card-title text-left\">\n                        $200\n                        <span className=\"small bottom\">\n                          <br />\n                          Available\n                        </span>\n                      </h4>\n                      <div className=\"card-description\">graph</div>\n                      <div className=\"card-footer\">\n                        <div className=\"row mt-3\">\n                          <div className=\"col\">\n                            <p className=\" text-left\">\n                              $200\n                              <span className=\"small bottom\">\n                                <br />\n                                Budget\n                              </span>\n                            </p>\n                          </div>\n                          <div className=\"col\">\n                            <p className=\" text-left\">\n                              $200\n                              <span className=\"small bottom\">\n                                <br />\n                                Spent\n                              </span>\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-plan-footer\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h2>\n                    <span className=\"small top\">Savings</span>\n                    <br />\n                    $522\n                  </h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nSpendStory.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  getTransactions: PropTypes.func.isRequired,\n  addAccount: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  refreshAccount: PropTypes.func.isRequired,\n  plaid: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  plaid: state.plaid,\n  userName: state.auth.user.name,\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  getTransactions,\n  addAccount,\n  deleteAccount,\n  refreshAccount,\n})(SpendStory);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport currencyFormatter from \"../../utils/currencyFormatter\";\n\nconst SpendPlanRow = (props) => {\n  if (\n    props.category.bankName !== \"Transfer\" &&\n    props.category.bankName !== \"Payment\"\n  ) {\n    return (\n      <tr key={props.category.bankName}>\n        <td>{props.category.bankName}</td>\n        <td>\n          {props.categoryMap && props.categoryMap[props.category.bankName] ? (\n            <input\n              defaultValue={props.categoryMap[props.category.bankName]}\n            ></input>\n          ) : (\n            <input />\n          )}\n          <button className=\"\">Save</button>\n        </td>\n        <td>\n          {props.budgets && props.budgets[props.category.bankName] ? (\n            <input\n              defaultValue={currencyFormatter.format(\n                props.budgets[props.category.bankName]\n              )}\n            ></input>\n          ) : (\n            <input />\n          )}\n          <button className=\"\">Save</button>\n        </td>\n        <td>\n          {currencyFormatter.format(\n            props.spendingByCategory[props.category.bankName]\n          )}\n        </td>\n      </tr>\n    );\n  } else {\n    return <></>;\n  }\n};\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  categoryMap: state.auth.categoryMap,\n  spendingByCategory: state.plaid.spendingByCategory,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendPlanRow);\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { connect } from \"react-redux\";\nimport SpendPlanRow from \"./SpendPlanRow\";\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\n\nconst SpendPlan = (props) => {\n  return (\n    <>\n      <SpendRangeHeader mainHeaderText=\"Spend\" subHeaderText=\"Plan\" />\n      <div className=\"section section-header-generic\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Income</h2>\n              <label for=\"pay-frequency\">Pay Frequency</label>\n              <select className=\"selectpicker\" data-style=\"btn btn-default\">\n                <option disabled selected>\n                  {\" \"}\n                  Choose date range\n                </option>\n                <option value=\"1\">Weekly</option>\n                <option value=\"1\">Bi-weekly</option>\n                <option value=\"1\">Bi-monthly</option>\n                <option value=\"1\">Monthly</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Bank category name</th>\n                <th>My category name</th>\n                <th>Budget for {props.spendRangeDaysSelected} days</th>\n                <th>Spent last {props.spendRangeDaysSelected} days</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.categoriesThisSpendRange.map((category, i) => {\n                return (\n                  <SpendPlanRow key={i} category={category}></SpendPlanRow>\n                );\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  categoriesThisSpendRange: state.plaid.categoriesThisSpendRange,\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendPlan);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst ManageTransactionsRow = (props) => {\n  return (\n    <tr key={props.transaction.transaction_id}>\n      <td>{props.transaction.date}</td>\n      <td>{props.bankName}</td>\n      <td>{props.transaction.name}</td>\n      <td>{props.transaction.amount}</td>\n      <td>{props.transaction.category[0]}</td>\n      <td>\n        <button class=\"btn secondary\">Change Category</button>\n      </td>\n      <td>\n        <button class=\"btn secondary\">&#x2713;</button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  categoryMap: state.auth.categoryMap,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(ManageTransactionsRow);\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { connect } from \"react-redux\";\nimport ManageTransactionRow from \"./ManageTransactionRow\";\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\n\nconst ManageTransactions = (props) => {\n  return (\n    <>\n      <SpendRangeHeader mainHeaderText=\"Transaction\" subHeaderText=\"History\" />\n      <div className=\"section section-donuts\">\n        <div className=\"container\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-lg-3 col-6\">Donut Graph</div>\n            <div className=\"col-lg-3 col-6\">\n              <h2 classNameName=\"\">70%</h2>\n            </div>\n            <div className=\"col-lg-3 col-6\">Graph</div>\n            <div className=\"col-lg-3 col-6\">Graph</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <Table striped hover>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Account</th>\n                <th>Transaction</th>\n                <th>Amount</th>\n                <th>Category</th>\n                <th>Update</th>\n                <th>Reviewed?</th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.transactions.map((bank, i) => {\n                return bank.transactions.map((transaction, j) => {\n                  return (\n                    <ManageTransactionRow\n                      key={j}\n                      bankName={bank.accountName}\n                      transaction={transaction}\n                    ></ManageTransactionRow>\n                  );\n                });\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  transactions: state.plaid.transactions,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(ManageTransactions);\n","import {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  SET_BUDGETS,\n  SET_CATEGORY_MAP,\n} from \"../actions/types\";\nimport { AUTH_MOCK_DATA } from \"./reduxMockData\";\n\nconst isEmpty = require(\"is-empty\");\n// Try loading some demo/example data\nconst initialState = AUTH_MOCK_DATA;\n// Below here is the normal initial state\n/*const initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false,\n  budgets: {},\n  categoryMap: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_BUDGETS:\n      return {\n        ...state,\n        budgets: action.payload,\n      };\n    case SET_CATEGORY_MAP:\n      return {\n        ...state,\n        categoryMap: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","export const AUTH_MOCK_DATA = {\n  isAuthenticated: true,\n  user: {\n    id: \"123456789012345678901234\",\n    name: \"Test Person\",\n    iat: null,\n    exp: null,\n    budgets: {},\n    categoryMap: {},\n  },\n  loading: false,\n  budgets: {\n    \"Food and Drink\": 200,\n    Shops: 50,\n    Travel: 20,\n    Recreation: 10,\n  },\n  categoryMap: {\n    \"Food and Drink\": \"Groceries\",\n    Shops: \"Shopping\",\n    Travel: \"Travel\",\n    Recreation: \"Entertainment\",\n  },\n};\n// NOTE THAT I'VE ADDED EXTRA MOCK DATA FOR\n// categoriesThisSpendRange, spendingByCategory, incomeSum, and spendingSum\n// (because it could be a different time period)\nexport const PLAID_MOCK_DATA = {\n  accounts: [\n    {\n      _id: \"5ef4fdbaca322600d6403f2e\",\n      userId: \"123456789012345678901234\",\n      itemId: \"Nk3qlg7vvPtA6mZbr4ZRuEE8GL67dWFW4Ejyq\",\n      institutionId: \"ins_3\",\n      institutionName: \"Chase\",\n      __v: 0,\n    },\n    {\n      _id: \"5ef4fddcca322600d6403f2f\",\n      userId: \"123456789012345678901234\",\n      itemId: \"m1vBo61a1RcbaJzwrojjiMMlqeV4NVSLZ1qxN\",\n      institutionId: \"ins_110423\",\n      institutionName: \"Citi\",\n      __v: 0,\n    },\n  ],\n  transactions: [\n    {\n      accountName: \"Citi\",\n      transactions: [\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-24\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"jQvK1RQkQyUbewqngy5etrLVL3ddo3c1mZKWr\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -2078.5,\n          authorized_date: null,\n          category: [\"Payment\"],\n          category_id: \"16000000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"lM6zpRMJMvh9davVWEy1Hvlx5ql83DiZX85gg\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"kZvrLRZpZ9uexPKoXERaIeQJGmQN51iWVK3D7\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Shops\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"JgJKAygQgltMrKZA3PWJIDAVjXAP46cdrqGMe\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"LEJznAEQEKULBz16dnjjfyye3Jp4r1TPEwMPa\",\n          account_owner: null,\n          amount: -25,\n          authorized_date: null,\n          category: [\"Payment\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"opvk86pWpqcbmg37REoEcxKaj4NAENiR7Vpxl\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -5.4,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"povdE6oloKfRAXxmPVeVUaj1yQ5kW5hLVQJyx\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"gjoLQDjNjnFwA796Rn88u443jJdqAPig5WBgN\",\n          account_owner: null,\n          amount: -5850,\n          authorized_date: null,\n          category: [\"Transfer\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"DZJ9pEZ4ZbuPezNMlWnguwm9r1jllXUvJQwdD\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"povdE6oloKfRAXxmPVLLSEEqvkdAp6TLzaGLz\",\n          account_owner: null,\n          amount: -1000,\n          authorized_date: null,\n          category: [\"Transfer\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"XXxDq3XQX7tmZDBvLAk5tWm9aAqwwLidLE6Jg\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -78.5,\n          authorized_date: null,\n          category: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"QblavRb7bxcnvRW6jqdXUPAd1xQ6Xjfp7E7P3\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"eNL87RNyNAioJZWD95yVIKnDP59VxXiL515va\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -12,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"K8JrGL8y8qc1zgMoxjmDC6WwmM5QblfVa6bZL\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -4.33,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          category_id: \"13005043\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"r8v4A68K8zc7jRa6KE1zuQqN6aJZ8WIlVygPV\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -89.4,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"W63elB6p6jFdQVLm1xGmsqDEmKA9mGUl7w1qL\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"LEJznAEQEKULBz16dnjjfyye3Jp4r1TPEwMPa\",\n          account_owner: null,\n          amount: 4.22,\n          authorized_date: null,\n          category: [\"Transfer\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-07-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xbvZ96bRb4cmJ8e76VjBhl3DMRe9DjunBPZjR\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"opvk86pWpqcbmg37REZZikkPvApoX5SRbEDRV\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-06-29\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"GLJE8VLRL9Cel47pr9WVi3zm8EgM9ACWEJo6X\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"1XQDKAXLXNtQLEDNaeWWFdd6lyeM3xi5rBR5e\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-06-27\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"axQL4RxPxgu5W6LgnAD9UNMMQbwEabi7gaZK1\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n      ],\n    },\n    {\n      accountName: \"Chase\",\n      transactions: [\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-24\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"bd9pLg6vvyIwb6gVp5pdIxk383pVZWuVqKVxN\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -2078.5,\n          authorized_date: null,\n          category: [\"Payment\"],\n          category_id: \"16000000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"r84qr9gkkwHvmMeVnKnguagBbme9jLflgaWr6\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"K8rRbZ4vvPHJWGEVlxlKsMxXyK8e1vFVbG7lb\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Shops\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-07-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"qgalK9bPPAtk6zZvV9VmTNBLe4zGmyCdkNve1\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"axLk19Bvv7s94jmV8nmDt11Jqnm4EzI7JvnKB\",\n          account_owner: null,\n          amount: -25,\n          authorized_date: null,\n          category: [\"Payment\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xbZxa5g11KH1yAwZR6RVirDZq1aMRXinvEWAz\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -5.4,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-07-14\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"3lDP3dG44JsvjWB3eoedhNEkg8Z3vnfq3aN8A\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"PndrKoQvv7sqV8vyGPvQiRR5DqgJwZu75njyD\",\n          account_owner: null,\n          amount: -5850,\n          authorized_date: null,\n          category: [\"Transfer\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"Begwp9DEEki3w5BDNGNXfN4nr41DeECw5GyRV\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"4qg6xGaNNZsw9qjXaLjAFBBWl1GJ3eidVKWRx\",\n          account_owner: null,\n          amount: -1000,\n          authorized_date: null,\n          category: [\"Transfer\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-07-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"zyEJN9appzi3L4qQwEwGfA8wN8XabjtoBGaZj\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -78.5,\n          authorized_date: null,\n          category: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"JgKkn94vvVtXBQqyz3zysqD5gKaPV6Cdqm1zV\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-07-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"5K17d64PP5ixgKpd383duWoA7pg1aMuZM9bka\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -12,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          category_id: \"13005032\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"xbZxa5g11KH1yAwZR6R4trqve5z58DtnB4m1E\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -4.33,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          category_id: \"13005043\",\n          date: \"2020-07-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"d4Ago8DvvZH3eqjVJyJzFJ17jkmkNPcZaEokW\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -89.4,\n          authorized_date: null,\n          category: [\"Food and Drink\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-07-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"6r1XadejjvINrvDaxpxzTKAzqrqa6LCgyABQN\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"axLk19Bvv7s94jmV8nmDt11Jqnm4EzI7JvnKB\",\n          account_owner: null,\n          amount: 4.22,\n          authorized_date: null,\n          category: [\"Transfer\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-07-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"jQKpGPJBB7tKPJBv8g8RSwbe17w8VwC1q9BBK\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"Nk3qlg7vvPtA6mZbr4ZRuEE5JKwdx3HWpzaAD\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Travel\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-06-29\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"axLk19Bvv7s94jmV8nm4uorGlJVLkbuRdn1rV\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n        {\n          account_id: \"d4Ago8DvvZH3eqjVJyjPfDDwRn1ZeLuZzq9n1\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Travel\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-06-27\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"VR7pdravvqUEx98qbM8EIVoaQADwmRfWPeNLl\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n        },\n      ],\n    },\n  ],\n  accountsLoading: false,\n  transactionsLoading: false,\n  incomeSum: 1000,\n  spendingSum: 4391.92,\n  spendRangeDaysSelected: 30,\n  totalTransactionCount: 50,\n  reviewedTransactionCount: 45,\n  categoriesThisSpendRange: [\n    { bankName: \"Food and Drink\", x: 1, name: \"\" },\n    { bankName: \"Shops\", x: 2, name: \"\" },\n    { bankName: \"Travel\", x: 3, name: \"\" },\n    { bankName: \"Recreation\", x: 4, name: \"\" },\n  ],\n  spendingByCategory: {\n    \"Food and Drink\": 2211.46,\n    Shops: 1000,\n    Travel: 10233.46,\n    Recreation: 157,\n  },\n};\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_ACCOUNT,\n  REFRESH_ACCOUNT,\n  UPDATE_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n} from \"../actions/types\";\n\nimport { PLAID_MOCK_DATA } from \"./reduxMockData\";\n\n// Try loading some demo/example data\nconst initialState = PLAID_MOCK_DATA;\n// Below here is the normal initial state\n/*const initialState = {\n  accounts: [],\n  transactions: [],\n  accountsLoading: false,\n  transactionsLoading: false,\n  incomeSum: 0.00,\n  spendingSum: 0.00,\n  spendRangeDaysSelected: 30,\n  totalTransactionCount: 0,\n  reviewedTransactionCount: 0,\n  categoriesThisSpendRange: [],\n  spendingByCategory: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ACCOUNTS_LOADING:\n      return {\n        ...state,\n        accountsLoading: true,\n      };\n    case ADD_ACCOUNT:\n      return {\n        ...state,\n        accounts: [action.payload, ...state.accounts],\n      };\n    // The payload to refresh an account is the same account (or new account)\n    case REFRESH_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account.institutionId !== action.payload) {\n            return account;\n          } else {\n            return {\n              ...account,\n              toRefresh: false,\n            };\n          }\n        }),\n      };\n    // The payload to update an account is the newly edited account\n    case UPDATE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account._id !== action.payload._id) {\n            return account;\n          } else {\n            return {\n              ...action.payload,\n            };\n          }\n        }),\n      };\n    case DELETE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.filter(\n          (account) => account._id !== action.payload\n        ),\n      };\n    case GET_ACCOUNTS:\n      return {\n        ...state,\n        accounts: action.payload,\n        accountsLoading: false,\n      };\n    case TRANSACTIONS_LOADING:\n      return {\n        ...state,\n        transactionsLoading: true,\n      };\n    case GET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: action.payload,\n        transactionsLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  plaid: accountReducer,\n});\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport Header from \"./components/layout/Header.js\";\nimport Footer from \"./components/layout/Footer.js\";\nimport SpendStory from \"./components/spend/SpendStory.js\";\nimport SpendPlan from \"./components/spend/SpendPlan.js\";\nimport ManageTransactions from \"./components/spend/ManageTransactions.js\";\nimport rootReducer from \"./reducers\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"App\">\n              <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                  Welcome to the temporary homepage, click spend in the navbar\n                  to get started\n                </p>\n              </header>\n            </div>\n          </Route>\n          <Route path=\"/spend-story\" component={SpendStory} />\n          <Route path=\"/spend-plan\" component={SpendPlan} />\n          <Route path=\"/manage-transactions\" component={ManageTransactions} />\n        </Switch>\n        <Footer />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-background.b39a2d44.svg\";"],"sourceRoot":""}