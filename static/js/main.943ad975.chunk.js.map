{"version":3,"sources":["img/waiwai-logo.svg","img/spend-plan/childcare.svg","img/spend-plan/debt.svg","img/spend-plan/dollar-sign.svg","img/spend-plan/education.svg","img/spend-plan/entertainment.svg","img/spend-plan/food-background.svg","img/spend-plan/housing.svg","img/spend-plan/insurance.svg","img/spend-plan/miscellaneous.svg","img/spend-plan/personal.svg","img/spend-plan/savings.svg","img/spend-plan/transportation.svg","img/spend-plan/utilities.svg","utils/auth0-provider-with-history.js","utils/loading.js","utils/privateRoute.js","components/profile/LogoutButton.js","components/layout/Header.js","components/layout/Footer.js","components/profile/LoginButton.js","components/profile/SignupButton.js","components/layout/HomePage.js","utils/currencyFormatter.js","utils/percentFormatter.js","components/layout/SpendRangeHeader.js","components/spend/SpendCategoryCard.js","components/spend/SpendStory.js","utils/waiwaiCategories.js","utils/processTransactionList.js","actions/authActions.js","actions/types.js","components/spend/SpendPlanRow.js","components/layout/ColorHeader.js","components/spend/SpendPlan.js","components/spend/ManageTransactions.js","actions/accountActions.js","utils/plaidButton.js","components/profile/BankAccountsPage.js","components/profile/UserProfilePage.js","reducers/authReducer.js","reducers/reduxMockData.js","reducers/errorReducer.js","reducers/accountReducer.js","reducers/index.js","components/layout/TransactionBootstrap.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","push","returnTo","pathname","audience","Loading","className","src","alt","PrivateRoute","component","args","withAuthenticationRequired","onRedirecting","LogoutButton","logout","useAuth0","Button","onClick","variant","connect","state","userName","auth","user","name","props","isAuthenticated","Navbar","expand","to","NavItem","Brand","href","Logo","width","height","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","renderMenuOnMount","title","Item","Link","Footer","Date","getFullYear","LoginButton","loginWithRedirect","SignupButton","screen_hint","HomePage","currencyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","noDecimalCurrencyFormatter","maximumFractionDigits","percentFormatter","spendRangeDaysSelected","plaid","mainHeaderText","subHeaderText","budgets","categoryMap","spendingByCategory","budgetAmount","spentAmount","mainValueDisplay","subValueDisplay","colorBackgroundClass","thisCategoryLogo","miscellaneousLogo","categoryName","dollarLogo","housingLogo","transportationLogo","foodLogo","utilitiesLogo","insuranceLogo","debtLogo","personalLogo","educationLogo","childCareLogo","savingsLogo","entertainmentLogo","underBudget","format","budgetAmountDisplay","SpendStory","this","auth0","userFirstVisit","accounts","length","incomeSum","paycheckSum","otherIncomeSum","spendingSum","totalTransactionCount","reviewedTransactionCount","expenseBudgetSum","sortedCategoriesUnderBudget","map","i","key","sortedCategoriesOverBudget","Component","withAuth0","defaultCategoriesThisSpendRange","x","defaultSpendingByCategory","Housing","Transportation","Food","Utilities","Debt","Personal","Education","Entertainment","Savings","Income","updateSortedCategories","categoriesThisSpendRange","returnUnderBudgets","returnOverBudgets","arrayToSort","sort","a","b","forEach","category","underBudgets","overBudgets","setAxiosAuth","token","axios","defaults","headers","common","setCurrentBudgets","budgetPayload","type","payload","mapDispatchToProps","saveUserBudget","accessToken","budgetData","dispatch","getState","oldBudgetAmount","newBudgetAmount","allBudgets","newBudgetSum","sortedCategories","updateTransactions","post","budgetName","then","res","catch","err","toSend","response","data","getAccessTokenSilently","useState","budget","setBudget","useEffect","value","onChange","event","justNumber","target","charAt","substring","valid","trim","isNaN","parseFloat","saveButton","ColorHeader","colorClassName","accountsLoading","transactionsLoading","Table","hover","htmlFor","data-style","defaultValue","disabled","transactions","transactionMUIColumns","label","options","filter","customBodyRenderLite","dataIndex","transactionsData","account","transaction","accountName","date","amount","columns","filterType","selectableRows","sortOrder","direction","setAccountsLoading","getTransactions","plaidData","setTransactionsLoading","payloadObject","income","spending","categoryCount","serverSetCategory","waiwaiMainCategory","waiwai_categories","plaidMainCategory","plaid_categories","reviewed","undefined","waiwaiName","plaidName","needUpdate","console","log","DeleteAccountButton","deleteAccount","confirm","newAccounts","_id","delete","accountID","onDeleteClick","useCallback","PlaidToExport","refreshAccount","addAccount","newAccountOnSuccess","metadata","public_token","refreshAccountOnSuccess","config","clientName","publicKey","env","product","onSuccess","existingAccount","toRefresh","publicToken","usePlaidLink","open","ready","buttonText","displayName","concat","institution","institution_id","PlaidButton","listAccounts","institutionName","addButton","picture","email","daysOption","isEmpty","require","initialState","iat","exp","loading","Shops","Travel","Recreation","userId","itemId","institutionId","__v","account_id","account_owner","authorized_date","category_id","iso_currency_code","address","city","lat","lon","store_number","zip","merchant_name","payment_channel","payment_meta","by_order_of","payee","payer","payment_method","payment_processor","ppd_id","reason","reference_number","pending","pending_transaction_id","transaction_id","transaction_type","unofficial_currency_code","combineReducers","action","errors","transactionDispatchToProps","UseTransactionBootstrap","accountDispatchToProps","getAccounts","get","getUserInfo","returnedUser","store","configureStore","reducer","rootReducer","Routing","isLoading","exact","path","SpendPlan","ManageTransactions","UserProfilePage","BankAccountsPage","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.943ad975.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/waiwai-logo.e57023e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/childcare.3217e63b.svg\";","module.exports = __webpack_public_path__ + \"static/media/debt.72b94b4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/dollar-sign.69e96d44.svg\";","module.exports = __webpack_public_path__ + \"static/media/education.28dcaf58.svg\";","module.exports = __webpack_public_path__ + \"static/media/entertainment.f805bade.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-background.b4828793.svg\";","module.exports = __webpack_public_path__ + \"static/media/housing.aa8416a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/insurance.ccb70d55.svg\";","module.exports = __webpack_public_path__ + \"static/media/miscellaneous.41d25eac.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal.56aa4ee5.svg\";","module.exports = __webpack_public_path__ + \"static/media/savings.0d8cb36a.svg\";","module.exports = __webpack_public_path__ + \"static/media/transportation.7ab81113.svg\";","module.exports = __webpack_public_path__ + \"static/media/utilities.73512e34.svg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin + process.env.PUBLIC_URL}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from \"react\";\nconst loading =\n  \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"spinner\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"./loading.js\";\n\nconst PrivateRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />,\n    })}\n    {...args}\n  />\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <Button\n      onClick={() =>\n        logout({\n          returnTo: window.location.origin + process.env.PUBLIC_URL,\n        })\n      }\n      variant=\"danger\"\n      className=\"btn-margin\"\n    >\n      Log Out\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport NavItem from \"react-bootstrap/NavItem\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Logo from \"../../img/waiwai-logo.svg\";\nimport LogoutButton from \"../../components/profile/LogoutButton.js\";\n\nconst Header = (props) => {\n  const { isAuthenticated, user } = useAuth0();\n  const { name } = user;\n  return (\n    <>\n      <Navbar expand=\"lg\">\n        <LinkContainer to=\"/spend-story\">\n          <NavItem>\n            <Navbar.Brand href=\"#\">\n              <img\n                alt=\"Waiwai Logo\"\n                src={Logo}\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />\n              Waiwai\n            </Navbar.Brand>\n          </NavItem>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            {isAuthenticated ? (\n              <>\n                {/*<LinkContainer to=\"/\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n            </LinkContainer>\n            <div className=\"mr-auto navbar-nav\">\n              <LinkContainer to=\"/spend-story\">\n                <Nav.Link href=\"#\">spend</Nav.Link>\n              </LinkContainer>*/}\n\n                <div className=\"mr-auto navbar-nav\">\n                  {/*hover dropdown test*/}\n                  <NavDropdown\n                    renderMenuOnMount={true}\n                    title=\"spend\"\n                    id=\"hover-nav-dropdown\"\n                    className=\"dropdown-menu-left\"\n                  >\n                    <LinkContainer to=\"/spend-story\">\n                      <NavDropdown.Item>spend story</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/manage-transactions\">\n                      <NavDropdown.Item>view transactions</NavDropdown.Item>\n                    </LinkContainer>\n                    <LinkContainer to=\"/spend-plan\">\n                      <NavDropdown.Item>manage spend plan</NavDropdown.Item>\n                    </LinkContainer>\n                  </NavDropdown>\n\n                  {/*hover dropdown test END*/}\n\n                  <LinkContainer to=\"/save-story\">\n                    <Nav.Link href=\"#\">save</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/borrow-story\">\n                    <Nav.Link href=\"#\">borrow</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/plan-story\">\n                    <Nav.Link href=\"#\">plan</Nav.Link>\n                  </LinkContainer>\n                </div>\n                <NavDropdown\n                  title={name}\n                  id=\"basic-nav-dropdown\"\n                  className=\"ml-auto dropdown-menu-right\"\n                >\n                  <LinkContainer to=\"/user-profile\">\n                    <NavDropdown.Item href=\"#\">Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/bank-accounts\">\n                    <NavDropdown.Item href=\"#\">Bank Accounts</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item className=\"notButton\" href=\"#\">\n                    <LogoutButton />\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <></>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userName: state.auth.user.name,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(Header);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"mr-auto footer-nav\">\n            <Link to=\"/spend-story\">spend</Link>\n            <Link to=\"/save-story\">save</Link>\n            <Link to=\"/borrow-story\">borrow</Link>\n            <Link to=\"/plan-story\">plan</Link>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <p className=\"col-sm\">\n            <small>\n              &copy;{new Date().getFullYear()} WAIWAI | Ua kukulu ʻia i Hawaiʻi\n              me ke aloha nui\n            </small>\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button\n      onClick={() => loginWithRedirect()}\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Log In\n    </Button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst SignupButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button\n      onClick={() =>\n        loginWithRedirect({\n          screen_hint: \"signup\",\n        })\n      }\n      variant=\"primary\"\n      className=\"btn-margin\"\n    >\n      Sign Up\n    </Button>\n  );\n};\n\nexport default SignupButton;\n","import React from \"react\";\nimport LoginButton from \"../../components/profile/LoginButton.js\";\nimport SignupButton from \"../../components/profile/SignupButton.js\";\n\nconst HomePage = (props) => {\n  return (\n    <div className=\"full-page mountain-background\">\n      <div className=\"login-box  p-5\">\n        <h1>Mālama Wai. Ho'oulu Waiwai</h1>\n        <p>Manage your financial resources. Grow waiwai.</p>\n        <div className=\"button-box\">\n          <LoginButton />\n          <br />\n          <SignupButton />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n});\n\nexport const noDecimalCurrencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n});\n","const percentFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 0,\n});\n\nexport default percentFormatter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SpendRangeHeader = (props) => {\n  return (\n    <>\n      <div className=\"section-space\"></div>\n      <div className=\"section section-header-generic\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-sm-6 offset-sm-3 justify-content-center text-center\">\n              <h1>\n                {props.mainHeaderText}\n                <br />\n                <span className=\"small bottom\">{props.subHeaderText}</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendRangeHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { noDecimalCurrencyFormatter } from \"../../utils/currencyFormatter\";\nimport percentFormatter from \"../../utils/percentFormatter\";\nimport childCareLogo from \"../../img/spend-plan/childcare.svg\";\n// No categories that match this yet\n//import crossLogo from \"../../img/spend-plan/cross.svg\";\nimport debtLogo from \"../../img/spend-plan/debt.svg\";\n// Looks like the dollar logo is black line art instead of white like the others\nimport dollarLogo from \"../../img/spend-plan/dollar-sign.svg\";\nimport educationLogo from \"../../img/spend-plan/education.svg\";\nimport entertainmentLogo from \"../../img/spend-plan/entertainment.svg\";\nimport foodLogo from \"../../img/spend-plan/food-background.svg\";\n// No categories that match this yet\n//import giftsLogo from \"../../img/spend-plan/gifts.svg\";\n\n// Looks like the healthcareLogo is black line art instead of white like the others\n//import healthcareLogo from \"../../img/spend-plan/healthcare.svg\";\n// No categories that match this yet\n//import healthLogo from \"../../img/spend-plan/health.svg\";\nimport housingLogo from \"../../img/spend-plan/housing.svg\";\nimport insuranceLogo from \"../../img/spend-plan/insurance.svg\";\nimport miscellaneousLogo from \"../../img/spend-plan/miscellaneous.svg\";\nimport personalLogo from \"../../img/spend-plan/personal.svg\";\nimport savingsLogo from \"../../img/spend-plan/savings.svg\";\nimport transportationLogo from \"../../img/spend-plan/transportation.svg\";\nimport utilitiesLogo from \"../../img/spend-plan/utilities.svg\";\n// Looks like the wallet logo is black line art instead of white like the others\n//import walletLogo from \"../../img/spend-plan/wallet.svg\";\n\nconst SpendCategoryCard = (props) => {\n  let budgetAmount = 0;\n  let spentAmount = 0;\n  let mainValueDisplay = \"\";\n  let subValueDisplay = \"\";\n  let colorBackgroundClass = \"\";\n  let thisCategoryLogo = miscellaneousLogo;\n\n  if (props.budgetAmount) {\n    budgetAmount = props.budgetAmount;\n  }\n  if (props.spentAmount) {\n    spentAmount = props.spentAmount;\n  }\n\n  if (props.categoryName === \"Income\") {\n    thisCategoryLogo = dollarLogo;\n  }\n  if (props.categoryName === \"Housing\") {\n    thisCategoryLogo = housingLogo;\n  }\n  if (props.categoryName === \"Transportation\") {\n    thisCategoryLogo = transportationLogo;\n  }\n  if (props.categoryName === \"Food\") {\n    thisCategoryLogo = foodLogo;\n  }\n  if (props.categoryName === \"Utilities\") {\n    thisCategoryLogo = utilitiesLogo;\n  }\n  // Note there are two possible logos here\n  if (props.categoryName === \"Insurance & Healthcare\") {\n    thisCategoryLogo = insuranceLogo;\n  }\n  if (props.categoryName === \"Debt\") {\n    thisCategoryLogo = debtLogo;\n  }\n  if (props.categoryName === \"Personal\") {\n    thisCategoryLogo = personalLogo;\n  }\n  if (props.categoryName === \"Education\") {\n    thisCategoryLogo = educationLogo;\n  }\n  if (props.categoryName === \"Child Care\") {\n    thisCategoryLogo = childCareLogo;\n  }\n  if (props.categoryName === \"Savings\") {\n    thisCategoryLogo = savingsLogo;\n  }\n  if (props.categoryName === \"Entertainment\") {\n    thisCategoryLogo = entertainmentLogo;\n  }\n  if (props.underBudget) {\n    colorBackgroundClass = \"dark-green-background\";\n    mainValueDisplay = noDecimalCurrencyFormatter.format(\n      budgetAmount - spentAmount\n    );\n    if (budgetAmount !== 0) {\n      subValueDisplay = percentFormatter.format(spentAmount / budgetAmount);\n    } else if (spentAmount === 0) {\n      subValueDisplay = percentFormatter.format(0);\n    } else {\n      subValueDisplay = \"--\";\n    }\n  } else {\n    // this is an over budget category\n    colorBackgroundClass = \"brown-yellow-background\";\n    subValueDisplay = noDecimalCurrencyFormatter.format(spentAmount);\n    if (budgetAmount !== 0) {\n      mainValueDisplay = percentFormatter.format(spentAmount / budgetAmount);\n    } else if (spentAmount === 0) {\n      mainValueDisplay = percentFormatter.format(0);\n    } else {\n      mainValueDisplay = \"--\";\n    }\n  }\n\n  const budgetAmountDisplay = noDecimalCurrencyFormatter.format(budgetAmount);\n\n  return (\n    <div className=\"card card-blog\">\n      <div className={\"card-image \" + colorBackgroundClass}>\n        <img className=\"img \" alt=\"Category Name\" src={thisCategoryLogo} />\n        <div className=\"card-img-overlay\">\n          <h5>{props.categoryName}</h5>\n        </div>\n      </div>\n      <div className=\"card-body text-center\">\n        <h4 className=\"card-title text-left\">\n          {mainValueDisplay}\n          <span className=\"small bottom\">\n            <br />\n            {props.underBudget ? \"Available\" : \"Spent\"}\n          </span>\n        </h4>\n        <div className=\"card-description\">graph</div>\n        <div className=\"card-footer\">\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <p className=\" text-left\">\n                {budgetAmountDisplay}\n                <span className=\"small bottom\">\n                  <br />\n                  Budget\n                </span>\n              </p>\n            </div>\n            <div className=\"col\">\n              <p className=\" text-left\">\n                {subValueDisplay}\n                <span className=\"small bottom\">\n                  <br />\n                  Spent\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  categoryMap: state.auth.categoryMap,\n  spendingByCategory: state.plaid.spendingByCategory,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendCategoryCard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withAuth0 } from \"@auth0/auth0-react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { noDecimalCurrencyFormatter } from \"../../utils/currencyFormatter\";\nimport percentFormatter from \"../../utils/percentFormatter\";\nimport Loading from \"../../utils/loading.js\";\nimport SpendRangeHeader from \"../layout/SpendRangeHeader\";\nimport SpendCategoryCard from \"./SpendCategoryCard\";\n\nclass SpendStory extends Component {\n  render() {\n    const { user } = this.props.auth0;\n    const { name } = user;\n    const { plaid, auth } = this.props;\n\n    if (plaid.userFirstVisit) {\n      return (\n        <div>\n          <Redirect to=\"/bank-accounts\" />\n        </div>\n      );\n    } else if (!plaid.accounts || plaid.accounts.length === 0) {\n      return (\n        <div>\n          <SpendRangeHeader mainHeaderText={name} subHeaderText=\"Spend Story\" />\n          <Loading />\n        </div>\n      );\n    }\n    return (\n      <>\n        <div>\n          <SpendRangeHeader mainHeaderText={name} subHeaderText=\"Spend Story\" />\n          <div className=\"section income-spend\">\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-left\">\n                    <h1 className=\"large-number\">\n                      <span className=\"small top\">Income</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.incomeSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Paycheck</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.paycheckSum)}\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Other Source</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.otherIncomeSum)}\n                    </h3>\n                  </div>\n                </div>\n\n                <div className=\"col-sm-4\">\n                  <div className=\"container text-md-right\">\n                    <h1 className=\"large-number\">\n                      <span className=\"small top\">Spent</span>\n                      <br />\n                      {noDecimalCurrencyFormatter.format(plaid.spendingSum)}\n                    </h1>\n                    <h3>\n                      <span className=\"small top\">Transactions</span>\n                      <br />\n                      {plaid.totalTransactionCount}\n                    </h3>\n                    <h3>\n                      <span className=\"small top\">Transactions reviewed</span>\n                      <br />\n                      {percentFormatter.format(\n                        plaid.reviewedTransactionCount /\n                          plaid.totalTransactionCount\n                      )}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row justify-content-center\">\n                <div className=\"col-sm-4 text-center\">\n                  <Link to=\"/manage-transactions\" className=\"btn mt-4\">\n                    view transactions\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spending-plan\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"container\">\n                    <div className=\"row\">\n                      <h1 className=\"darktext\">\n                        Spending Plan\n                        <br />\n                        <span className=\"small bottom\">Breakdown</span>\n                      </h1>\n                    </div>\n                    <div className=\"row mt-5 mb-3\">\n                      <h3 className=\"large-number\">\n                        {/* Note, Joe's explanation of budget available is\n                        supposed to be what you earned last 30 days versus what you\n                        budgeted to spend for 30 days */}\n                        {noDecimalCurrencyFormatter.format(\n                          plaid.incomeSum - auth.expenseBudgetSum\n                        )}\n                        <br />\n                        <span className=\"small bottom\">budget available</span>\n                      </h3>\n                    </div>\n                    <div className=\"row\">\n                      <Link to=\"/spend-plan\" className=\"btn\">\n                        manage spend plan\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-categories\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h1>Spend Plan</h1>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  <h3 className=\"large-number\">\n                    {/* Note, Joe's explanation of budget estimate is\n                        supposed to be the sum of all the expense budgets */}\n                    {noDecimalCurrencyFormatter.format(auth.expenseBudgetSum)}\n                    <br />\n                    <span className=\"small bottom\">total budget</span>\n                  </h3>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8 pt-4 pb-4\">\n                  <h4>\n                    On track\n                    <br />\n                    <span className=\"small bottom\">\n                      {plaid.sortedCategoriesUnderBudget.length}\n                      {plaid.sortedCategoriesUnderBudget.length === 1\n                        ? \" category\"\n                        : \" catiegories\"}\n                    </span>\n                  </h4>\n                </div>\n              </div>\n              <div className=\"row\">\n                {plaid.sortedCategoriesUnderBudget.map((categoryName, i) => {\n                  return (\n                    <div key={i} className=\"col-lg-3 col-md-4 col-sm-6\">\n                      <SpendCategoryCard\n                        categoryName={categoryName}\n                        underBudget={true}\n                        budgetAmount={auth.budgets[categoryName]}\n                        spentAmount={plaid.spendingByCategory[categoryName]}\n                      ></SpendCategoryCard>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"row\">\n                <div className=\"col-8 pt-4 pb-4\">\n                  <h4>\n                    Needs Work\n                    <br />\n                    <span className=\"small bottom\">\n                      {plaid.sortedCategoriesOverBudget.length}\n                      {plaid.sortedCategoriesOverBudget.length === 1\n                        ? \" category\"\n                        : \" catiegories\"}\n                    </span>\n                  </h4>\n                </div>\n              </div>\n              <div className=\"row\">\n                {plaid.sortedCategoriesOverBudget.map((categoryName, i) => {\n                  return (\n                    <div\n                      key={categoryName}\n                      className=\"col-lg-3 col-md-4 col-sm-6\"\n                    >\n                      <SpendCategoryCard\n                        categoryName={categoryName}\n                        underBudget={false}\n                        budgetAmount={auth.budgets[categoryName]}\n                        spentAmount={plaid.spendingByCategory[categoryName]}\n                      ></SpendCategoryCard>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <div className=\"section section-spend-plan-footer\">\n            <div className=\"container\">\n              <div className=\"row mt-5\">\n                <div className=\"col-md-6 offset-md-1\">\n                  <h2 className=\"large-number\">\n                    <span className=\"small top\">Surplus</span>\n                    <br />\n                    {noDecimalCurrencyFormatter.format(\n                      plaid.incomeSum - plaid.spendingSum\n                    )}\n                  </h2>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nSpendStory.propTypes = {\n  plaid: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  plaid: state.plaid,\n  auth: state.auth,\n});\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withAuth0(SpendStory));\n","export const defaultCategoriesThisSpendRange = [\n  {\n    x: 1,\n    name: \"Housing\",\n  },\n  {\n    x: 2,\n    name: \"Transportation\",\n  },\n  {\n    x: 3,\n    name: \"Food\",\n  },\n  {\n    x: 4,\n    name: \"Utilities\",\n  },\n  {\n    x: 5,\n    name: \"Insurance & Healthcare\",\n  },\n  {\n    x: 6,\n    name: \"Debt\",\n  },\n  {\n    x: 7,\n    name: \"Personal\",\n  },\n  {\n    x: 8,\n    name: \"Education\",\n  },\n  {\n    x: 9,\n    name: \"Child Care\",\n  },\n  {\n    x: 10,\n    name: \"Entertainment\",\n  },\n  {\n    x: 11,\n    name: \"Savings\",\n  },\n  {\n    x: 12,\n    name: \"Income\",\n  },\n];\nexport const defaultSpendingByCategory = {\n  Housing: 0,\n  Transportation: 0,\n  Food: 0,\n  Utilities: 0,\n  \"Insurance & Healthcare\": 0,\n  Debt: 0,\n  Personal: 0,\n  Education: 0,\n  \"Child Care\": 0,\n  Entertainment: 0,\n  Savings: 0,\n  Income: 0,\n};\n","import { SET_TRANSACTION_DATA } from \"../actions/types\";\nimport {\n  defaultCategoriesThisSpendRange,\n  defaultSpendingByCategory,\n} from \"./waiwaiCategories.js\";\n\n// These are just listed for reference purposes right now (what the server sends)\n//const varStringServerSetMainCat = \"category[0]\";\n//const varStringMainPlaidCat = \"plaid_categories[0]\";\n//const varStringMainWaiwaiCat = \"waiwai_categories[0]\";\n\nexport const updateSortedCategories = (\n  categoriesThisSpendRange,\n  spendingByCategory,\n  budgets\n) => {\n  const returnUnderBudgets = [];\n  const returnOverBudgets = [];\n  const arrayToSort = [...categoriesThisSpendRange];\n\n  arrayToSort.sort(function (a, b) {\n    const aSpend = spendingByCategory[a.name] / budgets[a.name];\n    const bSpend = spendingByCategory[b.name] / budgets[b.name];\n    return aSpend - bSpend;\n  });\n\n  arrayToSort.forEach((category) => {\n    if (spendingByCategory[category.name] / budgets[category.name] <= 1) {\n      returnUnderBudgets.push(category.name);\n    } else {\n      returnOverBudgets.push(category.name);\n    }\n  });\n  return { underBudgets: returnUnderBudgets, overBudgets: returnOverBudgets };\n};\n\n// NOTE: this is not the redux way, this should be designed differently in next refactor\nexport const processTransactionList = (transactions, budgets) => (dispatch) => {\n  const payloadObject = {};\n  let totalTransactionCount = 0;\n  let reviewedTransactionCount = 0;\n  let paycheckSum = 0;\n  let otherIncomeSum = 0;\n\n  let income = 0;\n  let spending = 0;\n  const spendingByCategory = { ...defaultSpendingByCategory };\n  const categoriesThisSpendRange = [...defaultCategoriesThisSpendRange];\n  let categoryCount = 1;\n  //const spendingByDate = {};\n  //const datesLastThirty = [];\n  //const dateNow = new Date();\n  if (transactions && transactions.length) {\n    transactions.forEach(function (account) {\n      account.transactions.forEach(function (transaction) {\n        let serverSetCategory = transaction.category[0];\n        let waiwaiMainCategory = transaction.waiwai_categories[0];\n        let plaidMainCategory = transaction.plaid_categories[0];\n\n        // By default, the plaid transactions are positive for spent money and negative for earned money - so we reverse that\n        transaction.amount *= -1;\n        /*if (\n          serverSetCategory !== \"Transfer\" &&\n          serverSetCategory !== \"Payment\"\n        ) {*/\n        totalTransactionCount++;\n        // NOTE: none of our transactions from the API will have these right now\n        //--------------------------------------------------------------------\n        if (transaction.reviewed) {\n          reviewedTransactionCount++;\n        }\n        // Income is done later in income section\n        /*if (transaction.category[1] === \"Paycheck\") {\n            paycheckSum += transaction.amount;\n          }\n          if (transaction.category[1] === \"Other Income\") {\n            otherIncomeSum += transaction.amount;\n          }*/\n        //--------------------------------------------------------------------\n        //profit += transaction.amount;\n        if (transaction.amount < 0) {\n          spending += -1 * transaction.amount;\n\n          // This if/else sets up the spending category object with category as key and amount total as value\n          // Note that we have to check if undefined (because expense of 0 would be falsey)\n          if (spendingByCategory[serverSetCategory] !== undefined) {\n            spendingByCategory[serverSetCategory] += -1 * transaction.amount;\n          } else {\n            // This is the case that the category hasn't been seen before\n            // And that means this shouldn't happen anymore (all categories loaded by default)\n            categoriesThisSpendRange.push({\n              x: categoryCount,\n              waiwaiName: waiwaiMainCategory,\n              plaidName: plaidMainCategory,\n              name: serverSetCategory,\n            });\n            categoryCount++;\n            spendingByCategory[serverSetCategory] = -1 * transaction.amount;\n          }\n\n          /* Don't think we need spending by date in mlp\n            // This if/else sets up the spending date object with date as key and amount total as value\n            if (spendingByDate[transaction.date]) {\n              spendingByDate[transaction.date] += -1 * transaction.amount;\n            } else {\n              // This is the case that the date hasn't been seen before\n              spendingByDate[transaction.date] = -1 * transaction.amount;\n            }*/\n        } else {\n          income += transaction.amount;\n          if (transaction.category[1] === \"Paycheck\") {\n            paycheckSum += transaction.amount;\n          } else {\n            otherIncomeSum += transaction.amount;\n          }\n        }\n        //}\n      });\n    });\n\n    /* Don't think we need spending by date in mlp\n    for (let a = 30; a > 0; a--) {\n      let insertDate = new Date(Number(dateNow));\n      insertDate.setDate(insertDate.getDate() - a);\n      let momentDate = moment(insertDate);\n      let setDateSpend = 0;\n      if (spendingByDate[momentDate.format(\"YYYY-MM-DD\")]) {\n        setDateSpend = spendingByDate[momentDate.format(\"YYYY-MM-DD\")];\n      }\n      datesLastThirty.push({\n        x: momentDate.format(\"MM-DD\"),\n        y: setDateSpend,\n      });\n    }*/\n    // Then need to generate new data we didn't calculate before\n    const sortedCategories = updateSortedCategories(\n      categoriesThisSpendRange,\n      spendingByCategory,\n      budgets\n    );\n    payloadObject.incomeSum = income;\n    payloadObject.spendingSum = spending;\n    payloadObject.totalTransactionCount = totalTransactionCount;\n\n    payloadObject.categoriesThisSpendRange = categoriesThisSpendRange;\n    payloadObject.spendingByCategory = spendingByCategory;\n\n    payloadObject.sortedCategoriesOverBudget = sortedCategories.overBudgets;\n    payloadObject.sortedCategoriesUnderBudget = sortedCategories.underBudgets;\n\n    // NOTE this is being set to zero right now\n    //--------------------------------------------------------------------\n    payloadObject.paycheckSum = paycheckSum;\n    payloadObject.otherIncomeSum = otherIncomeSum;\n    payloadObject.reviewedTransactionCount = reviewedTransactionCount;\n    //--------------------------------------------------------------------\n  }\n  dispatch({\n    type: SET_TRANSACTION_DATA,\n    payload: payloadObject,\n  });\n};\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING,\n  SET_BUDGETS,\n  SET_TRANSACTION_DATA,\n} from \"./types\";\nimport { updateSortedCategories } from \"../utils/processTransactionList.js\";\n\nconst setAxiosAuth = (token) => {\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n};\n\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then((res) => history.push(\"/login\"))\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n\nexport const saveUserBudget = (accessToken, budgetData) => (\n  dispatch,\n  getState\n) => {\n  const state = getState();\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  const { categoriesThisSpendRange, spendingByCategory } = state.plaid;\n  const { expenseBudgetSum } = state.auth;\n  let oldBudgetAmount = 0;\n  if (state.auth.budgets[budgetData.name]) {\n    oldBudgetAmount = state.auth.budgets[budgetData.name];\n  }\n  const newBudgetAmount = budgetData.payload[budgetData.name];\n  const allBudgets = { ...state.auth.budgets, ...budgetData.payload };\n  const newBudgetSum = expenseBudgetSum - oldBudgetAmount + newBudgetAmount;\n  const budgetPayload = {\n    allBudgets,\n    expenseBudgetSum: newBudgetSum,\n  };\n  dispatch(setCurrentBudgets(budgetPayload));\n  const sortedCategories = updateSortedCategories(\n    categoriesThisSpendRange,\n    spendingByCategory,\n    allBudgets\n  );\n  const updateTransactions = {\n    sortedCategoriesOverBudget: sortedCategories.overBudgets,\n    sortedCategoriesUnderBudget: sortedCategories.underBudgets,\n  };\n  dispatch({\n    type: SET_TRANSACTION_DATA,\n    payload: updateTransactions,\n  });\n  // Note: if we leave this api call in this position for now, the demo for frontend-only\n  // will continue to work but the downside is that if there is a\n  // server error then the frontend and backend could get out of sync\n\n  axios\n    .post(`/api/users/budgets`, {\n      budgetName: budgetData.name,\n      budgetAmount: newBudgetAmount,\n      expenseBudgetSum: newBudgetSum,\n    })\n    .then((res) => {\n      //dispatch(setCookiesAndCurrentBudgets(res.data.userId, res.data.budgets));\n      return;\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n      //dispatch(setCookiesAndCurrentBudgets(decoded.id, decoded.budgets));\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// userInfo - get user info for logged in user\nexport const getUserInfo = (accessToken) => (dispatch) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  axios\n    .get(\"/api/users/user-info\")\n    .then((res) => {\n      const returnedUser = res.data;\n      const { budgets, expenseBudgetSum } = returnedUser;\n      const payload = {\n        allBudgets: budgets,\n        expenseBudgetSum: expenseBudgetSum,\n      };\n\n      dispatch(setCurrentBudgets(payload));\n    })\n    .catch((err) => {\n      let toSend = err;\n      if (err.response) {\n        toSend = err.response.data;\n      }\n      dispatch({\n        type: GET_ERRORS,\n        payload: toSend,\n      });\n    });\n};\n\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\n// Set logged in user budgets\nexport const setCurrentBudgets = (budgetPayload) => {\n  return {\n    type: SET_BUDGETS,\n    payload: budgetPayload,\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const ADD_ACCOUNT = \"ADD_ACCOUNT\";\nexport const REFRESH_ACCOUNT = \"REFRESH_ACCOUNT\";\nexport const UPDATE_ACCOUNT = \"UPDATE_ACCOUNT\";\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\nexport const GET_ACCOUNTS = \"GET_ACCOUNTS\";\nexport const ACCOUNTS_LOADING = \"ACCOUNTS_LOADING\";\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\nexport const TRANSACTIONS_LOADING = \"TRANSACTIONS_LOADING\";\nexport const SET_BUDGETS = \"SET_BUDGETS\";\nexport const SET_CATEGORY_MAP = \"SET_CATEGORY_MAP\";\nexport const SET_SPEND_RANGE_DAYS_SELECTED = \"SET_SPEND_RANGE_DAYS_SELECTED\";\nexport const SET_TRANSACTION_DATA = \"SET_TRANSACTION_DATA\";\nexport const USER_FIRST_VISIT = \"USER_FIRST_VISIT\";\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\nimport { saveUserBudget } from \"../../actions/authActions\";\n\nconst SpendPlanRow = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [budget, setBudget] = useState(\"\");\n  const { category, budgets, saveUserBudget } = props;\n\n  const saveButton = () => {\n    const budgetData = { name: category.name, payload: {} };\n    // This checks if the string in budget is a number\n    let valid = false;\n    if (budget.trim) {\n      valid = !isNaN(budget.trim());\n    }\n\n    if (valid) {\n      budgetData.payload[category.name] = parseFloat(budget);\n      // We only save the budget if it is a number\n      // But should have UI here to tell the user something wrong happened if it isn't a number\n      getAccessTokenSilently().then((accessToken) => {\n        saveUserBudget(accessToken, budgetData);\n      });\n    }\n  };\n\n  const onChangeValue = (event) => {\n    let justNumber = event.target.value;\n    if (justNumber.charAt(0) === \"$\") {\n      justNumber = justNumber.substring(1);\n    }\n    setBudget(justNumber);\n  };\n\n  useEffect(() => {\n    if (budgets && category && budgets[category.name]) {\n      setBudget(budgets[category.name]);\n    }\n  }, [budgets, category, setBudget]);\n  /*if (\n    props.category.bankName !== \"Transfer\" &&\n    props.category.bankName !== \"Payment\"\n  ) {*/\n  return (\n    <tr>\n      <td>{props.category.name}</td>\n      <td></td>\n      <td>\n        {/* This is a controlled input\n            Note that the currencyFormatter makes controlled edits difficult, e.g.\n            value={currencyFormatter.format(budget)}\n        */}\n        <input value={budget} onChange={onChangeValue}></input>\n        <button className=\"btn secondary\" onClick={() => saveButton()}>\n          Save\n        </button>\n      </td>\n      <td>\n        {currencyFormatter.format(\n          props.spendingByCategory[props.category.name]\n        )}\n      </td>\n    </tr>\n  );\n  /*} else {\n    return <></>;\n  }*/\n};\nconst mapStateToProps = (state) => ({\n  budgets: state.auth.budgets,\n  categoryMap: state.auth.categoryMap,\n  spendingByCategory: state.plaid.spendingByCategory,\n});\nconst mapDispatchToProps = { saveUserBudget };\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(SpendPlanRow);\n","import React from \"react\";\n\nconst ColorHeader = (props) => {\n  return (\n    <>\n      <div className=\"section-space\"></div>\n      <div className={\"section \" + props.colorClassName}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-sm-6 offset-sm-3 justify-content-center text-center\">\n              <h1>\n                {props.mainHeaderText}\n                <br />\n                <span className=\"small bottom\">{props.subHeaderText}</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\n// Note that there is probably a better way to do this with React hooks now\nexport default ColorHeader;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../utils/loading.js\";\nimport SpendPlanRow from \"./SpendPlanRow\";\nimport ColorHeader from \"../layout/ColorHeader\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\n\nconst SpendPlan = (props) => {\n  if (props.accountsLoading || props.transactionsLoading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Spend\"\n        subHeaderText=\"Plan\"\n        colorClassName=\"section-header-blue\"\n      />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Income</h2>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>Waiwai category</th>\n                    <th></th>\n                    <th>Budget for {props.spendRangeDaysSelected} days</th>\n                    <th>Earned last {props.spendRangeDaysSelected} days</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Income Total</td>\n                    <td></td>\n                    <td></td>\n                    <td>{currencyFormatter.format(props.incomeSum)}</td>\n                  </tr>\n                  <tr>\n                    <td>Paycheck Total</td>\n                    <td></td>\n                    <td></td>\n                    <td>{currencyFormatter.format(props.paycheckSum)}</td>\n                  </tr>\n                  <tr>\n                    <td>Other Income Total</td>\n                    <td></td>\n                    <td></td>\n                    <td>{currencyFormatter.format(props.otherIncomeSum)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n              <div className=\"mt-5\">\n                <h3>Add Income Sources</h3>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <label htmlFor=\"pay-frequency\">Paycheck Frequency</label>\n                  <br />\n                  <select\n                    className=\"selectpicker form-control custom-select\"\n                    data-style=\"btn btn-default\"\n                    defaultValue=\"0\"\n                  >\n                    <option disabled value=\"0\">\n                      {\" \"}\n                      Choose date range\n                    </option>\n                    <option value=\"1\">Weekly</option>\n                    <option value=\"1\">Bi-weekly</option>\n                    <option value=\"1\">Bi-monthly</option>\n                    <option value=\"1\">Monthly</option>\n                  </select>\n                  <br />\n                  <label className=\"mt-4\">Paycheck amount</label>\n                  <br />\n                  <input className=\"form-control\"></input>\n                </div>\n                <div className=\"col\">\n                  <label htmlFor=\"other-frequency\">\n                    Other Income Frequency\n                  </label>\n                  <br />\n                  <select\n                    className=\"selectpicker form-control custom-select\"\n                    data-style=\"btn btn-default\"\n                    defaultValue=\"0\"\n                  >\n                    <option disabled value=\"0\">\n                      {\" \"}\n                      Choose date range\n                    </option>\n                    <option value=\"1\">Weekly</option>\n                    <option value=\"1\">Bi-weekly</option>\n                    <option value=\"1\">Bi-monthly</option>\n                    <option value=\"1\">Monthly</option>\n                  </select>\n                  <br />\n                  <label className=\"mt-4\">Other Income Amount</label>\n                  <br />\n                  <input className=\"form-control\"></input>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button className=\"btn secondary mt-4\">Save</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>Expenses</h2>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>Waiwai category</th>\n                    <th></th>\n                    <th>Budget for {props.spendRangeDaysSelected} days</th>\n                    <th>Spent last {props.spendRangeDaysSelected} days</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.categoriesThisSpendRange.map((category, i) => {\n                    return (\n                      <SpendPlanRow\n                        key={category.name}\n                        category={category}\n                      ></SpendPlanRow>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  incomeSum: state.plaid.incomeSum,\n  paycheckSum: state.plaid.paycheckSum,\n  otherIncomeSum: state.plaid.otherIncomeSum,\n  categoriesThisSpendRange: state.plaid.categoriesThisSpendRange,\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n  accountsLoading: state.plaid.accountsLoading,\n  transactionsLoading: state.plaid.transactionsLoading,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(SpendPlan);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport MUIDataTable from \"mui-datatables\"; // https://github.com/gregnb/mui-datatables\nimport Loading from \"../../utils/loading.js\";\nimport ColorHeader from \"../layout/ColorHeader\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\n\nconst ManageTransactions = (props) => {\n  if (props.accountsLoading || props.transactionsLoading) {\n    return <Loading />;\n  }\n  // Setting up mui table\n  const transactionMUIColumns = [\n    { label: \"Date\", name: \"date\" },\n    { label: \"Account\", name: \"account\" },\n    { label: \"Name\", name: \"name\" },\n    { label: \"Amount\", name: \"amount\" },\n    { label: \"Category\", name: \"category\" },\n    {\n      label: \"Update\",\n      name: \"update\",\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex) => {\n          return <button className=\"btn secondary\">Change Category</button>;\n        },\n      },\n    },\n    {\n      label: \"Reviewed?\",\n      name: \"reviewed\",\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex) => {\n          return <button className=\"btn secondary\">&#x2713;</button>;\n        },\n      },\n    },\n  ];\n  const optionsMUI = {\n    filterType: \"checkbox\",\n    selectableRows: \"none\",\n    sortOrder: { name: \"date\", direction: \"desc\" },\n  };\n\n  let transactionsData = [];\n  if (props.transactions) {\n    props.transactions.forEach(function (account) {\n      account.transactions.forEach(function (transaction) {\n        transactionsData.push({\n          account: account.accountName,\n          date: transaction.date,\n          category: transaction.category[0],\n          name: transaction.name,\n          amount: currencyFormatter.format(transaction.amount),\n        });\n      });\n    });\n  }\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Transaction\"\n        subHeaderText=\"History\"\n        colorClassName=\"section-header-green\"\n      />\n      {/* Commenting this out because in this version we won't have need/want/save */}\n      {/*<div className=\"section section-donuts\">\n          <div className=\"container\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-lg-3 col-6\">Donut Graph</div>\n              <div className=\"col-lg-3 col-6\">\n                <h2 className=\"\">70%</h2>\n              </div>\n              <div className=\"col-lg-3 col-6\">Graph</div>\n              <div className=\"col-lg-3 col-6\">Graph</div>\n            </div>\n          </div>\n        </div>*/}\n      <div className=\"section table-section\">\n        <div className=\"container\">\n          <MUIDataTable\n            title={\"Manage Transactions\"}\n            data={transactionsData}\n            columns={transactionMUIColumns}\n            options={optionsMUI}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  transactions: state.plaid.transactions,\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n  transactionsLoading: state.plaid.transactionsLoading,\n});\nconst mapDispatchToProps = {};\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTransactions);\n","import axios from \"axios\";\n\nimport {\n  ADD_ACCOUNT,\n  UPDATE_ACCOUNT,\n  REFRESH_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n  USER_FIRST_VISIT,\n} from \"./types\";\n\nimport { processTransactionList } from \"../utils/processTransactionList.js\";\n\nconst setAxiosAuth = (token) => {\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n};\n\n// Add account\nexport const addAccount = (accessToken, plaidData) => (dispatch, getState) => {\n  const state = getState();\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  axios\n    .post(\"/api/plaid/accounts/add\", plaidData)\n    .then((res) =>\n      dispatch({\n        type: ADD_ACCOUNT,\n        payload: res.data,\n      })\n    )\n    .then((data) => {\n      if (state.plaid.accounts) {\n        return dispatch(\n          getTransactions(\n            accessToken,\n            state.plaid.accounts.concat(data.payload)\n          )\n        );\n      } else {\n        return null;\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\n// Refresh account\nexport const refreshAccount = (plaidData) => (dispatch) => {\n  const id = plaidData.metadata.institution.institution_id;\n  const accounts = plaidData.accounts;\n  axios\n    .post(`/api/plaid/accounts/refresh/${id}`, plaidData)\n    .then((res) =>\n      dispatch({\n        type: REFRESH_ACCOUNT,\n        payload: id,\n      })\n    )\n    .then((data) => (accounts ? dispatch(getTransactions(accounts)) : null))\n    .catch((err) => console.log(err));\n};\n\n// Delete account\nexport const deleteAccount = (accessToken, plaidData) => (\n  dispatch,\n  getState\n) => {\n  const state = getState();\n  const { accounts } = state.plaid;\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = accounts.filter((account) => account._id !== id);\n    axios\n      .delete(`/api/plaid/accounts/${id}`)\n      .then((res) =>\n        dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id,\n        })\n      )\n      .then(\n        newAccounts ? dispatch(getTransactions(accessToken, newAccounts)) : null\n      )\n      .catch((err) => console.log(err));\n  }\n};\n\n// Get all accounts for specific user with Auth0\nexport const getAccounts = (accessToken) => (dispatch) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  dispatch(setAccountsLoading());\n  axios\n    .get(\"/api/plaid/accounts\")\n    .then((res) =>\n      dispatch({\n        type: GET_ACCOUNTS,\n        payload: res.data,\n      })\n    )\n    .catch((err) => {\n      console.log(\"Error 400 indicates user hasn't added any accounts yet\");\n      dispatch({\n        type: USER_FIRST_VISIT,\n        payload: null,\n      });\n    });\n};\n\n// Accounts loading\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING,\n  };\n};\n\n// Get Transactions with Auth0\nexport const getTransactions = (accessToken, plaidData) => (\n  dispatch,\n  getState\n) => {\n  if (accessToken) {\n    setAxiosAuth(accessToken);\n  }\n  if (plaidData && plaidData.length !== 0) {\n    dispatch(setTransactionsLoading());\n    axios\n      .post(\"/api/plaid/accounts/transactions\", plaidData)\n      .then((res) => {\n        // Need to check if there are transactions?\n        if (res.data.transactions) {\n          const state = getState();\n          dispatch(\n            processTransactionList(res.data.transactions, state.auth.budgets)\n          );\n          dispatch({\n            type: GET_TRANSACTIONS,\n            payload: res.data.transactions,\n          });\n        } else {\n          // Should throw no a tranasactions error here\n        }\n        if (res.data.needUpdate && res.data.needUpdate.length) {\n          res.data.needUpdate.forEach(function (account) {\n            dispatch({\n              type: UPDATE_ACCOUNT,\n              payload: account,\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({\n          type: GET_TRANSACTIONS,\n          payload: null,\n        });\n      });\n  }\n};\n\n// Transactions loading\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING,\n  };\n};\n","import React, { useCallback } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\n// Can use the following to test component version of Plaid Link\n//import { PlaidLink } from \"react-plaid-link\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  addAccount,\n  refreshAccount,\n  deleteAccount,\n} from \"../actions/accountActions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst ExportDeleteAccountButton = (props) => {\n  const { account, deleteAccount } = props;\n  const accountID = account._id;\n  const { getAccessTokenSilently } = useAuth0();\n\n  const onDeleteClick = useCallback(() => {\n    // send token to server\n    const plaidData = {\n      id: accountID,\n    };\n    getAccessTokenSilently().then((accessToken) => {\n      deleteAccount(accessToken, plaidData);\n    });\n  }, [accountID, getAccessTokenSilently, deleteAccount]);\n\n  return <Button onClick={onDeleteClick}>Delete</Button>;\n};\n\nconst deleteMapStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\n\nexport const DeleteAccountButton = connect(deleteMapStateToProps, {\n  deleteAccount,\n})(ExportDeleteAccountButton);\n\nconst PlaidToExport = (props) => {\n  const { refreshAccount, addAccount } = props;\n  const { getAccessTokenSilently } = useAuth0();\n\n  // In theory you can tell the Plaid Link to get an Auth0 token when it opens\n  /*const onOpen = useCallback((eventName, metadata)) => {\n      if (eventName === \"OPEN\") { .... }\n  },[getAccessTokenSilently]);*/\n\n  const newAccountOnSuccess = useCallback(\n    (token, metadata) => {\n      // send token to server\n      const plaidData = {\n        public_token: token,\n        metadata: metadata,\n      };\n      getAccessTokenSilently().then((accessToken) => {\n        addAccount(accessToken, plaidData);\n      });\n    },\n    [addAccount, getAccessTokenSilently]\n  );\n  const refreshAccountOnSuccess = useCallback(\n    (token, metadata) => {\n      // send token to server\n      const plaidData = {\n        public_token: token,\n        metadata: metadata,\n      };\n\n      getAccessTokenSilently().then((token) => {\n        refreshAccount({ token: token, plaidData: plaidData });\n      });\n    },\n    [getAccessTokenSilently, refreshAccount]\n  );\n\n  const config = {\n    //token: \"\",\n    clientName: process.env.REACT_APP_NAME,\n    publicKey: process.env.REACT_APP_PLAID_PUBLIC_KEY,\n    env: process.env.REACT_APP_PLAID_ENV_STRING,\n    product: [\"transactions\"],\n    onSuccess: newAccountOnSuccess,\n    // ...\n  };\n\n  if (props.existingAccount && props.existingAccount.toRefresh) {\n    config.token = props.existingAccount.publicToken;\n    config.onSuccess = refreshAccountOnSuccess;\n  }\n\n  const { open, ready /*, error*/ } = usePlaidLink(config);\n\n  return (\n    <>\n      {/* Note this button is used to refresh accounts and also add new accounts\n      depending on what props are supplied*/}\n      <Button\n        onClick={() => open()}\n        disabled={\n          !ready || (props.existingAccount && !props.existingAccount.toRefresh)\n        }\n      >\n        {props.buttonText}\n      </Button>\n      {/* Can use the following to test component version of Plaid Link*/}\n      {/*<PlaidLink {...config}>Connect a bank account</PlaidLink>*/}\n    </>\n  );\n};\n\nPlaidToExport.displayName = \"Plaid\";\n\nconst mapStateToProps = (state) => ({});\nconst mapDispatchToProps = {\n  addAccount,\n  refreshAccount,\n};\n\n// Note that there is probably a better way to do this with React hooks now\nexport const PlaidButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlaidToExport);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PlaidButton, DeleteAccountButton } from \"../../utils/plaidButton.js\";\nimport ColorHeader from \"../layout/ColorHeader\";\n\nconst BankAccountsPage = (props) => {\n  const listAccounts = props.accounts.map((account, i) => {\n    return (\n      <div className=\"row mb-4\" key={account._id}>\n        <div className=\"col\">\n          <h2>{account.institutionName}</h2>\n          <PlaidButton\n            className=\"Secondary\"\n            buttonText=\"Refresh\"\n            existingAccount={account}\n          />{\" \"}\n          <span className=\"notButton\">\n            <DeleteAccountButton account={account} />\n          </span>\n        </div>\n      </div>\n    );\n  });\n\n  const addButton = (\n    <div className=\"row\">\n      <div className=\"col\">\n        <PlaidButton\n          buttonText=\"Connect a new bank account\"\n          existingAccount={null}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Bank Accounts\"\n        subHeaderText=\"\"\n        colorClassName=\"section-header-blue\"\n      />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\"></div>\n          </div>\n          {props.accountsLoading ? <></> : listAccounts}\n          {addButton}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\nconst mapDispatchToProps = {};\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, mapDispatchToProps)(BankAccountsPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ColorHeader from \"../layout/ColorHeader\";\nconst UserProfilePage = (props) => {\n  const { user } = useAuth0();\n  const spendRangeDaysOptions = [7, 14, 30];\n  return (\n    <>\n      <ColorHeader\n        mainHeaderText=\"Profile\"\n        subHeaderText=\"\"\n        colorClassName=\"section-header-green\"\n      />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <img src={user.picture} alt={user.name} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">Name: {user.name}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">Email: {user.email}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">You are using this date range:</div>\n          </div>\n          <div>\n            <div className=\"form-group\">\n              <select\n                className=\"selectpicker\"\n                data-style=\"btn btn-default\"\n                defaultValue={props.spendRangeDaysSelected}\n              >\n                <option disabled value={0}>\n                  {\" \"}\n                  Choose date range\n                </option>\n                {spendRangeDaysOptions.map((daysOption, i) => {\n                  return (\n                    <option key={i} value={daysOption}>\n                      {daysOption + \" days\"}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  spendRangeDaysSelected: state.plaid.spendRangeDaysSelected,\n});\n\n// Note that there is probably a better way to do this with React hooks now\nexport default connect(mapStateToProps, {})(UserProfilePage);\n","import {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  SET_BUDGETS,\n  SET_CATEGORY_MAP,\n} from \"../actions/types\";\nimport { AUTH_MOCK_DATA } from \"./reduxMockData\";\n\nconst isEmpty = require(\"is-empty\");\n// Try loading some demo/example data\nconst initialState = AUTH_MOCK_DATA;\n// Below here is the normal initial state\n/*const initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false,\n  budgets: {},\n  categoryMap: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload,\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_BUDGETS:\n      return {\n        ...state,\n        budgets: action.payload.allBudgets,\n        expenseBudgetSum: action.payload.expenseBudgetSum,\n      };\n    case SET_CATEGORY_MAP:\n      return {\n        ...state,\n        categoryMap: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","export const AUTH_MOCK_DATA = {\n  isAuthenticated: true,\n  user: {\n    id: \"123456789012345678901234\",\n    name: \"Test Person\",\n    iat: null,\n    exp: null,\n    budgets: {},\n    categoryMap: {},\n  },\n  loading: false,\n  budgets: {\n    Food: 200,\n    Debt: 50,\n    Transportation: 20,\n    Entertainment: 10,\n    Personal: 100,\n  },\n  expenseBudgetSum: 380,\n  categoryMap: {\n    \"Food and Drink\": \"Groceries\",\n    Shops: \"Shopping\",\n    Travel: \"Travel\",\n    Recreation: \"Entertainment\",\n  },\n};\n// NOTE THAT I'VE ADDED EXTRA MOCK DATA FOR\n// categoriesThisSpendRange, spendingByCategory, incomeSum, and spendingSum\n// (because it could be a different time period)\nexport const PLAID_MOCK_DATA = {\n  accounts: [\n    {\n      _id: \"5f463ad8516e210bc63abece\",\n      userId: \"google-oauth2|105271710635022631997\",\n      itemId: \"opQp5nVm7yUowrAPe6L1iJBpJzWz7JiopxMqQ\",\n      institutionId: \"ins_6\",\n      institutionName: \"US Bank\",\n      __v: 0,\n    },\n    {\n      _id: \"5f46de58a4441204a56d2039\",\n      userId: \"google-oauth2|105271710635022631997\",\n      itemId: \"NxNQP1RNo5uoQgRqjqqNtwnJXJ38axTyjJ9wA\",\n      institutionId: \"ins_13\",\n      institutionName: \"PNC\",\n      __v: 0,\n    },\n  ],\n  transactions: [\n    {\n      accountName: \"PNC\",\n      transactions: [\n        {\n          account_id: \"RNMLGg8MW5frvGZMlMMbFD8R1vW1wRuRjAKxw\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-26\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"EyKx349Kj5SjlZ4rRrrzhN43bAveWjuXbJEaQ\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n        },\n        {\n          account_id: \"Dmq3Ba8qP5tP9aAQwQQ8iMaGpJBpjGSveJglG\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"RNMLGg8MW5frvGZMlMMbFD8KaZVyRbFR83G6X\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"Dmq3Ba8qP5tP9aAQwQQ8iMaGpJBpjGSveJglG\",\n          account_owner: null,\n          amount: -2078.5,\n          authorized_date: null,\n          category: [\"Debt\", \"\"],\n          category_id: \"16000000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"Dmq3Ba8qP5tP9aAQwQQ8iMakxA3mGXtvbxXA7\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\"],\n          waiwai_categories: [\"Debt\", \"\"],\n        },\n        {\n          account_id: \"Dmq3Ba8qP5tP9aAQwQQ8iMaGpJBpjGSveJglG\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"XZGlrn8Gy5CmzK31W11XtzVRj3dmZLCdGqx7y\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"Dmq3Ba8qP5tP9aAQwQQ8iMaGpJBpjGSveJglG\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Personal\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"6Z6MvWg6R8C8my1KqKKjhPo1Mqjagktg4LxEx\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Shops\", \"Sporting Goods\"],\n          waiwai_categories: [\"Personal\", \"Sporting Goods\"],\n        },\n        {\n          account_id: \"6Z6MvWg6R8C8my1KqKKjhPogJ6AJygugJeWaz\",\n          account_owner: null,\n          amount: -25,\n          authorized_date: null,\n          category: [\"Debt\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"yQKxrlVKGeipaZrokooxF1B4naXE7oTyxeDJy\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\", \"Credit Card\"],\n          waiwai_categories: [\"Debt\", \"Credit Card\"],\n        },\n        {\n          account_id: \"RNMLGg8MW5frvGZMlMMbFD8R1vW1wRuRjAKxw\",\n          account_owner: null,\n          amount: -5.4,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"WQMEkGRMm5idgeMw9wwrhZJx4jz5GXulgK4d8\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n        },\n        {\n          account_id: \"VeL8qAWLb5Fn1NZlmllKTewlA1bAJltWkE45A\",\n          account_owner: null,\n          amount: -5850,\n          authorized_date: null,\n          category: [\"Personal\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"5QbZ5Eobvgikz19qZqqau1Pn5lXaGbTZ9Mpaj\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Debit\"],\n          waiwai_categories: [\"Personal\", \"Debit\"],\n        },\n        {\n          account_id: \"XZGlrn8Gy5CmzK31W11XtzVZlyNlqZidgL4MJ\",\n          account_owner: null,\n          amount: -1000,\n          authorized_date: null,\n          category: [\"Income\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"vjDzlVqDEPi75D38B88ztmygA5k17dsWrAXLv\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Deposit\"],\n          waiwai_categories: [\"Income\", \"Deposit\"],\n        },\n        {\n          account_id: \"Dmq3Ba8qP5tP9aAQwQQ8iMaGpJBpjGSveJglG\",\n          account_owner: null,\n          amount: -78.5,\n          authorized_date: null,\n          category: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"VeL8qAWLb5Fn1NZlmllKTew5dZ36lWiWzenjD\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          waiwai_categories: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n        },\n        {\n          account_id: \"RNMLGg8MW5frvGZMlMMbFD8R1vW1wRuRjAKxw\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"AGVrK3nVaRTaVgPjRjjqtmxoRPb6Wgs1zEobm\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n        },\n        {\n          account_id: \"RNMLGg8MW5frvGZMlMMbFD8R1vW1wRuRjAKxw\",\n          account_owner: null,\n          amount: -12,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"GlzadPQze5iemkW3B33oudnEz6WmAXf1kynVL\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"RNMLGg8MW5frvGZMlMMbFD8R1vW1wRuRjAKxw\",\n          account_owner: null,\n          amount: -4.33,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005043\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"nkDoAV5DZzcboBJwmww3Swz58vWy69C6vwGa7\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"RNMLGg8MW5frvGZMlMMbFD8R1vW1wRuRjAKxw\",\n          account_owner: null,\n          amount: -89.4,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"bAX4yVxXBJS1RM8DvDDxupmaL6G85WuV8Q3Rg\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"6Z6MvWg6R8C8my1KqKKjhPogJ6AJygugJeWaz\",\n          account_owner: null,\n          amount: 4.22,\n          authorized_date: null,\n          category: [\"Income\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-08-08\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"9L7p6n87qAuqvEZBQBBjF6Br1zobnqFRjaE74\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Credit\"],\n          waiwai_categories: [\"Income\", \"Credit\"],\n        },\n        {\n          account_id: \"Dmq3Ba8qP5tP9aAQwQQ8iMaGpJBpjGSveJglG\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-07-29\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"w7lBqVKlWjTQ963eXeeWfzGdlrE1gvCrJjl4M\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n        },\n        {\n          account_id: \"RNMLGg8MW5frvGZMlMMbFD8R1vW1wRuRjAKxw\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-07-27\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"mzDpAV5DQktbG5jg9ggQSewrqRybo8iL6zAG7\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n        },\n      ],\n    },\n    {\n      accountName: \"US Bank\",\n      transactions: [\n        {\n          account_id: \"W6V6RDGy9ksGE5KDNaJvfDwgK753ywflre46b\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-26\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"1X5XlEpMaWTd8qjM9JlkI1pV3Ln8jxf5g6mp3\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n        },\n        {\n          account_id: \"nLeL5nVQjAsx6Kr9ZDWAiB7MPlyEZ7C6d1GAR\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-23\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Tectra Inc\",\n          name: \"Tectra Inc\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"nLeL5nVQjAsx6Kr9ZDWAiB71mwAVjEi6d1GAx\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"nLeL5nVQjAsx6Kr9ZDWAiB7MPlyEZ7C6d1GAR\",\n          account_owner: null,\n          amount: -2078.5,\n          authorized_date: null,\n          category: [\"Debt\", \"\"],\n          category_id: \"16000000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"AUTOMATIC PAYMENT - THANK\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"ymymVnlWprtgXjzRdyWqiQpMl1RNzdUy9VDKx\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\"],\n          waiwai_categories: [\"Debt\", \"\"],\n        },\n        {\n          account_id: \"nLeL5nVQjAsx6Kr9ZDWAiB7MPlyEZ7C6d1GAR\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"KFC\",\n          name: \"KFC\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"m1715nVXPAiBDqKx8MVXS5KL9e7pDNULbBA4x\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"nLeL5nVQjAsx6Kr9ZDWAiB7MPlyEZ7C6d1GAR\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Personal\", \"Sporting Goods\"],\n          category_id: \"19046000\",\n          date: \"2020-08-22\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Madison Bicycle Shop\",\n          name: \"Madison Bicycle Shop\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"bdrdxWVzqySa347kpeWbiD9RnpBEZKcV5A3oW\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Shops\", \"Sporting Goods\"],\n          waiwai_categories: [\"Personal\", \"Sporting Goods\"],\n        },\n        {\n          account_id: \"A767nE3kmKu1nZQp93E4c4a5Qe67LaF17qo9j\",\n          account_owner: null,\n          amount: -25,\n          authorized_date: null,\n          category: [\"Debt\", \"Credit Card\"],\n          category_id: \"16001000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CREDIT CARD 3333 PAYMENT *//\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"W6V6RDGy9ksGE5KDNaJvfDw8EZLRA3clre46d\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Payment\", \"Credit Card\"],\n          waiwai_categories: [\"Debt\", \"Credit Card\"],\n        },\n        {\n          account_id: \"W6V6RDGy9ksGE5KDNaJvfDwgK753ywflre46b\",\n          account_owner: null,\n          amount: -5.4,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-08-13\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 063015 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"LE6EVDZN9PFDq5pNemZ9s9N6r5BX81cPbZ9kq\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n        },\n        {\n          account_id: \"bdrdxWVzqySa347kpeWbiD9glX8KP9fV5A3me\",\n          account_owner: null,\n          amount: -5850,\n          authorized_date: null,\n          category: [\"Personal\", \"Debit\"],\n          category_id: \"21006000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"ACH Electronic CreditGUSTO PAY 123456\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: \"ACH\",\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"Rm6m8Dgy9GtL65P4xz8aiWkwJDz9jNTRKeGP3\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Debit\"],\n          waiwai_categories: [\"Personal\", \"Debit\"],\n        },\n        {\n          account_id: \"GLALQDPxmdsNx5R1qPaVFVyZ3omPQyu1lDn69\",\n          account_owner: null,\n          amount: -1000,\n          authorized_date: null,\n          category: [\"Income\", \"Deposit\"],\n          category_id: \"21007000\",\n          date: \"2020-08-12\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"CD DEPOSIT .INITIAL.\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"GLALQDPxmdsNx5R1qPaVFVy4gdl9aPC1lDn6D\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Deposit\"],\n          waiwai_categories: [\"Income\", \"Deposit\"],\n        },\n        {\n          account_id: \"nLeL5nVQjAsx6Kr9ZDWAiB7MPlyEZ7C6d1GAR\",\n          account_owner: null,\n          amount: -78.5,\n          authorized_date: null,\n          category: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n          category_id: \"17018000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Touchstone\",\n          name: \"Touchstone Climbing\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"93D38EnMZ6iWna15LyRwuwPZl6DJyLHRLdEq5\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Recreation\", \"Gyms and Fitness Centers\"],\n          waiwai_categories: [\"Entertainment\", \"Gyms and Fitness Centers\"],\n        },\n        {\n          account_id: \"W6V6RDGy9ksGE5KDNaJvfDwgK753ywflre46b\",\n          account_owner: null,\n          amount: 500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-08-11\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"poZo5nVReASedzBMjWbDf9KJpWejZ6cL4PKpX\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n        },\n        {\n          account_id: \"W6V6RDGy9ksGE5KDNaJvfDwgK753ywflre46b\",\n          account_owner: null,\n          amount: -12,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005032\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: \"3322\",\n            zip: null,\n          },\n          merchant_name: \"McDonald's\",\n          name: \"McDonald's\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"opQp5nVm7yUowrAPe6L1iJBzXEWKd5cRa6KoA\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Fast Food\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"W6V6RDGy9ksGE5KDNaJvfDwgK753ywflre46b\",\n          account_owner: null,\n          amount: -4.33,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005043\",\n          date: \"2020-08-10\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Starbucks\",\n          name: \"Starbucks\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"gjdjbWVa37UakeDMZPGbiEZ5ApLwoPfgbAMEd\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\", \"Coffee Shop\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"W6V6RDGy9ksGE5KDNaJvfDwgK753ywflre46b\",\n          account_owner: null,\n          amount: -89.4,\n          authorized_date: null,\n          category: [\"Food\", \"Restaurants\"],\n          category_id: \"13005000\",\n          date: \"2020-08-09\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Sparkfun\",\n          name: \"SparkFun\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"8BABpEGjQZsRedykq8ZntlKzrB6aJAFwADrWE\",\n          transaction_type: \"place\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Food and Drink\", \"Restaurants\"],\n          waiwai_categories: [\"Food\", \"Restaurants\"],\n        },\n        {\n          account_id: \"A767nE3kmKu1nZQp93E4c4a5Qe67LaF17qo9j\",\n          account_owner: null,\n          amount: 4.22,\n          authorized_date: null,\n          category: [\"Income\", \"Credit\"],\n          category_id: \"21005000\",\n          date: \"2020-08-08\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: null,\n          name: \"INTRST PYMNT\",\n          payment_channel: \"other\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"A767nE3kmKu1nZQp93E4c4aDBmJMw7u17qo9n\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Transfer\", \"Credit\"],\n          waiwai_categories: [\"Income\", \"Credit\"],\n        },\n        {\n          account_id: \"nLeL5nVQjAsx6Kr9ZDWAiB7MPlyEZ7C6d1GAR\",\n          account_owner: null,\n          amount: -500,\n          authorized_date: null,\n          category: [\"Transportation\", \"Airlines and Aviation Services\"],\n          category_id: \"22001000\",\n          date: \"2020-07-29\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"United Airlines\",\n          name: \"United Airlines\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"vGyGqnVWklTwX4RJ9pAkiD4oamXRMxcWjyXvB\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Airlines and Aviation Services\"],\n          waiwai_categories: [\n            \"Transportation\",\n            \"Airlines and Aviation Services\",\n          ],\n        },\n        {\n          account_id: \"W6V6RDGy9ksGE5KDNaJvfDwgK753ywflre46b\",\n          account_owner: null,\n          amount: -6.33,\n          authorized_date: null,\n          category: [\"Transportation\", \"Taxi\"],\n          category_id: \"22016000\",\n          date: \"2020-07-27\",\n          iso_currency_code: \"USD\",\n          location: {\n            address: null,\n            city: null,\n            lat: null,\n            lon: null,\n            state: null,\n            store_number: null,\n            zip: null,\n          },\n          merchant_name: \"Uber\",\n          name: \"Uber 072515 SF**POOL**\",\n          payment_channel: \"in store\",\n          payment_meta: {\n            by_order_of: null,\n            payee: null,\n            payer: null,\n            payment_method: null,\n            payment_processor: null,\n            ppd_id: null,\n            reason: null,\n            reference_number: null,\n          },\n          pending: false,\n          pending_transaction_id: null,\n          transaction_id: \"EMbM9D4B63iKn5wo9mJVCVgoJNnXBrCXwWE4v\",\n          transaction_type: \"special\",\n          unofficial_currency_code: null,\n          plaid_categories: [\"Travel\", \"Taxi\"],\n          waiwai_categories: [\"Transportation\", \"Taxi\"],\n        },\n      ],\n    },\n  ],\n  accountsLoading: false,\n  transactionsLoading: false,\n  userFirstVisit: false,\n  incomeSum: 1008.44,\n  paycheckSum: 0,\n  otherIncomeSum: 1008.44,\n  spendingSum: 22311.58,\n  spendRangeDaysSelected: 30,\n  totalTransactionCount: 34,\n  reviewedTransactionCount: 0,\n  categoriesThisSpendRange: [\n    {\n      x: 1,\n      waiwaiName: \"Housing\",\n      plaidName: \"Housing\",\n      name: \"Housing\",\n    },\n    {\n      x: 2,\n      waiwaiName: \"Transportation\",\n      plaidName: \"Transportation\",\n      name: \"Transportation\",\n    },\n    {\n      x: 3,\n      waiwaiName: \"Food\",\n      plaidName: \"Food\",\n      name: \"Food\",\n    },\n    {\n      x: 4,\n      waiwaiName: \"Utilities\",\n      plaidName: \"Utilities\",\n      name: \"Utilities\",\n    },\n    {\n      x: 5,\n      waiwaiName: \"Insurance & Healthcare\",\n      plaidName: \"Insurance & Healthcare\",\n      name: \"Insurance & Healthcare\",\n    },\n    {\n      x: 6,\n      waiwaiName: \"Debt\",\n      plaidName: \"Debt\",\n      name: \"Debt\",\n    },\n    {\n      x: 7,\n      waiwaiName: \"Personal\",\n      plaidName: \"Personal\",\n      name: \"Personal\",\n    },\n    {\n      x: 8,\n      waiwaiName: \"Education\",\n      plaidName: \"Education\",\n      name: \"Education\",\n    },\n    {\n      x: 9,\n      waiwaiName: \"Child Care\",\n      plaidName: \"Child Care\",\n      name: \"Child Care\",\n    },\n    {\n      x: 10,\n      waiwaiName: \"Entertainment\",\n      plaidName: \"Recreation\",\n      name: \"Entertainment\",\n    },\n    {\n      x: 11,\n      waiwaiName: \"Savings\",\n      plaidName: \"Savings\",\n      name: \"Savings\",\n    },\n    {\n      x: 12,\n      waiwaiName: \"Income\",\n      plaidName: \"Income\",\n      name: \"Income\",\n    },\n  ],\n  spendingByCategory: {\n    Housing: 0,\n    Transportation: 1036.12,\n    Food: 2211.46,\n    Utilities: 0,\n    \"Insurance & Healthcare\": 0,\n    Debt: 4207,\n    Personal: 12700,\n    Education: 0,\n    \"Child Care\": 0,\n    Entertainment: 157,\n    Savings: 0,\n    Income: 2000,\n  },\n  sortedCategoriesUnderBudget: [\n    \"Savings\",\n    \"Utilities\",\n    \"Insurance & Healthcare\",\n    \"Education\",\n    \"Child Care\",\n    \"Housing\",\n  ],\n  sortedCategoriesOverBudget: [\n    \"Transportation\",\n    \"Food\",\n    \"Debt\",\n    \"Personal\",\n    \"Income\",\n    \"Entertainment\",\n  ],\n};\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_ACCOUNT,\n  REFRESH_ACCOUNT,\n  UPDATE_ACCOUNT,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  ACCOUNTS_LOADING,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n  SET_TRANSACTION_DATA,\n  USER_FIRST_VISIT,\n} from \"../actions/types\";\n\nimport { PLAID_MOCK_DATA } from \"./reduxMockData\";\n\n// Try loading some demo/example data\nconst initialState = PLAID_MOCK_DATA;\nif (process.env.REACT_APP_LIVEDATA === \"true\") {\n  initialState.accounts = [];\n  initialState.transactions = [];\n  initialState.accountsLoading = true;\n  initialState.transactionsLoading = true;\n  initialState.userFirstVisit = false;\n}\n// Below here is the normal initial state\n/*const initialState = {\n  accounts: [],\n  transactions: [],\n  accountsLoading: false,\n  transactionsLoading: false,\n  incomeSum: 0.00,\n  spendingSum: 0.00,\n  spendRangeDaysSelected: 30,\n  totalTransactionCount: 0,\n  reviewedTransactionCount: 0,\n  categoriesThisSpendRange: [],\n  spendingByCategory: {},\n};*/\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ACCOUNTS_LOADING:\n      return {\n        ...state,\n        accountsLoading: true,\n      };\n    case ADD_ACCOUNT:\n      return {\n        ...state,\n        accounts: [...state.accounts, action.payload],\n        accountsLoading: false,\n        userFirstVisit: false,\n      };\n    // The payload to refresh an account is the same account (or new account)\n    case REFRESH_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account.institutionId !== action.payload) {\n            return account;\n          } else {\n            return {\n              ...account,\n              toRefresh: false,\n            };\n          }\n        }),\n      };\n    // The payload to update an account is the newly edited account\n    case UPDATE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.map((account) => {\n          if (account._id !== action.payload._id) {\n            return account;\n          } else {\n            return {\n              ...action.payload,\n            };\n          }\n        }),\n      };\n    case DELETE_ACCOUNT:\n      return {\n        ...state,\n        accounts: state.accounts.filter(\n          (account) => account._id !== action.payload\n        ),\n      };\n    case GET_ACCOUNTS:\n      return {\n        ...state,\n        accounts: action.payload,\n        accountsLoading: false,\n      };\n    case TRANSACTIONS_LOADING:\n      return {\n        ...state,\n        transactionsLoading: true,\n      };\n    case GET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: action.payload,\n        transactionsLoading: false,\n      };\n    // NOTE: this is not the redux way, this should be designed differently in next refactor\n    case SET_TRANSACTION_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case USER_FIRST_VISIT:\n      return {\n        ...state,\n        userFirstVisit: true,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport accountReducer from \"./accountReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  plaid: accountReducer,\n});\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { getAccounts, getTransactions } from \"../../actions/accountActions.js\";\nimport { getUserInfo } from \"../../actions/authActions.js\";\n\nconst TransactionBootstrap = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const { accounts, getTransactions, transactions } = props;\n  useEffect(() => {\n    if (transactions && transactions.length === 0) {\n      getAccessTokenSilently().then((accessToken) => {\n        getTransactions(accessToken, accounts);\n      });\n    }\n  }, [accounts, getAccessTokenSilently, getTransactions, transactions]);\n  return <></>;\n};\n\nconst transactionStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  transactions: state.plaid.transactions,\n});\nconst transactionDispatchToProps = {\n  getTransactions,\n};\n\nconst UseTransactionBootstrap = connect(\n  transactionStateToProps,\n  transactionDispatchToProps\n)(TransactionBootstrap);\n\nconst AccountBootstrap = (props) => {\n  const { getAccessTokenSilently } = useAuth0();\n  const { accounts, getAccounts, accountsLoading, getUserInfo } = props;\n  useEffect(() => {\n    if (accounts && accounts.length === 0) {\n      getAccessTokenSilently().then((accessToken) => {\n        getUserInfo(accessToken);\n        getAccounts(accessToken, accounts);\n      });\n    }\n  }, [accounts, getAccessTokenSilently, getAccounts, getUserInfo]);\n  return accountsLoading ? <></> : <UseTransactionBootstrap />;\n};\n\nconst accountStateToProps = (state) => ({\n  accounts: state.plaid.accounts,\n  accountsLoading: state.plaid.accountsLoading,\n});\nconst accountDispatchToProps = {\n  getAccounts,\n  getUserInfo,\n};\n\nexport default connect(\n  accountStateToProps,\n  accountDispatchToProps\n)(AccountBootstrap);\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Auth0ProviderWithHistory from \"./utils/auth0-provider-with-history.js\";\nimport PrivateRoute from \"./utils/privateRoute.js\";\nimport Loading from \"./utils/loading.js\";\nimport \"./App.scss\";\nimport Header from \"./components/layout/Header.js\";\nimport Footer from \"./components/layout/Footer.js\";\nimport HomePage from \"./components/layout/HomePage.js\";\nimport SpendStory from \"./components/spend/SpendStory.js\";\nimport SpendPlan from \"./components/spend/SpendPlan.js\";\nimport ManageTransactions from \"./components/spend/ManageTransactions.js\";\nimport BankAccountsPage from \"./components/profile/BankAccountsPage.js\";\nimport UserProfilePage from \"./components/profile/UserProfilePage.js\";\nimport rootReducer from \"./reducers\";\nimport AccountBootstrap from \"./components/layout/TransactionBootstrap.js\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nconst Routing = () => {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <Header />\n      {isAuthenticated && process.env.REACT_APP_LIVEDATA === \"true\" ? (\n        <AccountBootstrap />\n      ) : (\n        <></>\n      )}\n      <Switch>\n        <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n          {isAuthenticated ? <Redirect to=\"/spend-story\" /> : <HomePage />}\n        </Route>\n        <PrivateRoute path=\"/spend-story\" component={SpendStory} />\n        <PrivateRoute path=\"/spend-plan\" component={SpendPlan} />\n        <PrivateRoute\n          path=\"/manage-transactions\"\n          component={ManageTransactions}\n        />\n        <PrivateRoute path=\"/user-profile\" component={UserProfilePage} />\n        <PrivateRoute path=\"/bank-accounts\" component={BankAccountsPage} />\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Auth0ProviderWithHistory>\n          <Routing />\n        </Auth0ProviderWithHistory>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}